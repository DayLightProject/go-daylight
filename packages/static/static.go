// Code generated by go-bindata.
// sources:
// static/.idea/copyright/profiles_settings.xml
// static/.idea/modules.xml
// static/.idea/static.iml
// static/.idea/workspace.xml
// static/1block
// static/Global.tpl
// static/accounts.html
// static/alert_success.html
// static/anonym_money_transfer.html
// static/app_catalog.html
// static/app_template.html
// static/backup.html
// static/basic.tpl
// static/beta.html
// static/block_explorer.html
// static/btc.html
// static/cb_citizens.html
// static/cb_citizens_new_user.html
// static/cb_citizens_requests_foreigners.html
// static/cb_currency_exchange.html
// static/cb_delegate.html
// static/cb_emission_account.html
// static/cb_emission_fixed_amount.html
// static/cb_emission_proportional.html
// static/cb_new_representative.html
// static/cb_representative_details.html
// static/cb_representatives.html
// static/cb_select_emission.html
// static/change_node_key.html
// static/change_state_smart_laws.html
// static/check_citizen_status.html
// static/citizen_admission_high_school.html
// static/citizen_bill_payment.html
// static/citizen_divorce.html
// static/citizen_inheritance.html
// static/citizen_marriage_contract.html
// static/citizen_marriage_registration.html
// static/citizen_money_transfer.html
// static/citizen_new_company.html
// static/citizen_political_party.html
// static/citizen_property.html
// static/citizen_rule_details.html
// static/company_application_purchase.html
// static/company_contract.html
// static/company_crowdfunding.html
// static/company_currency_exchange.html
// static/company_customhouse.html
// static/company_new_company.html
// static/company_new_good.html
// static/company_new_item.html
// static/company_new_order.html
// static/company_new_shares.html
// static/company_offer_seller.html
// static/company_offer_transport.html
// static/company_select_transport.html
// static/company_shares_exchange.html
// static/company_smart_contracts.html
// static/contracts.html
// static/countries/countries.json
// static/countries/flags.png
// static/countries/mm.png
// static/countries/no_citizenship.png
// static/countup.html
// static/css/style.css
// static/dashboard_anonym.html
// static/dashboard_cb.html
// static/dashboard_company.html
// static/dashboard_gov.html
// static/dashboard_health.html
// static/data/entries_doctor.json
// static/data/immunizations.json
// static/data/medication.json
// static/data/patients.json
// static/description.tpl
// static/edit_column.html
// static/edit_contract.html
// static/edit_language.html
// static/edit_menu.html
// static/edit_page.html
// static/edit_signature.html
// static/edit_state_parameters.html
// static/edit_table.html
// static/edit_wallet.html
// static/export_tpl.html
// static/fonts/FontAwesome.otf
// static/fonts/PFSquareSansPro-Bold.eot
// static/fonts/PFSquareSansPro-Bold.svg
// static/fonts/PFSquareSansPro-Bold.ttf
// static/fonts/PFSquareSansPro-Bold.woff
// static/fonts/PFSquareSansPro-Bold.woff2
// static/fonts/PFSquareSansPro-Light.eot
// static/fonts/PFSquareSansPro-Light.svg
// static/fonts/PFSquareSansPro-Light.ttf
// static/fonts/PFSquareSansPro-Light.woff
// static/fonts/PFSquareSansPro-Light.woff2
// static/fonts/PFSquareSansPro-Medium.eot
// static/fonts/PFSquareSansPro-Medium.svg
// static/fonts/PFSquareSansPro-Medium.ttf
// static/fonts/PFSquareSansPro-Medium.woff
// static/fonts/PFSquareSansPro-Medium.woff2
// static/fonts/PFSquareSansPro-Regular.eot
// static/fonts/PFSquareSansPro-Regular.svg
// static/fonts/PFSquareSansPro-Regular.ttf
// static/fonts/PFSquareSansPro-Regular.woff
// static/fonts/PFSquareSansPro-Regular.woff2
// static/fonts/Simple-Line-Icons.eot
// static/fonts/Simple-Line-Icons.svg
// static/fonts/Simple-Line-Icons.ttf
// static/fonts/Simple-Line-Icons.woff
// static/fonts/Simple-Line-Icons.woff2
// static/fonts/fontawesome-webfont.eot
// static/fonts/fontawesome-webfont.svg
// static/fonts/fontawesome-webfont.ttf
// static/fonts/fontawesome-webfont.woff
// static/fonts/fontawesome-webfont.woff2
// static/fonts/glyphicons-filetypes-regular.eot
// static/fonts/glyphicons-filetypes-regular.svg
// static/fonts/glyphicons-filetypes-regular.ttf
// static/fonts/glyphicons-filetypes-regular.woff
// static/fonts/glyphicons-filetypes-regular.woff2
// static/fonts/glyphicons-halflings-regular.eot
// static/fonts/glyphicons-halflings-regular.svg
// static/fonts/glyphicons-halflings-regular.ttf
// static/fonts/glyphicons-halflings-regular.woff
// static/fonts/glyphicons-halflings-regular.woff2
// static/fonts/glyphicons-regular.eot
// static/fonts/glyphicons-regular.svg
// static/fonts/glyphicons-regular.ttf
// static/fonts/glyphicons-regular.woff
// static/fonts/glyphicons-regular.woff2
// static/fonts/glyphicons-social-regular.eot
// static/fonts/glyphicons-social-regular.svg
// static/fonts/glyphicons-social-regular.ttf
// static/fonts/glyphicons-social-regular.woff
// static/fonts/glyphicons-social-regular.woff2
// static/forging.html
// static/gen_citizen.html
// static/gen_keys.html
// static/generator/ckeditor/adapters/jquery.js
// static/generator/ckeditor/build-config.js
// static/generator/ckeditor/ckeditor.js
// static/generator/ckeditor/config.js
// static/generator/ckeditor/content.css
// static/generator/ckeditor/contents.css
// static/generator/ckeditor/core/_bootstrap.js
// static/generator/ckeditor/core/ckeditor.js
// static/generator/ckeditor/core/ckeditor_base.js
// static/generator/ckeditor/core/ckeditor_basic.js
// static/generator/ckeditor/core/command.js
// static/generator/ckeditor/core/commanddefinition.js
// static/generator/ckeditor/core/config.js
// static/generator/ckeditor/core/creators/inline.js
// static/generator/ckeditor/core/creators/themedui.js
// static/generator/ckeditor/core/dataprocessor.js
// static/generator/ckeditor/core/dom/comment.js
// static/generator/ckeditor/core/dom/document.js
// static/generator/ckeditor/core/dom/documentfragment.js
// static/generator/ckeditor/core/dom/domobject.js
// static/generator/ckeditor/core/dom/element.js
// static/generator/ckeditor/core/dom/elementpath.js
// static/generator/ckeditor/core/dom/event.js
// static/generator/ckeditor/core/dom/iterator.js
// static/generator/ckeditor/core/dom/node.js
// static/generator/ckeditor/core/dom/nodelist.js
// static/generator/ckeditor/core/dom/range.js
// static/generator/ckeditor/core/dom/rangelist.js
// static/generator/ckeditor/core/dom/text.js
// static/generator/ckeditor/core/dom/walker.js
// static/generator/ckeditor/core/dom/window.js
// static/generator/ckeditor/core/dom.js
// static/generator/ckeditor/core/dtd.js
// static/generator/ckeditor/core/editable.js
// static/generator/ckeditor/core/editor.js
// static/generator/ckeditor/core/editor_basic.js
// static/generator/ckeditor/core/env.js
// static/generator/ckeditor/core/event.js
// static/generator/ckeditor/core/eventInfo.js
// static/generator/ckeditor/core/filter.js
// static/generator/ckeditor/core/focusmanager.js
// static/generator/ckeditor/core/htmldataprocessor.js
// static/generator/ckeditor/core/htmlparser/basicwriter.js
// static/generator/ckeditor/core/htmlparser/cdata.js
// static/generator/ckeditor/core/htmlparser/comment.js
// static/generator/ckeditor/core/htmlparser/element.js
// static/generator/ckeditor/core/htmlparser/filter.js
// static/generator/ckeditor/core/htmlparser/fragment.js
// static/generator/ckeditor/core/htmlparser/node.js
// static/generator/ckeditor/core/htmlparser/text.js
// static/generator/ckeditor/core/htmlparser.js
// static/generator/ckeditor/core/keystrokehandler.js
// static/generator/ckeditor/core/lang.js
// static/generator/ckeditor/core/loader.js
// static/generator/ckeditor/core/log.js
// static/generator/ckeditor/core/plugindefinition.js
// static/generator/ckeditor/core/plugins.js
// static/generator/ckeditor/core/resourcemanager.js
// static/generator/ckeditor/core/scriptloader.js
// static/generator/ckeditor/core/selection.js
// static/generator/ckeditor/core/skin.js
// static/generator/ckeditor/core/style.js
// static/generator/ckeditor/core/template.js
// static/generator/ckeditor/core/tools.js
// static/generator/ckeditor/core/ui.js
// static/generator/ckeditor/lang/_translationstatus.txt
// static/generator/ckeditor/lang/af.js
// static/generator/ckeditor/lang/ar.js
// static/generator/ckeditor/lang/az.js
// static/generator/ckeditor/lang/bg.js
// static/generator/ckeditor/lang/bn.js
// static/generator/ckeditor/lang/bs.js
// static/generator/ckeditor/lang/ca.js
// static/generator/ckeditor/lang/cs.js
// static/generator/ckeditor/lang/cy.js
// static/generator/ckeditor/lang/da.js
// static/generator/ckeditor/lang/de-ch.js
// static/generator/ckeditor/lang/de.js
// static/generator/ckeditor/lang/el.js
// static/generator/ckeditor/lang/en-au.js
// static/generator/ckeditor/lang/en-ca.js
// static/generator/ckeditor/lang/en-gb.js
// static/generator/ckeditor/lang/en.js
// static/generator/ckeditor/lang/eo.js
// static/generator/ckeditor/lang/es.js
// static/generator/ckeditor/lang/et.js
// static/generator/ckeditor/lang/eu.js
// static/generator/ckeditor/lang/fa.js
// static/generator/ckeditor/lang/fi.js
// static/generator/ckeditor/lang/fo.js
// static/generator/ckeditor/lang/fr-ca.js
// static/generator/ckeditor/lang/fr.js
// static/generator/ckeditor/lang/gl.js
// static/generator/ckeditor/lang/gu.js
// static/generator/ckeditor/lang/he.js
// static/generator/ckeditor/lang/hi.js
// static/generator/ckeditor/lang/hr.js
// static/generator/ckeditor/lang/hu.js
// static/generator/ckeditor/lang/id.js
// static/generator/ckeditor/lang/is.js
// static/generator/ckeditor/lang/it.js
// static/generator/ckeditor/lang/ja.js
// static/generator/ckeditor/lang/ka.js
// static/generator/ckeditor/lang/km.js
// static/generator/ckeditor/lang/ko.js
// static/generator/ckeditor/lang/ku.js
// static/generator/ckeditor/lang/lt.js
// static/generator/ckeditor/lang/lv.js
// static/generator/ckeditor/lang/mk.js
// static/generator/ckeditor/lang/mn.js
// static/generator/ckeditor/lang/ms.js
// static/generator/ckeditor/lang/nb.js
// static/generator/ckeditor/lang/nl.js
// static/generator/ckeditor/lang/no.js
// static/generator/ckeditor/lang/oc.js
// static/generator/ckeditor/lang/pl.js
// static/generator/ckeditor/lang/plugins/a11yhelp/dialogos/a11yhelp.js
// static/generator/ckeditor/lang/plugins/a11yhelp/dialogos/lang/_translationstatus.txt
// static/generator/ckeditor/lang/pt-br.js
// static/generator/ckeditor/lang/pt.js
// static/generator/ckeditor/lang/ro.js
// static/generator/ckeditor/lang/ru.js
// static/generator/ckeditor/lang/si.js
// static/generator/ckeditor/lang/sk.js
// static/generator/ckeditor/lang/sl.js
// static/generator/ckeditor/lang/sq.js
// static/generator/ckeditor/lang/sr-latn.js
// static/generator/ckeditor/lang/sr.js
// static/generator/ckeditor/lang/sr.latn.js
// static/generator/ckeditor/lang/sv.js
// static/generator/ckeditor/lang/th.js
// static/generator/ckeditor/lang/tr.js
// static/generator/ckeditor/lang/tt.js
// static/generator/ckeditor/lang/ug.js
// static/generator/ckeditor/lang/uk.js
// static/generator/ckeditor/lang/vi.js
// static/generator/ckeditor/lang/zh-cn.js
// static/generator/ckeditor/lang/zh.js
// static/generator/ckeditor/lang/zn-ch.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/_translationstatus.txt
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/af.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/az.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/da.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/de-ch.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/de.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/el.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/en.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/es.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/et.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/eu.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fo.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/he.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/id.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/it.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/km.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/no.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/oc.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/si.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/th.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js
// static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js
// static/generator/ckeditor/plugins/a11yhelp/plugin.js
// static/generator/ckeditor/plugins/about/dialogs/about.js
// static/generator/ckeditor/plugins/about/dialogs/hidpi/logo_ckeditor.png
// static/generator/ckeditor/plugins/about/dialogs/logo_ckeditor.png
// static/generator/ckeditor/plugins/about/icons/about.png
// static/generator/ckeditor/plugins/about/icons/hidpi/about.png
// static/generator/ckeditor/plugins/about/lang/af.js
// static/generator/ckeditor/plugins/about/lang/ar.js
// static/generator/ckeditor/plugins/about/lang/az.js
// static/generator/ckeditor/plugins/about/lang/bg.js
// static/generator/ckeditor/plugins/about/lang/bn.js
// static/generator/ckeditor/plugins/about/lang/bs.js
// static/generator/ckeditor/plugins/about/lang/ca.js
// static/generator/ckeditor/plugins/about/lang/cs.js
// static/generator/ckeditor/plugins/about/lang/cy.js
// static/generator/ckeditor/plugins/about/lang/da.js
// static/generator/ckeditor/plugins/about/lang/de-ch.js
// static/generator/ckeditor/plugins/about/lang/de.js
// static/generator/ckeditor/plugins/about/lang/el.js
// static/generator/ckeditor/plugins/about/lang/en-au.js
// static/generator/ckeditor/plugins/about/lang/en-ca.js
// static/generator/ckeditor/plugins/about/lang/en-gb.js
// static/generator/ckeditor/plugins/about/lang/en.js
// static/generator/ckeditor/plugins/about/lang/eo.js
// static/generator/ckeditor/plugins/about/lang/es.js
// static/generator/ckeditor/plugins/about/lang/et.js
// static/generator/ckeditor/plugins/about/lang/eu.js
// static/generator/ckeditor/plugins/about/lang/fa.js
// static/generator/ckeditor/plugins/about/lang/fi.js
// static/generator/ckeditor/plugins/about/lang/fo.js
// static/generator/ckeditor/plugins/about/lang/fr-ca.js
// static/generator/ckeditor/plugins/about/lang/fr.js
// static/generator/ckeditor/plugins/about/lang/gl.js
// static/generator/ckeditor/plugins/about/lang/gu.js
// static/generator/ckeditor/plugins/about/lang/he.js
// static/generator/ckeditor/plugins/about/lang/hi.js
// static/generator/ckeditor/plugins/about/lang/hr.js
// static/generator/ckeditor/plugins/about/lang/hu.js
// static/generator/ckeditor/plugins/about/lang/id.js
// static/generator/ckeditor/plugins/about/lang/is.js
// static/generator/ckeditor/plugins/about/lang/it.js
// static/generator/ckeditor/plugins/about/lang/ja.js
// static/generator/ckeditor/plugins/about/lang/ka.js
// static/generator/ckeditor/plugins/about/lang/km.js
// static/generator/ckeditor/plugins/about/lang/ko.js
// static/generator/ckeditor/plugins/about/lang/ku.js
// static/generator/ckeditor/plugins/about/lang/lt.js
// static/generator/ckeditor/plugins/about/lang/lv.js
// static/generator/ckeditor/plugins/about/lang/mk.js
// static/generator/ckeditor/plugins/about/lang/mn.js
// static/generator/ckeditor/plugins/about/lang/ms.js
// static/generator/ckeditor/plugins/about/lang/nb.js
// static/generator/ckeditor/plugins/about/lang/nl.js
// static/generator/ckeditor/plugins/about/lang/no.js
// static/generator/ckeditor/plugins/about/lang/oc.js
// static/generator/ckeditor/plugins/about/lang/pl.js
// static/generator/ckeditor/plugins/about/lang/pt-br.js
// static/generator/ckeditor/plugins/about/lang/pt.js
// static/generator/ckeditor/plugins/about/lang/ro.js
// static/generator/ckeditor/plugins/about/lang/ru.js
// static/generator/ckeditor/plugins/about/lang/si.js
// static/generator/ckeditor/plugins/about/lang/sk.js
// static/generator/ckeditor/plugins/about/lang/sl.js
// static/generator/ckeditor/plugins/about/lang/sq.js
// static/generator/ckeditor/plugins/about/lang/sr-latn.js
// static/generator/ckeditor/plugins/about/lang/sr.js
// static/generator/ckeditor/plugins/about/lang/sv.js
// static/generator/ckeditor/plugins/about/lang/th.js
// static/generator/ckeditor/plugins/about/lang/tr.js
// static/generator/ckeditor/plugins/about/lang/tt.js
// static/generator/ckeditor/plugins/about/lang/ug.js
// static/generator/ckeditor/plugins/about/lang/uk.js
// static/generator/ckeditor/plugins/about/lang/vi.js
// static/generator/ckeditor/plugins/about/lang/zh-cn.js
// static/generator/ckeditor/plugins/about/lang/zh.js
// static/generator/ckeditor/plugins/about/plugin.js
// static/generator/ckeditor/plugins/basicstyles/icons/bold.png
// static/generator/ckeditor/plugins/basicstyles/icons/hidpi/bold.png
// static/generator/ckeditor/plugins/basicstyles/icons/hidpi/italic.png
// static/generator/ckeditor/plugins/basicstyles/icons/hidpi/strike.png
// static/generator/ckeditor/plugins/basicstyles/icons/hidpi/subscript.png
// static/generator/ckeditor/plugins/basicstyles/icons/hidpi/superscript.png
// static/generator/ckeditor/plugins/basicstyles/icons/hidpi/underline.png
// static/generator/ckeditor/plugins/basicstyles/icons/italic.png
// static/generator/ckeditor/plugins/basicstyles/icons/strike.png
// static/generator/ckeditor/plugins/basicstyles/icons/subscript.png
// static/generator/ckeditor/plugins/basicstyles/icons/superscript.png
// static/generator/ckeditor/plugins/basicstyles/icons/underline.png
// static/generator/ckeditor/plugins/basicstyles/lang/af.js
// static/generator/ckeditor/plugins/basicstyles/lang/ar.js
// static/generator/ckeditor/plugins/basicstyles/lang/az.js
// static/generator/ckeditor/plugins/basicstyles/lang/bg.js
// static/generator/ckeditor/plugins/basicstyles/lang/bn.js
// static/generator/ckeditor/plugins/basicstyles/lang/bs.js
// static/generator/ckeditor/plugins/basicstyles/lang/ca.js
// static/generator/ckeditor/plugins/basicstyles/lang/cs.js
// static/generator/ckeditor/plugins/basicstyles/lang/cy.js
// static/generator/ckeditor/plugins/basicstyles/lang/da.js
// static/generator/ckeditor/plugins/basicstyles/lang/de-ch.js
// static/generator/ckeditor/plugins/basicstyles/lang/de.js
// static/generator/ckeditor/plugins/basicstyles/lang/el.js
// static/generator/ckeditor/plugins/basicstyles/lang/en-au.js
// static/generator/ckeditor/plugins/basicstyles/lang/en-ca.js
// static/generator/ckeditor/plugins/basicstyles/lang/en-gb.js
// static/generator/ckeditor/plugins/basicstyles/lang/en.js
// static/generator/ckeditor/plugins/basicstyles/lang/eo.js
// static/generator/ckeditor/plugins/basicstyles/lang/es.js
// static/generator/ckeditor/plugins/basicstyles/lang/et.js
// static/generator/ckeditor/plugins/basicstyles/lang/eu.js
// static/generator/ckeditor/plugins/basicstyles/lang/fa.js
// static/generator/ckeditor/plugins/basicstyles/lang/fi.js
// static/generator/ckeditor/plugins/basicstyles/lang/fo.js
// static/generator/ckeditor/plugins/basicstyles/lang/fr-ca.js
// static/generator/ckeditor/plugins/basicstyles/lang/fr.js
// static/generator/ckeditor/plugins/basicstyles/lang/gl.js
// static/generator/ckeditor/plugins/basicstyles/lang/gu.js
// static/generator/ckeditor/plugins/basicstyles/lang/he.js
// static/generator/ckeditor/plugins/basicstyles/lang/hi.js
// static/generator/ckeditor/plugins/basicstyles/lang/hr.js
// static/generator/ckeditor/plugins/basicstyles/lang/hu.js
// static/generator/ckeditor/plugins/basicstyles/lang/id.js
// static/generator/ckeditor/plugins/basicstyles/lang/is.js
// static/generator/ckeditor/plugins/basicstyles/lang/it.js
// static/generator/ckeditor/plugins/basicstyles/lang/ja.js
// static/generator/ckeditor/plugins/basicstyles/lang/ka.js
// static/generator/ckeditor/plugins/basicstyles/lang/km.js
// static/generator/ckeditor/plugins/basicstyles/lang/ko.js
// static/generator/ckeditor/plugins/basicstyles/lang/ku.js
// static/generator/ckeditor/plugins/basicstyles/lang/lt.js
// static/generator/ckeditor/plugins/basicstyles/lang/lv.js
// static/generator/ckeditor/plugins/basicstyles/lang/mk.js
// static/generator/ckeditor/plugins/basicstyles/lang/mn.js
// static/generator/ckeditor/plugins/basicstyles/lang/ms.js
// static/generator/ckeditor/plugins/basicstyles/lang/nb.js
// static/generator/ckeditor/plugins/basicstyles/lang/nl.js
// static/generator/ckeditor/plugins/basicstyles/lang/no.js
// static/generator/ckeditor/plugins/basicstyles/lang/oc.js
// static/generator/ckeditor/plugins/basicstyles/lang/pl.js
// static/generator/ckeditor/plugins/basicstyles/lang/pt-br.js
// static/generator/ckeditor/plugins/basicstyles/lang/pt.js
// static/generator/ckeditor/plugins/basicstyles/lang/ro.js
// static/generator/ckeditor/plugins/basicstyles/lang/ru.js
// static/generator/ckeditor/plugins/basicstyles/lang/si.js
// static/generator/ckeditor/plugins/basicstyles/lang/sk.js
// static/generator/ckeditor/plugins/basicstyles/lang/sl.js
// static/generator/ckeditor/plugins/basicstyles/lang/sq.js
// static/generator/ckeditor/plugins/basicstyles/lang/sr-latn.js
// static/generator/ckeditor/plugins/basicstyles/lang/sr.js
// static/generator/ckeditor/plugins/basicstyles/lang/sv.js
// static/generator/ckeditor/plugins/basicstyles/lang/th.js
// static/generator/ckeditor/plugins/basicstyles/lang/tr.js
// static/generator/ckeditor/plugins/basicstyles/lang/tt.js
// static/generator/ckeditor/plugins/basicstyles/lang/ug.js
// static/generator/ckeditor/plugins/basicstyles/lang/uk.js
// static/generator/ckeditor/plugins/basicstyles/lang/vi.js
// static/generator/ckeditor/plugins/basicstyles/lang/zh-cn.js
// static/generator/ckeditor/plugins/basicstyles/lang/zh.js
// static/generator/ckeditor/plugins/basicstyles/plugin.js
// static/generator/ckeditor/plugins/bidi/icons/bidiltr.png
// static/generator/ckeditor/plugins/bidi/icons/bidirtl.png
// static/generator/ckeditor/plugins/bidi/icons/hidpi/bidiltr.png
// static/generator/ckeditor/plugins/bidi/icons/hidpi/bidirtl.png
// static/generator/ckeditor/plugins/bidi/lang/af.js
// static/generator/ckeditor/plugins/bidi/lang/ar.js
// static/generator/ckeditor/plugins/bidi/lang/az.js
// static/generator/ckeditor/plugins/bidi/lang/bg.js
// static/generator/ckeditor/plugins/bidi/lang/bn.js
// static/generator/ckeditor/plugins/bidi/lang/bs.js
// static/generator/ckeditor/plugins/bidi/lang/ca.js
// static/generator/ckeditor/plugins/bidi/lang/cs.js
// static/generator/ckeditor/plugins/bidi/lang/cy.js
// static/generator/ckeditor/plugins/bidi/lang/da.js
// static/generator/ckeditor/plugins/bidi/lang/de-ch.js
// static/generator/ckeditor/plugins/bidi/lang/de.js
// static/generator/ckeditor/plugins/bidi/lang/el.js
// static/generator/ckeditor/plugins/bidi/lang/en-au.js
// static/generator/ckeditor/plugins/bidi/lang/en-ca.js
// static/generator/ckeditor/plugins/bidi/lang/en-gb.js
// static/generator/ckeditor/plugins/bidi/lang/en.js
// static/generator/ckeditor/plugins/bidi/lang/eo.js
// static/generator/ckeditor/plugins/bidi/lang/es.js
// static/generator/ckeditor/plugins/bidi/lang/et.js
// static/generator/ckeditor/plugins/bidi/lang/eu.js
// static/generator/ckeditor/plugins/bidi/lang/fa.js
// static/generator/ckeditor/plugins/bidi/lang/fi.js
// static/generator/ckeditor/plugins/bidi/lang/fo.js
// static/generator/ckeditor/plugins/bidi/lang/fr-ca.js
// static/generator/ckeditor/plugins/bidi/lang/fr.js
// static/generator/ckeditor/plugins/bidi/lang/gl.js
// static/generator/ckeditor/plugins/bidi/lang/gu.js
// static/generator/ckeditor/plugins/bidi/lang/he.js
// static/generator/ckeditor/plugins/bidi/lang/hi.js
// static/generator/ckeditor/plugins/bidi/lang/hr.js
// static/generator/ckeditor/plugins/bidi/lang/hu.js
// static/generator/ckeditor/plugins/bidi/lang/id.js
// static/generator/ckeditor/plugins/bidi/lang/is.js
// static/generator/ckeditor/plugins/bidi/lang/it.js
// static/generator/ckeditor/plugins/bidi/lang/ja.js
// static/generator/ckeditor/plugins/bidi/lang/ka.js
// static/generator/ckeditor/plugins/bidi/lang/km.js
// static/generator/ckeditor/plugins/bidi/lang/ko.js
// static/generator/ckeditor/plugins/bidi/lang/ku.js
// static/generator/ckeditor/plugins/bidi/lang/lt.js
// static/generator/ckeditor/plugins/bidi/lang/lv.js
// static/generator/ckeditor/plugins/bidi/lang/mk.js
// static/generator/ckeditor/plugins/bidi/lang/mn.js
// static/generator/ckeditor/plugins/bidi/lang/ms.js
// static/generator/ckeditor/plugins/bidi/lang/nb.js
// static/generator/ckeditor/plugins/bidi/lang/nl.js
// static/generator/ckeditor/plugins/bidi/lang/no.js
// static/generator/ckeditor/plugins/bidi/lang/oc.js
// static/generator/ckeditor/plugins/bidi/lang/pl.js
// static/generator/ckeditor/plugins/bidi/lang/pt-br.js
// static/generator/ckeditor/plugins/bidi/lang/pt.js
// static/generator/ckeditor/plugins/bidi/lang/ro.js
// static/generator/ckeditor/plugins/bidi/lang/ru.js
// static/generator/ckeditor/plugins/bidi/lang/si.js
// static/generator/ckeditor/plugins/bidi/lang/sk.js
// static/generator/ckeditor/plugins/bidi/lang/sl.js
// static/generator/ckeditor/plugins/bidi/lang/sq.js
// static/generator/ckeditor/plugins/bidi/lang/sr-latn.js
// static/generator/ckeditor/plugins/bidi/lang/sr.js
// static/generator/ckeditor/plugins/bidi/lang/sv.js
// static/generator/ckeditor/plugins/bidi/lang/th.js
// static/generator/ckeditor/plugins/bidi/lang/tr.js
// static/generator/ckeditor/plugins/bidi/lang/tt.js
// static/generator/ckeditor/plugins/bidi/lang/ug.js
// static/generator/ckeditor/plugins/bidi/lang/uk.js
// static/generator/ckeditor/plugins/bidi/lang/vi.js
// static/generator/ckeditor/plugins/bidi/lang/zh-cn.js
// static/generator/ckeditor/plugins/bidi/lang/zh.js
// static/generator/ckeditor/plugins/bidi/plugin.js
// static/generator/ckeditor/plugins/blockquote/icons/blockquote.png
// static/generator/ckeditor/plugins/blockquote/icons/hidpi/blockquote.png
// static/generator/ckeditor/plugins/blockquote/lang/af.js
// static/generator/ckeditor/plugins/blockquote/lang/ar.js
// static/generator/ckeditor/plugins/blockquote/lang/az.js
// static/generator/ckeditor/plugins/blockquote/lang/bg.js
// static/generator/ckeditor/plugins/blockquote/lang/bn.js
// static/generator/ckeditor/plugins/blockquote/lang/bs.js
// static/generator/ckeditor/plugins/blockquote/lang/ca.js
// static/generator/ckeditor/plugins/blockquote/lang/cs.js
// static/generator/ckeditor/plugins/blockquote/lang/cy.js
// static/generator/ckeditor/plugins/blockquote/lang/da.js
// static/generator/ckeditor/plugins/blockquote/lang/de-ch.js
// static/generator/ckeditor/plugins/blockquote/lang/de.js
// static/generator/ckeditor/plugins/blockquote/lang/el.js
// static/generator/ckeditor/plugins/blockquote/lang/en-au.js
// static/generator/ckeditor/plugins/blockquote/lang/en-ca.js
// static/generator/ckeditor/plugins/blockquote/lang/en-gb.js
// static/generator/ckeditor/plugins/blockquote/lang/en.js
// static/generator/ckeditor/plugins/blockquote/lang/eo.js
// static/generator/ckeditor/plugins/blockquote/lang/es.js
// static/generator/ckeditor/plugins/blockquote/lang/et.js
// static/generator/ckeditor/plugins/blockquote/lang/eu.js
// static/generator/ckeditor/plugins/blockquote/lang/fa.js
// static/generator/ckeditor/plugins/blockquote/lang/fi.js
// static/generator/ckeditor/plugins/blockquote/lang/fo.js
// static/generator/ckeditor/plugins/blockquote/lang/fr-ca.js
// static/generator/ckeditor/plugins/blockquote/lang/fr.js
// static/generator/ckeditor/plugins/blockquote/lang/gl.js
// static/generator/ckeditor/plugins/blockquote/lang/gu.js
// static/generator/ckeditor/plugins/blockquote/lang/he.js
// static/generator/ckeditor/plugins/blockquote/lang/hi.js
// static/generator/ckeditor/plugins/blockquote/lang/hr.js
// static/generator/ckeditor/plugins/blockquote/lang/hu.js
// static/generator/ckeditor/plugins/blockquote/lang/id.js
// static/generator/ckeditor/plugins/blockquote/lang/is.js
// static/generator/ckeditor/plugins/blockquote/lang/it.js
// static/generator/ckeditor/plugins/blockquote/lang/ja.js
// static/generator/ckeditor/plugins/blockquote/lang/ka.js
// static/generator/ckeditor/plugins/blockquote/lang/km.js
// static/generator/ckeditor/plugins/blockquote/lang/ko.js
// static/generator/ckeditor/plugins/blockquote/lang/ku.js
// static/generator/ckeditor/plugins/blockquote/lang/lt.js
// static/generator/ckeditor/plugins/blockquote/lang/lv.js
// static/generator/ckeditor/plugins/blockquote/lang/mk.js
// static/generator/ckeditor/plugins/blockquote/lang/mn.js
// static/generator/ckeditor/plugins/blockquote/lang/ms.js
// static/generator/ckeditor/plugins/blockquote/lang/nb.js
// static/generator/ckeditor/plugins/blockquote/lang/nl.js
// static/generator/ckeditor/plugins/blockquote/lang/no.js
// static/generator/ckeditor/plugins/blockquote/lang/oc.js
// static/generator/ckeditor/plugins/blockquote/lang/pl.js
// static/generator/ckeditor/plugins/blockquote/lang/pt-br.js
// static/generator/ckeditor/plugins/blockquote/lang/pt.js
// static/generator/ckeditor/plugins/blockquote/lang/ro.js
// static/generator/ckeditor/plugins/blockquote/lang/ru.js
// static/generator/ckeditor/plugins/blockquote/lang/si.js
// static/generator/ckeditor/plugins/blockquote/lang/sk.js
// static/generator/ckeditor/plugins/blockquote/lang/sl.js
// static/generator/ckeditor/plugins/blockquote/lang/sq.js
// static/generator/ckeditor/plugins/blockquote/lang/sr-latn.js
// static/generator/ckeditor/plugins/blockquote/lang/sr.js
// static/generator/ckeditor/plugins/blockquote/lang/sv.js
// static/generator/ckeditor/plugins/blockquote/lang/th.js
// static/generator/ckeditor/plugins/blockquote/lang/tr.js
// static/generator/ckeditor/plugins/blockquote/lang/tt.js
// static/generator/ckeditor/plugins/blockquote/lang/ug.js
// static/generator/ckeditor/plugins/blockquote/lang/uk.js
// static/generator/ckeditor/plugins/blockquote/lang/vi.js
// static/generator/ckeditor/plugins/blockquote/lang/zh-cn.js
// static/generator/ckeditor/plugins/blockquote/lang/zh.js
// static/generator/ckeditor/plugins/blockquote/plugin.js
// static/generator/ckeditor/plugins/button/lang/af.js
// static/generator/ckeditor/plugins/button/lang/ar.js
// static/generator/ckeditor/plugins/button/lang/az.js
// static/generator/ckeditor/plugins/button/lang/bg.js
// static/generator/ckeditor/plugins/button/lang/ca.js
// static/generator/ckeditor/plugins/button/lang/cs.js
// static/generator/ckeditor/plugins/button/lang/da.js
// static/generator/ckeditor/plugins/button/lang/de-ch.js
// static/generator/ckeditor/plugins/button/lang/de.js
// static/generator/ckeditor/plugins/button/lang/el.js
// static/generator/ckeditor/plugins/button/lang/en-gb.js
// static/generator/ckeditor/plugins/button/lang/en.js
// static/generator/ckeditor/plugins/button/lang/eo.js
// static/generator/ckeditor/plugins/button/lang/es.js
// static/generator/ckeditor/plugins/button/lang/eu.js
// static/generator/ckeditor/plugins/button/lang/fa.js
// static/generator/ckeditor/plugins/button/lang/fi.js
// static/generator/ckeditor/plugins/button/lang/fr.js
// static/generator/ckeditor/plugins/button/lang/gl.js
// static/generator/ckeditor/plugins/button/lang/he.js
// static/generator/ckeditor/plugins/button/lang/hu.js
// static/generator/ckeditor/plugins/button/lang/id.js
// static/generator/ckeditor/plugins/button/lang/it.js
// static/generator/ckeditor/plugins/button/lang/ja.js
// static/generator/ckeditor/plugins/button/lang/km.js
// static/generator/ckeditor/plugins/button/lang/ko.js
// static/generator/ckeditor/plugins/button/lang/ku.js
// static/generator/ckeditor/plugins/button/lang/lt.js
// static/generator/ckeditor/plugins/button/lang/nb.js
// static/generator/ckeditor/plugins/button/lang/nl.js
// static/generator/ckeditor/plugins/button/lang/no.js
// static/generator/ckeditor/plugins/button/lang/oc.js
// static/generator/ckeditor/plugins/button/lang/pl.js
// static/generator/ckeditor/plugins/button/lang/pt-br.js
// static/generator/ckeditor/plugins/button/lang/pt.js
// static/generator/ckeditor/plugins/button/lang/ro.js
// static/generator/ckeditor/plugins/button/lang/ru.js
// static/generator/ckeditor/plugins/button/lang/sk.js
// static/generator/ckeditor/plugins/button/lang/sl.js
// static/generator/ckeditor/plugins/button/lang/sq.js
// static/generator/ckeditor/plugins/button/lang/sv.js
// static/generator/ckeditor/plugins/button/lang/tr.js
// static/generator/ckeditor/plugins/button/lang/tt.js
// static/generator/ckeditor/plugins/button/lang/ug.js
// static/generator/ckeditor/plugins/button/lang/uk.js
// static/generator/ckeditor/plugins/button/lang/vi.js
// static/generator/ckeditor/plugins/button/lang/zh-cn.js
// static/generator/ckeditor/plugins/button/lang/zh.js
// static/generator/ckeditor/plugins/button/plugin.js
// static/generator/ckeditor/plugins/ckawesome/dialogs/ckawesome.css
// static/generator/ckeditor/plugins/ckawesome/dialogs/ckawesome.js
// static/generator/ckeditor/plugins/ckawesome/icons/ckawesome.png
// static/generator/ckeditor/plugins/ckawesome/plugin.js
// static/generator/ckeditor/plugins/ckawesome/resources/select2/select2.full.min.css
// static/generator/ckeditor/plugins/ckawesome/resources/select2/select2.full.min.js
// static/generator/ckeditor/plugins/clipboard/dev/clipboard.html
// static/generator/ckeditor/plugins/clipboard/dev/console.js
// static/generator/ckeditor/plugins/clipboard/dev/dnd.html
// static/generator/ckeditor/plugins/clipboard/dialogs/paste.js
// static/generator/ckeditor/plugins/clipboard/icons/copy-rtl.png
// static/generator/ckeditor/plugins/clipboard/icons/copy.png
// static/generator/ckeditor/plugins/clipboard/icons/cut-rtl.png
// static/generator/ckeditor/plugins/clipboard/icons/cut.png
// static/generator/ckeditor/plugins/clipboard/icons/hidpi/copy-rtl.png
// static/generator/ckeditor/plugins/clipboard/icons/hidpi/copy.png
// static/generator/ckeditor/plugins/clipboard/icons/hidpi/cut-rtl.png
// static/generator/ckeditor/plugins/clipboard/icons/hidpi/cut.png
// static/generator/ckeditor/plugins/clipboard/icons/hidpi/paste-rtl.png
// static/generator/ckeditor/plugins/clipboard/icons/hidpi/paste.png
// static/generator/ckeditor/plugins/clipboard/icons/paste-rtl.png
// static/generator/ckeditor/plugins/clipboard/icons/paste.png
// static/generator/ckeditor/plugins/clipboard/lang/af.js
// static/generator/ckeditor/plugins/clipboard/lang/ar.js
// static/generator/ckeditor/plugins/clipboard/lang/az.js
// static/generator/ckeditor/plugins/clipboard/lang/bg.js
// static/generator/ckeditor/plugins/clipboard/lang/bn.js
// static/generator/ckeditor/plugins/clipboard/lang/bs.js
// static/generator/ckeditor/plugins/clipboard/lang/ca.js
// static/generator/ckeditor/plugins/clipboard/lang/cs.js
// static/generator/ckeditor/plugins/clipboard/lang/cy.js
// static/generator/ckeditor/plugins/clipboard/lang/da.js
// static/generator/ckeditor/plugins/clipboard/lang/de-ch.js
// static/generator/ckeditor/plugins/clipboard/lang/de.js
// static/generator/ckeditor/plugins/clipboard/lang/el.js
// static/generator/ckeditor/plugins/clipboard/lang/en-au.js
// static/generator/ckeditor/plugins/clipboard/lang/en-ca.js
// static/generator/ckeditor/plugins/clipboard/lang/en-gb.js
// static/generator/ckeditor/plugins/clipboard/lang/en.js
// static/generator/ckeditor/plugins/clipboard/lang/eo.js
// static/generator/ckeditor/plugins/clipboard/lang/es.js
// static/generator/ckeditor/plugins/clipboard/lang/et.js
// static/generator/ckeditor/plugins/clipboard/lang/eu.js
// static/generator/ckeditor/plugins/clipboard/lang/fa.js
// static/generator/ckeditor/plugins/clipboard/lang/fi.js
// static/generator/ckeditor/plugins/clipboard/lang/fo.js
// static/generator/ckeditor/plugins/clipboard/lang/fr-ca.js
// static/generator/ckeditor/plugins/clipboard/lang/fr.js
// static/generator/ckeditor/plugins/clipboard/lang/gl.js
// static/generator/ckeditor/plugins/clipboard/lang/gu.js
// static/generator/ckeditor/plugins/clipboard/lang/he.js
// static/generator/ckeditor/plugins/clipboard/lang/hi.js
// static/generator/ckeditor/plugins/clipboard/lang/hr.js
// static/generator/ckeditor/plugins/clipboard/lang/hu.js
// static/generator/ckeditor/plugins/clipboard/lang/id.js
// static/generator/ckeditor/plugins/clipboard/lang/is.js
// static/generator/ckeditor/plugins/clipboard/lang/it.js
// static/generator/ckeditor/plugins/clipboard/lang/ja.js
// static/generator/ckeditor/plugins/clipboard/lang/ka.js
// static/generator/ckeditor/plugins/clipboard/lang/km.js
// static/generator/ckeditor/plugins/clipboard/lang/ko.js
// static/generator/ckeditor/plugins/clipboard/lang/ku.js
// static/generator/ckeditor/plugins/clipboard/lang/lt.js
// static/generator/ckeditor/plugins/clipboard/lang/lv.js
// static/generator/ckeditor/plugins/clipboard/lang/mk.js
// static/generator/ckeditor/plugins/clipboard/lang/mn.js
// static/generator/ckeditor/plugins/clipboard/lang/ms.js
// static/generator/ckeditor/plugins/clipboard/lang/nb.js
// static/generator/ckeditor/plugins/clipboard/lang/nl.js
// static/generator/ckeditor/plugins/clipboard/lang/no.js
// static/generator/ckeditor/plugins/clipboard/lang/oc.js
// static/generator/ckeditor/plugins/clipboard/lang/pl.js
// static/generator/ckeditor/plugins/clipboard/lang/pt-br.js
// static/generator/ckeditor/plugins/clipboard/lang/pt.js
// static/generator/ckeditor/plugins/clipboard/lang/ro.js
// static/generator/ckeditor/plugins/clipboard/lang/ru.js
// static/generator/ckeditor/plugins/clipboard/lang/si.js
// static/generator/ckeditor/plugins/clipboard/lang/sk.js
// static/generator/ckeditor/plugins/clipboard/lang/sl.js
// static/generator/ckeditor/plugins/clipboard/lang/sq.js
// static/generator/ckeditor/plugins/clipboard/lang/sr-latn.js
// static/generator/ckeditor/plugins/clipboard/lang/sr.js
// static/generator/ckeditor/plugins/clipboard/lang/sv.js
// static/generator/ckeditor/plugins/clipboard/lang/th.js
// static/generator/ckeditor/plugins/clipboard/lang/tr.js
// static/generator/ckeditor/plugins/clipboard/lang/tt.js
// static/generator/ckeditor/plugins/clipboard/lang/ug.js
// static/generator/ckeditor/plugins/clipboard/lang/uk.js
// static/generator/ckeditor/plugins/clipboard/lang/vi.js
// static/generator/ckeditor/plugins/clipboard/lang/zh-cn.js
// static/generator/ckeditor/plugins/clipboard/lang/zh.js
// static/generator/ckeditor/plugins/clipboard/plugin.js
// static/generator/ckeditor/plugins/colorbutton/icons/bgcolor.png
// static/generator/ckeditor/plugins/colorbutton/icons/hidpi/bgcolor.png
// static/generator/ckeditor/plugins/colorbutton/icons/hidpi/textcolor.png
// static/generator/ckeditor/plugins/colorbutton/icons/textcolor.png
// static/generator/ckeditor/plugins/colorbutton/lang/af.js
// static/generator/ckeditor/plugins/colorbutton/lang/ar.js
// static/generator/ckeditor/plugins/colorbutton/lang/az.js
// static/generator/ckeditor/plugins/colorbutton/lang/bg.js
// static/generator/ckeditor/plugins/colorbutton/lang/bn.js
// static/generator/ckeditor/plugins/colorbutton/lang/bs.js
// static/generator/ckeditor/plugins/colorbutton/lang/ca.js
// static/generator/ckeditor/plugins/colorbutton/lang/cs.js
// static/generator/ckeditor/plugins/colorbutton/lang/cy.js
// static/generator/ckeditor/plugins/colorbutton/lang/da.js
// static/generator/ckeditor/plugins/colorbutton/lang/de-ch.js
// static/generator/ckeditor/plugins/colorbutton/lang/de.js
// static/generator/ckeditor/plugins/colorbutton/lang/el.js
// static/generator/ckeditor/plugins/colorbutton/lang/en-au.js
// static/generator/ckeditor/plugins/colorbutton/lang/en-ca.js
// static/generator/ckeditor/plugins/colorbutton/lang/en-gb.js
// static/generator/ckeditor/plugins/colorbutton/lang/en.js
// static/generator/ckeditor/plugins/colorbutton/lang/eo.js
// static/generator/ckeditor/plugins/colorbutton/lang/es.js
// static/generator/ckeditor/plugins/colorbutton/lang/et.js
// static/generator/ckeditor/plugins/colorbutton/lang/eu.js
// static/generator/ckeditor/plugins/colorbutton/lang/fa.js
// static/generator/ckeditor/plugins/colorbutton/lang/fi.js
// static/generator/ckeditor/plugins/colorbutton/lang/fo.js
// static/generator/ckeditor/plugins/colorbutton/lang/fr-ca.js
// static/generator/ckeditor/plugins/colorbutton/lang/fr.js
// static/generator/ckeditor/plugins/colorbutton/lang/gl.js
// static/generator/ckeditor/plugins/colorbutton/lang/gu.js
// static/generator/ckeditor/plugins/colorbutton/lang/he.js
// static/generator/ckeditor/plugins/colorbutton/lang/hi.js
// static/generator/ckeditor/plugins/colorbutton/lang/hr.js
// static/generator/ckeditor/plugins/colorbutton/lang/hu.js
// static/generator/ckeditor/plugins/colorbutton/lang/id.js
// static/generator/ckeditor/plugins/colorbutton/lang/is.js
// static/generator/ckeditor/plugins/colorbutton/lang/it.js
// static/generator/ckeditor/plugins/colorbutton/lang/ja.js
// static/generator/ckeditor/plugins/colorbutton/lang/ka.js
// static/generator/ckeditor/plugins/colorbutton/lang/km.js
// static/generator/ckeditor/plugins/colorbutton/lang/ko.js
// static/generator/ckeditor/plugins/colorbutton/lang/ku.js
// static/generator/ckeditor/plugins/colorbutton/lang/lt.js
// static/generator/ckeditor/plugins/colorbutton/lang/lv.js
// static/generator/ckeditor/plugins/colorbutton/lang/mk.js
// static/generator/ckeditor/plugins/colorbutton/lang/mn.js
// static/generator/ckeditor/plugins/colorbutton/lang/ms.js
// static/generator/ckeditor/plugins/colorbutton/lang/nb.js
// static/generator/ckeditor/plugins/colorbutton/lang/nl.js
// static/generator/ckeditor/plugins/colorbutton/lang/no.js
// static/generator/ckeditor/plugins/colorbutton/lang/oc.js
// static/generator/ckeditor/plugins/colorbutton/lang/pl.js
// static/generator/ckeditor/plugins/colorbutton/lang/pt-br.js
// static/generator/ckeditor/plugins/colorbutton/lang/pt.js
// static/generator/ckeditor/plugins/colorbutton/lang/ro.js
// static/generator/ckeditor/plugins/colorbutton/lang/ru.js
// static/generator/ckeditor/plugins/colorbutton/lang/si.js
// static/generator/ckeditor/plugins/colorbutton/lang/sk.js
// static/generator/ckeditor/plugins/colorbutton/lang/sl.js
// static/generator/ckeditor/plugins/colorbutton/lang/sq.js
// static/generator/ckeditor/plugins/colorbutton/lang/sr-latn.js
// static/generator/ckeditor/plugins/colorbutton/lang/sr.js
// static/generator/ckeditor/plugins/colorbutton/lang/sv.js
// static/generator/ckeditor/plugins/colorbutton/lang/th.js
// static/generator/ckeditor/plugins/colorbutton/lang/tr.js
// static/generator/ckeditor/plugins/colorbutton/lang/tt.js
// static/generator/ckeditor/plugins/colorbutton/lang/ug.js
// static/generator/ckeditor/plugins/colorbutton/lang/uk.js
// static/generator/ckeditor/plugins/colorbutton/lang/vi.js
// static/generator/ckeditor/plugins/colorbutton/lang/zh-cn.js
// static/generator/ckeditor/plugins/colorbutton/lang/zh.js
// static/generator/ckeditor/plugins/colorbutton/plugin.js
// static/generator/ckeditor/plugins/colordialog/dialogs/colordialog.css
// static/generator/ckeditor/plugins/colordialog/dialogs/colordialog.js
// static/generator/ckeditor/plugins/colordialog/lang/af.js
// static/generator/ckeditor/plugins/colordialog/lang/ar.js
// static/generator/ckeditor/plugins/colordialog/lang/az.js
// static/generator/ckeditor/plugins/colordialog/lang/bg.js
// static/generator/ckeditor/plugins/colordialog/lang/bn.js
// static/generator/ckeditor/plugins/colordialog/lang/bs.js
// static/generator/ckeditor/plugins/colordialog/lang/ca.js
// static/generator/ckeditor/plugins/colordialog/lang/cs.js
// static/generator/ckeditor/plugins/colordialog/lang/cy.js
// static/generator/ckeditor/plugins/colordialog/lang/da.js
// static/generator/ckeditor/plugins/colordialog/lang/de-ch.js
// static/generator/ckeditor/plugins/colordialog/lang/de.js
// static/generator/ckeditor/plugins/colordialog/lang/el.js
// static/generator/ckeditor/plugins/colordialog/lang/en-au.js
// static/generator/ckeditor/plugins/colordialog/lang/en-ca.js
// static/generator/ckeditor/plugins/colordialog/lang/en-gb.js
// static/generator/ckeditor/plugins/colordialog/lang/en.js
// static/generator/ckeditor/plugins/colordialog/lang/eo.js
// static/generator/ckeditor/plugins/colordialog/lang/es.js
// static/generator/ckeditor/plugins/colordialog/lang/et.js
// static/generator/ckeditor/plugins/colordialog/lang/eu.js
// static/generator/ckeditor/plugins/colordialog/lang/fa.js
// static/generator/ckeditor/plugins/colordialog/lang/fi.js
// static/generator/ckeditor/plugins/colordialog/lang/fo.js
// static/generator/ckeditor/plugins/colordialog/lang/fr-ca.js
// static/generator/ckeditor/plugins/colordialog/lang/fr.js
// static/generator/ckeditor/plugins/colordialog/lang/gl.js
// static/generator/ckeditor/plugins/colordialog/lang/gu.js
// static/generator/ckeditor/plugins/colordialog/lang/he.js
// static/generator/ckeditor/plugins/colordialog/lang/hi.js
// static/generator/ckeditor/plugins/colordialog/lang/hr.js
// static/generator/ckeditor/plugins/colordialog/lang/hu.js
// static/generator/ckeditor/plugins/colordialog/lang/id.js
// static/generator/ckeditor/plugins/colordialog/lang/is.js
// static/generator/ckeditor/plugins/colordialog/lang/it.js
// static/generator/ckeditor/plugins/colordialog/lang/ja.js
// static/generator/ckeditor/plugins/colordialog/lang/ka.js
// static/generator/ckeditor/plugins/colordialog/lang/km.js
// static/generator/ckeditor/plugins/colordialog/lang/ko.js
// static/generator/ckeditor/plugins/colordialog/lang/ku.js
// static/generator/ckeditor/plugins/colordialog/lang/lt.js
// static/generator/ckeditor/plugins/colordialog/lang/lv.js
// static/generator/ckeditor/plugins/colordialog/lang/mk.js
// static/generator/ckeditor/plugins/colordialog/lang/mn.js
// static/generator/ckeditor/plugins/colordialog/lang/ms.js
// static/generator/ckeditor/plugins/colordialog/lang/nb.js
// static/generator/ckeditor/plugins/colordialog/lang/nl.js
// static/generator/ckeditor/plugins/colordialog/lang/no.js
// static/generator/ckeditor/plugins/colordialog/lang/oc.js
// static/generator/ckeditor/plugins/colordialog/lang/pl.js
// static/generator/ckeditor/plugins/colordialog/lang/pt-br.js
// static/generator/ckeditor/plugins/colordialog/lang/pt.js
// static/generator/ckeditor/plugins/colordialog/lang/ro.js
// static/generator/ckeditor/plugins/colordialog/lang/ru.js
// static/generator/ckeditor/plugins/colordialog/lang/si.js
// static/generator/ckeditor/plugins/colordialog/lang/sk.js
// static/generator/ckeditor/plugins/colordialog/lang/sl.js
// static/generator/ckeditor/plugins/colordialog/lang/sq.js
// static/generator/ckeditor/plugins/colordialog/lang/sr-latn.js
// static/generator/ckeditor/plugins/colordialog/lang/sr.js
// static/generator/ckeditor/plugins/colordialog/lang/sv.js
// static/generator/ckeditor/plugins/colordialog/lang/th.js
// static/generator/ckeditor/plugins/colordialog/lang/tr.js
// static/generator/ckeditor/plugins/colordialog/lang/tt.js
// static/generator/ckeditor/plugins/colordialog/lang/ug.js
// static/generator/ckeditor/plugins/colordialog/lang/uk.js
// static/generator/ckeditor/plugins/colordialog/lang/vi.js
// static/generator/ckeditor/plugins/colordialog/lang/zh-cn.js
// static/generator/ckeditor/plugins/colordialog/lang/zh.js
// static/generator/ckeditor/plugins/colordialog/plugin.js
// static/generator/ckeditor/plugins/contextmenu/lang/af.js
// static/generator/ckeditor/plugins/contextmenu/lang/ar.js
// static/generator/ckeditor/plugins/contextmenu/lang/az.js
// static/generator/ckeditor/plugins/contextmenu/lang/bg.js
// static/generator/ckeditor/plugins/contextmenu/lang/bn.js
// static/generator/ckeditor/plugins/contextmenu/lang/bs.js
// static/generator/ckeditor/plugins/contextmenu/lang/ca.js
// static/generator/ckeditor/plugins/contextmenu/lang/cs.js
// static/generator/ckeditor/plugins/contextmenu/lang/cy.js
// static/generator/ckeditor/plugins/contextmenu/lang/da.js
// static/generator/ckeditor/plugins/contextmenu/lang/de-ch.js
// static/generator/ckeditor/plugins/contextmenu/lang/de.js
// static/generator/ckeditor/plugins/contextmenu/lang/el.js
// static/generator/ckeditor/plugins/contextmenu/lang/en-au.js
// static/generator/ckeditor/plugins/contextmenu/lang/en-ca.js
// static/generator/ckeditor/plugins/contextmenu/lang/en-gb.js
// static/generator/ckeditor/plugins/contextmenu/lang/en.js
// static/generator/ckeditor/plugins/contextmenu/lang/eo.js
// static/generator/ckeditor/plugins/contextmenu/lang/es.js
// static/generator/ckeditor/plugins/contextmenu/lang/et.js
// static/generator/ckeditor/plugins/contextmenu/lang/eu.js
// static/generator/ckeditor/plugins/contextmenu/lang/fa.js
// static/generator/ckeditor/plugins/contextmenu/lang/fi.js
// static/generator/ckeditor/plugins/contextmenu/lang/fo.js
// static/generator/ckeditor/plugins/contextmenu/lang/fr-ca.js
// static/generator/ckeditor/plugins/contextmenu/lang/fr.js
// static/generator/ckeditor/plugins/contextmenu/lang/gl.js
// static/generator/ckeditor/plugins/contextmenu/lang/gu.js
// static/generator/ckeditor/plugins/contextmenu/lang/he.js
// static/generator/ckeditor/plugins/contextmenu/lang/hi.js
// static/generator/ckeditor/plugins/contextmenu/lang/hr.js
// static/generator/ckeditor/plugins/contextmenu/lang/hu.js
// static/generator/ckeditor/plugins/contextmenu/lang/id.js
// static/generator/ckeditor/plugins/contextmenu/lang/is.js
// static/generator/ckeditor/plugins/contextmenu/lang/it.js
// static/generator/ckeditor/plugins/contextmenu/lang/ja.js
// static/generator/ckeditor/plugins/contextmenu/lang/ka.js
// static/generator/ckeditor/plugins/contextmenu/lang/km.js
// static/generator/ckeditor/plugins/contextmenu/lang/ko.js
// static/generator/ckeditor/plugins/contextmenu/lang/ku.js
// static/generator/ckeditor/plugins/contextmenu/lang/lt.js
// static/generator/ckeditor/plugins/contextmenu/lang/lv.js
// static/generator/ckeditor/plugins/contextmenu/lang/mk.js
// static/generator/ckeditor/plugins/contextmenu/lang/mn.js
// static/generator/ckeditor/plugins/contextmenu/lang/ms.js
// static/generator/ckeditor/plugins/contextmenu/lang/nb.js
// static/generator/ckeditor/plugins/contextmenu/lang/nl.js
// static/generator/ckeditor/plugins/contextmenu/lang/no.js
// static/generator/ckeditor/plugins/contextmenu/lang/oc.js
// static/generator/ckeditor/plugins/contextmenu/lang/pl.js
// static/generator/ckeditor/plugins/contextmenu/lang/pt-br.js
// static/generator/ckeditor/plugins/contextmenu/lang/pt.js
// static/generator/ckeditor/plugins/contextmenu/lang/ro.js
// static/generator/ckeditor/plugins/contextmenu/lang/ru.js
// static/generator/ckeditor/plugins/contextmenu/lang/si.js
// static/generator/ckeditor/plugins/contextmenu/lang/sk.js
// static/generator/ckeditor/plugins/contextmenu/lang/sl.js
// static/generator/ckeditor/plugins/contextmenu/lang/sq.js
// static/generator/ckeditor/plugins/contextmenu/lang/sr-latn.js
// static/generator/ckeditor/plugins/contextmenu/lang/sr.js
// static/generator/ckeditor/plugins/contextmenu/lang/sv.js
// static/generator/ckeditor/plugins/contextmenu/lang/th.js
// static/generator/ckeditor/plugins/contextmenu/lang/tr.js
// static/generator/ckeditor/plugins/contextmenu/lang/tt.js
// static/generator/ckeditor/plugins/contextmenu/lang/ug.js
// static/generator/ckeditor/plugins/contextmenu/lang/uk.js
// static/generator/ckeditor/plugins/contextmenu/lang/vi.js
// static/generator/ckeditor/plugins/contextmenu/lang/zh-cn.js
// static/generator/ckeditor/plugins/contextmenu/lang/zh.js
// static/generator/ckeditor/plugins/contextmenu/plugin.js
// static/generator/ckeditor/plugins/copyformatting/cursors/cursor-disabled.svg
// static/generator/ckeditor/plugins/copyformatting/cursors/cursor.svg
// static/generator/ckeditor/plugins/copyformatting/icons/copyformatting.png
// static/generator/ckeditor/plugins/copyformatting/icons/hidpi/copyformatting.png
// static/generator/ckeditor/plugins/copyformatting/lang/en.js
// static/generator/ckeditor/plugins/copyformatting/plugin.js
// static/generator/ckeditor/plugins/copyformatting/styles/copyformatting.css
// static/generator/ckeditor/plugins/dialog/dialogDefinition.js
// static/generator/ckeditor/plugins/dialog/plugin.js
// static/generator/ckeditor/plugins/dialog/samples/assets/my_dialog.js
// static/generator/ckeditor/plugins/dialog/samples/dialog.html
// static/generator/ckeditor/plugins/dialogadvtab/plugin.js
// static/generator/ckeditor/plugins/dialogui/plugin.js
// static/generator/ckeditor/plugins/div/dialogs/div.js
// static/generator/ckeditor/plugins/div/icons/creatediv.png
// static/generator/ckeditor/plugins/div/icons/hidpi/creatediv.png
// static/generator/ckeditor/plugins/div/lang/af.js
// static/generator/ckeditor/plugins/div/lang/ar.js
// static/generator/ckeditor/plugins/div/lang/az.js
// static/generator/ckeditor/plugins/div/lang/bg.js
// static/generator/ckeditor/plugins/div/lang/bn.js
// static/generator/ckeditor/plugins/div/lang/bs.js
// static/generator/ckeditor/plugins/div/lang/ca.js
// static/generator/ckeditor/plugins/div/lang/cs.js
// static/generator/ckeditor/plugins/div/lang/cy.js
// static/generator/ckeditor/plugins/div/lang/da.js
// static/generator/ckeditor/plugins/div/lang/de-ch.js
// static/generator/ckeditor/plugins/div/lang/de.js
// static/generator/ckeditor/plugins/div/lang/el.js
// static/generator/ckeditor/plugins/div/lang/en-au.js
// static/generator/ckeditor/plugins/div/lang/en-ca.js
// static/generator/ckeditor/plugins/div/lang/en-gb.js
// static/generator/ckeditor/plugins/div/lang/en.js
// static/generator/ckeditor/plugins/div/lang/eo.js
// static/generator/ckeditor/plugins/div/lang/es.js
// static/generator/ckeditor/plugins/div/lang/et.js
// static/generator/ckeditor/plugins/div/lang/eu.js
// static/generator/ckeditor/plugins/div/lang/fa.js
// static/generator/ckeditor/plugins/div/lang/fi.js
// static/generator/ckeditor/plugins/div/lang/fo.js
// static/generator/ckeditor/plugins/div/lang/fr-ca.js
// static/generator/ckeditor/plugins/div/lang/fr.js
// static/generator/ckeditor/plugins/div/lang/gl.js
// static/generator/ckeditor/plugins/div/lang/gu.js
// static/generator/ckeditor/plugins/div/lang/he.js
// static/generator/ckeditor/plugins/div/lang/hi.js
// static/generator/ckeditor/plugins/div/lang/hr.js
// static/generator/ckeditor/plugins/div/lang/hu.js
// static/generator/ckeditor/plugins/div/lang/id.js
// static/generator/ckeditor/plugins/div/lang/is.js
// static/generator/ckeditor/plugins/div/lang/it.js
// static/generator/ckeditor/plugins/div/lang/ja.js
// static/generator/ckeditor/plugins/div/lang/ka.js
// static/generator/ckeditor/plugins/div/lang/km.js
// static/generator/ckeditor/plugins/div/lang/ko.js
// static/generator/ckeditor/plugins/div/lang/ku.js
// static/generator/ckeditor/plugins/div/lang/lt.js
// static/generator/ckeditor/plugins/div/lang/lv.js
// static/generator/ckeditor/plugins/div/lang/mk.js
// static/generator/ckeditor/plugins/div/lang/mn.js
// static/generator/ckeditor/plugins/div/lang/ms.js
// static/generator/ckeditor/plugins/div/lang/nb.js
// static/generator/ckeditor/plugins/div/lang/nl.js
// static/generator/ckeditor/plugins/div/lang/no.js
// static/generator/ckeditor/plugins/div/lang/oc.js
// static/generator/ckeditor/plugins/div/lang/pl.js
// static/generator/ckeditor/plugins/div/lang/pt-br.js
// static/generator/ckeditor/plugins/div/lang/pt.js
// static/generator/ckeditor/plugins/div/lang/ro.js
// static/generator/ckeditor/plugins/div/lang/ru.js
// static/generator/ckeditor/plugins/div/lang/si.js
// static/generator/ckeditor/plugins/div/lang/sk.js
// static/generator/ckeditor/plugins/div/lang/sl.js
// static/generator/ckeditor/plugins/div/lang/sq.js
// static/generator/ckeditor/plugins/div/lang/sr-latn.js
// static/generator/ckeditor/plugins/div/lang/sr.js
// static/generator/ckeditor/plugins/div/lang/sv.js
// static/generator/ckeditor/plugins/div/lang/th.js
// static/generator/ckeditor/plugins/div/lang/tr.js
// static/generator/ckeditor/plugins/div/lang/tt.js
// static/generator/ckeditor/plugins/div/lang/ug.js
// static/generator/ckeditor/plugins/div/lang/uk.js
// static/generator/ckeditor/plugins/div/lang/vi.js
// static/generator/ckeditor/plugins/div/lang/zh-cn.js
// static/generator/ckeditor/plugins/div/lang/zh.js
// static/generator/ckeditor/plugins/div/plugin.js
// static/generator/ckeditor/plugins/elementspath/lang/af.js
// static/generator/ckeditor/plugins/elementspath/lang/ar.js
// static/generator/ckeditor/plugins/elementspath/lang/az.js
// static/generator/ckeditor/plugins/elementspath/lang/bg.js
// static/generator/ckeditor/plugins/elementspath/lang/bn.js
// static/generator/ckeditor/plugins/elementspath/lang/bs.js
// static/generator/ckeditor/plugins/elementspath/lang/ca.js
// static/generator/ckeditor/plugins/elementspath/lang/cs.js
// static/generator/ckeditor/plugins/elementspath/lang/cy.js
// static/generator/ckeditor/plugins/elementspath/lang/da.js
// static/generator/ckeditor/plugins/elementspath/lang/de-ch.js
// static/generator/ckeditor/plugins/elementspath/lang/de.js
// static/generator/ckeditor/plugins/elementspath/lang/el.js
// static/generator/ckeditor/plugins/elementspath/lang/en-au.js
// static/generator/ckeditor/plugins/elementspath/lang/en-ca.js
// static/generator/ckeditor/plugins/elementspath/lang/en-gb.js
// static/generator/ckeditor/plugins/elementspath/lang/en.js
// static/generator/ckeditor/plugins/elementspath/lang/eo.js
// static/generator/ckeditor/plugins/elementspath/lang/es.js
// static/generator/ckeditor/plugins/elementspath/lang/et.js
// static/generator/ckeditor/plugins/elementspath/lang/eu.js
// static/generator/ckeditor/plugins/elementspath/lang/fa.js
// static/generator/ckeditor/plugins/elementspath/lang/fi.js
// static/generator/ckeditor/plugins/elementspath/lang/fo.js
// static/generator/ckeditor/plugins/elementspath/lang/fr-ca.js
// static/generator/ckeditor/plugins/elementspath/lang/fr.js
// static/generator/ckeditor/plugins/elementspath/lang/gl.js
// static/generator/ckeditor/plugins/elementspath/lang/gu.js
// static/generator/ckeditor/plugins/elementspath/lang/he.js
// static/generator/ckeditor/plugins/elementspath/lang/hi.js
// static/generator/ckeditor/plugins/elementspath/lang/hr.js
// static/generator/ckeditor/plugins/elementspath/lang/hu.js
// static/generator/ckeditor/plugins/elementspath/lang/is.js
// static/generator/ckeditor/plugins/elementspath/lang/it.js
// static/generator/ckeditor/plugins/elementspath/lang/ja.js
// static/generator/ckeditor/plugins/elementspath/lang/ka.js
// static/generator/ckeditor/plugins/elementspath/lang/km.js
// static/generator/ckeditor/plugins/elementspath/lang/ko.js
// static/generator/ckeditor/plugins/elementspath/lang/ku.js
// static/generator/ckeditor/plugins/elementspath/lang/lt.js
// static/generator/ckeditor/plugins/elementspath/lang/lv.js
// static/generator/ckeditor/plugins/elementspath/lang/mk.js
// static/generator/ckeditor/plugins/elementspath/lang/mn.js
// static/generator/ckeditor/plugins/elementspath/lang/ms.js
// static/generator/ckeditor/plugins/elementspath/lang/nb.js
// static/generator/ckeditor/plugins/elementspath/lang/nl.js
// static/generator/ckeditor/plugins/elementspath/lang/no.js
// static/generator/ckeditor/plugins/elementspath/lang/oc.js
// static/generator/ckeditor/plugins/elementspath/lang/pl.js
// static/generator/ckeditor/plugins/elementspath/lang/pt-br.js
// static/generator/ckeditor/plugins/elementspath/lang/pt.js
// static/generator/ckeditor/plugins/elementspath/lang/ro.js
// static/generator/ckeditor/plugins/elementspath/lang/ru.js
// static/generator/ckeditor/plugins/elementspath/lang/si.js
// static/generator/ckeditor/plugins/elementspath/lang/sk.js
// static/generator/ckeditor/plugins/elementspath/lang/sl.js
// static/generator/ckeditor/plugins/elementspath/lang/sq.js
// static/generator/ckeditor/plugins/elementspath/lang/sr-latn.js
// static/generator/ckeditor/plugins/elementspath/lang/sr.js
// static/generator/ckeditor/plugins/elementspath/lang/sv.js
// static/generator/ckeditor/plugins/elementspath/lang/th.js
// static/generator/ckeditor/plugins/elementspath/lang/tr.js
// static/generator/ckeditor/plugins/elementspath/lang/tt.js
// static/generator/ckeditor/plugins/elementspath/lang/ug.js
// static/generator/ckeditor/plugins/elementspath/lang/uk.js
// static/generator/ckeditor/plugins/elementspath/lang/vi.js
// static/generator/ckeditor/plugins/elementspath/lang/zh-cn.js
// static/generator/ckeditor/plugins/elementspath/lang/zh.js
// static/generator/ckeditor/plugins/elementspath/plugin.js
// static/generator/ckeditor/plugins/enterkey/plugin.js
// static/generator/ckeditor/plugins/enterkey/samples/enterkey.html
// static/generator/ckeditor/plugins/entities/plugin.js
// static/generator/ckeditor/plugins/fakeobjects/images/spacer.gif
// static/generator/ckeditor/plugins/fakeobjects/lang/af.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ar.js
// static/generator/ckeditor/plugins/fakeobjects/lang/az.js
// static/generator/ckeditor/plugins/fakeobjects/lang/bg.js
// static/generator/ckeditor/plugins/fakeobjects/lang/bn.js
// static/generator/ckeditor/plugins/fakeobjects/lang/bs.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ca.js
// static/generator/ckeditor/plugins/fakeobjects/lang/cs.js
// static/generator/ckeditor/plugins/fakeobjects/lang/cy.js
// static/generator/ckeditor/plugins/fakeobjects/lang/da.js
// static/generator/ckeditor/plugins/fakeobjects/lang/de-ch.js
// static/generator/ckeditor/plugins/fakeobjects/lang/de.js
// static/generator/ckeditor/plugins/fakeobjects/lang/el.js
// static/generator/ckeditor/plugins/fakeobjects/lang/en-au.js
// static/generator/ckeditor/plugins/fakeobjects/lang/en-ca.js
// static/generator/ckeditor/plugins/fakeobjects/lang/en-gb.js
// static/generator/ckeditor/plugins/fakeobjects/lang/en.js
// static/generator/ckeditor/plugins/fakeobjects/lang/eo.js
// static/generator/ckeditor/plugins/fakeobjects/lang/es.js
// static/generator/ckeditor/plugins/fakeobjects/lang/et.js
// static/generator/ckeditor/plugins/fakeobjects/lang/eu.js
// static/generator/ckeditor/plugins/fakeobjects/lang/fa.js
// static/generator/ckeditor/plugins/fakeobjects/lang/fi.js
// static/generator/ckeditor/plugins/fakeobjects/lang/fo.js
// static/generator/ckeditor/plugins/fakeobjects/lang/fr-ca.js
// static/generator/ckeditor/plugins/fakeobjects/lang/fr.js
// static/generator/ckeditor/plugins/fakeobjects/lang/gl.js
// static/generator/ckeditor/plugins/fakeobjects/lang/gu.js
// static/generator/ckeditor/plugins/fakeobjects/lang/he.js
// static/generator/ckeditor/plugins/fakeobjects/lang/hi.js
// static/generator/ckeditor/plugins/fakeobjects/lang/hr.js
// static/generator/ckeditor/plugins/fakeobjects/lang/hu.js
// static/generator/ckeditor/plugins/fakeobjects/lang/id.js
// static/generator/ckeditor/plugins/fakeobjects/lang/is.js
// static/generator/ckeditor/plugins/fakeobjects/lang/it.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ja.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ka.js
// static/generator/ckeditor/plugins/fakeobjects/lang/km.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ko.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ku.js
// static/generator/ckeditor/plugins/fakeobjects/lang/lt.js
// static/generator/ckeditor/plugins/fakeobjects/lang/lv.js
// static/generator/ckeditor/plugins/fakeobjects/lang/mk.js
// static/generator/ckeditor/plugins/fakeobjects/lang/mn.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ms.js
// static/generator/ckeditor/plugins/fakeobjects/lang/nb.js
// static/generator/ckeditor/plugins/fakeobjects/lang/nl.js
// static/generator/ckeditor/plugins/fakeobjects/lang/no.js
// static/generator/ckeditor/plugins/fakeobjects/lang/oc.js
// static/generator/ckeditor/plugins/fakeobjects/lang/pl.js
// static/generator/ckeditor/plugins/fakeobjects/lang/pt-br.js
// static/generator/ckeditor/plugins/fakeobjects/lang/pt.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ro.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ru.js
// static/generator/ckeditor/plugins/fakeobjects/lang/si.js
// static/generator/ckeditor/plugins/fakeobjects/lang/sk.js
// static/generator/ckeditor/plugins/fakeobjects/lang/sl.js
// static/generator/ckeditor/plugins/fakeobjects/lang/sq.js
// static/generator/ckeditor/plugins/fakeobjects/lang/sr-latn.js
// static/generator/ckeditor/plugins/fakeobjects/lang/sr.js
// static/generator/ckeditor/plugins/fakeobjects/lang/sv.js
// static/generator/ckeditor/plugins/fakeobjects/lang/th.js
// static/generator/ckeditor/plugins/fakeobjects/lang/tr.js
// static/generator/ckeditor/plugins/fakeobjects/lang/tt.js
// static/generator/ckeditor/plugins/fakeobjects/lang/ug.js
// static/generator/ckeditor/plugins/fakeobjects/lang/uk.js
// static/generator/ckeditor/plugins/fakeobjects/lang/vi.js
// static/generator/ckeditor/plugins/fakeobjects/lang/zh-cn.js
// static/generator/ckeditor/plugins/fakeobjects/lang/zh.js
// static/generator/ckeditor/plugins/fakeobjects/plugin.js
// static/generator/ckeditor/plugins/filebrowser/plugin.js
// static/generator/ckeditor/plugins/find/dialogs/find.js
// static/generator/ckeditor/plugins/find/icons/find-rtl.png
// static/generator/ckeditor/plugins/find/icons/find.png
// static/generator/ckeditor/plugins/find/icons/hidpi/find-rtl.png
// static/generator/ckeditor/plugins/find/icons/hidpi/find.png
// static/generator/ckeditor/plugins/find/icons/hidpi/replace.png
// static/generator/ckeditor/plugins/find/icons/replace.png
// static/generator/ckeditor/plugins/find/lang/af.js
// static/generator/ckeditor/plugins/find/lang/ar.js
// static/generator/ckeditor/plugins/find/lang/az.js
// static/generator/ckeditor/plugins/find/lang/bg.js
// static/generator/ckeditor/plugins/find/lang/bn.js
// static/generator/ckeditor/plugins/find/lang/bs.js
// static/generator/ckeditor/plugins/find/lang/ca.js
// static/generator/ckeditor/plugins/find/lang/cs.js
// static/generator/ckeditor/plugins/find/lang/cy.js
// static/generator/ckeditor/plugins/find/lang/da.js
// static/generator/ckeditor/plugins/find/lang/de-ch.js
// static/generator/ckeditor/plugins/find/lang/de.js
// static/generator/ckeditor/plugins/find/lang/el.js
// static/generator/ckeditor/plugins/find/lang/en-au.js
// static/generator/ckeditor/plugins/find/lang/en-ca.js
// static/generator/ckeditor/plugins/find/lang/en-gb.js
// static/generator/ckeditor/plugins/find/lang/en.js
// static/generator/ckeditor/plugins/find/lang/eo.js
// static/generator/ckeditor/plugins/find/lang/es.js
// static/generator/ckeditor/plugins/find/lang/et.js
// static/generator/ckeditor/plugins/find/lang/eu.js
// static/generator/ckeditor/plugins/find/lang/fa.js
// static/generator/ckeditor/plugins/find/lang/fi.js
// static/generator/ckeditor/plugins/find/lang/fo.js
// static/generator/ckeditor/plugins/find/lang/fr-ca.js
// static/generator/ckeditor/plugins/find/lang/fr.js
// static/generator/ckeditor/plugins/find/lang/gl.js
// static/generator/ckeditor/plugins/find/lang/gu.js
// static/generator/ckeditor/plugins/find/lang/he.js
// static/generator/ckeditor/plugins/find/lang/hi.js
// static/generator/ckeditor/plugins/find/lang/hr.js
// static/generator/ckeditor/plugins/find/lang/hu.js
// static/generator/ckeditor/plugins/find/lang/id.js
// static/generator/ckeditor/plugins/find/lang/is.js
// static/generator/ckeditor/plugins/find/lang/it.js
// static/generator/ckeditor/plugins/find/lang/ja.js
// static/generator/ckeditor/plugins/find/lang/ka.js
// static/generator/ckeditor/plugins/find/lang/km.js
// static/generator/ckeditor/plugins/find/lang/ko.js
// static/generator/ckeditor/plugins/find/lang/ku.js
// static/generator/ckeditor/plugins/find/lang/lt.js
// static/generator/ckeditor/plugins/find/lang/lv.js
// static/generator/ckeditor/plugins/find/lang/mk.js
// static/generator/ckeditor/plugins/find/lang/mn.js
// static/generator/ckeditor/plugins/find/lang/ms.js
// static/generator/ckeditor/plugins/find/lang/nb.js
// static/generator/ckeditor/plugins/find/lang/nl.js
// static/generator/ckeditor/plugins/find/lang/no.js
// static/generator/ckeditor/plugins/find/lang/oc.js
// static/generator/ckeditor/plugins/find/lang/pl.js
// static/generator/ckeditor/plugins/find/lang/pt-br.js
// static/generator/ckeditor/plugins/find/lang/pt.js
// static/generator/ckeditor/plugins/find/lang/ro.js
// static/generator/ckeditor/plugins/find/lang/ru.js
// static/generator/ckeditor/plugins/find/lang/si.js
// static/generator/ckeditor/plugins/find/lang/sk.js
// static/generator/ckeditor/plugins/find/lang/sl.js
// static/generator/ckeditor/plugins/find/lang/sq.js
// static/generator/ckeditor/plugins/find/lang/sr-latn.js
// static/generator/ckeditor/plugins/find/lang/sr.js
// static/generator/ckeditor/plugins/find/lang/sv.js
// static/generator/ckeditor/plugins/find/lang/th.js
// static/generator/ckeditor/plugins/find/lang/tr.js
// static/generator/ckeditor/plugins/find/lang/tt.js
// static/generator/ckeditor/plugins/find/lang/ug.js
// static/generator/ckeditor/plugins/find/lang/uk.js
// static/generator/ckeditor/plugins/find/lang/vi.js
// static/generator/ckeditor/plugins/find/lang/zh-cn.js
// static/generator/ckeditor/plugins/find/lang/zh.js
// static/generator/ckeditor/plugins/find/plugin.js
// static/generator/ckeditor/plugins/flash/dialogs/flash.js
// static/generator/ckeditor/plugins/flash/icons/flash.png
// static/generator/ckeditor/plugins/flash/icons/hidpi/flash.png
// static/generator/ckeditor/plugins/flash/images/placeholder.png
// static/generator/ckeditor/plugins/flash/lang/af.js
// static/generator/ckeditor/plugins/flash/lang/ar.js
// static/generator/ckeditor/plugins/flash/lang/az.js
// static/generator/ckeditor/plugins/flash/lang/bg.js
// static/generator/ckeditor/plugins/flash/lang/bn.js
// static/generator/ckeditor/plugins/flash/lang/bs.js
// static/generator/ckeditor/plugins/flash/lang/ca.js
// static/generator/ckeditor/plugins/flash/lang/cs.js
// static/generator/ckeditor/plugins/flash/lang/cy.js
// static/generator/ckeditor/plugins/flash/lang/da.js
// static/generator/ckeditor/plugins/flash/lang/de-ch.js
// static/generator/ckeditor/plugins/flash/lang/de.js
// static/generator/ckeditor/plugins/flash/lang/el.js
// static/generator/ckeditor/plugins/flash/lang/en-au.js
// static/generator/ckeditor/plugins/flash/lang/en-ca.js
// static/generator/ckeditor/plugins/flash/lang/en-gb.js
// static/generator/ckeditor/plugins/flash/lang/en.js
// static/generator/ckeditor/plugins/flash/lang/eo.js
// static/generator/ckeditor/plugins/flash/lang/es.js
// static/generator/ckeditor/plugins/flash/lang/et.js
// static/generator/ckeditor/plugins/flash/lang/eu.js
// static/generator/ckeditor/plugins/flash/lang/fa.js
// static/generator/ckeditor/plugins/flash/lang/fi.js
// static/generator/ckeditor/plugins/flash/lang/fo.js
// static/generator/ckeditor/plugins/flash/lang/fr-ca.js
// static/generator/ckeditor/plugins/flash/lang/fr.js
// static/generator/ckeditor/plugins/flash/lang/gl.js
// static/generator/ckeditor/plugins/flash/lang/gu.js
// static/generator/ckeditor/plugins/flash/lang/he.js
// static/generator/ckeditor/plugins/flash/lang/hi.js
// static/generator/ckeditor/plugins/flash/lang/hr.js
// static/generator/ckeditor/plugins/flash/lang/hu.js
// static/generator/ckeditor/plugins/flash/lang/id.js
// static/generator/ckeditor/plugins/flash/lang/is.js
// static/generator/ckeditor/plugins/flash/lang/it.js
// static/generator/ckeditor/plugins/flash/lang/ja.js
// static/generator/ckeditor/plugins/flash/lang/ka.js
// static/generator/ckeditor/plugins/flash/lang/km.js
// static/generator/ckeditor/plugins/flash/lang/ko.js
// static/generator/ckeditor/plugins/flash/lang/ku.js
// static/generator/ckeditor/plugins/flash/lang/lt.js
// static/generator/ckeditor/plugins/flash/lang/lv.js
// static/generator/ckeditor/plugins/flash/lang/mk.js
// static/generator/ckeditor/plugins/flash/lang/mn.js
// static/generator/ckeditor/plugins/flash/lang/ms.js
// static/generator/ckeditor/plugins/flash/lang/nb.js
// static/generator/ckeditor/plugins/flash/lang/nl.js
// static/generator/ckeditor/plugins/flash/lang/no.js
// static/generator/ckeditor/plugins/flash/lang/oc.js
// static/generator/ckeditor/plugins/flash/lang/pl.js
// static/generator/ckeditor/plugins/flash/lang/pt-br.js
// static/generator/ckeditor/plugins/flash/lang/pt.js
// static/generator/ckeditor/plugins/flash/lang/ro.js
// static/generator/ckeditor/plugins/flash/lang/ru.js
// static/generator/ckeditor/plugins/flash/lang/si.js
// static/generator/ckeditor/plugins/flash/lang/sk.js
// static/generator/ckeditor/plugins/flash/lang/sl.js
// static/generator/ckeditor/plugins/flash/lang/sq.js
// static/generator/ckeditor/plugins/flash/lang/sr-latn.js
// static/generator/ckeditor/plugins/flash/lang/sr.js
// static/generator/ckeditor/plugins/flash/lang/sv.js
// static/generator/ckeditor/plugins/flash/lang/th.js
// static/generator/ckeditor/plugins/flash/lang/tr.js
// static/generator/ckeditor/plugins/flash/lang/tt.js
// static/generator/ckeditor/plugins/flash/lang/ug.js
// static/generator/ckeditor/plugins/flash/lang/uk.js
// static/generator/ckeditor/plugins/flash/lang/vi.js
// static/generator/ckeditor/plugins/flash/lang/zh-cn.js
// static/generator/ckeditor/plugins/flash/lang/zh.js
// static/generator/ckeditor/plugins/flash/plugin.js
// static/generator/ckeditor/plugins/floatingspace/plugin.js
// static/generator/ckeditor/plugins/floatpanel/plugin.js
// static/generator/ckeditor/plugins/font/lang/af.js
// static/generator/ckeditor/plugins/font/lang/ar.js
// static/generator/ckeditor/plugins/font/lang/az.js
// static/generator/ckeditor/plugins/font/lang/bg.js
// static/generator/ckeditor/plugins/font/lang/bn.js
// static/generator/ckeditor/plugins/font/lang/bs.js
// static/generator/ckeditor/plugins/font/lang/ca.js
// static/generator/ckeditor/plugins/font/lang/cs.js
// static/generator/ckeditor/plugins/font/lang/cy.js
// static/generator/ckeditor/plugins/font/lang/da.js
// static/generator/ckeditor/plugins/font/lang/de-ch.js
// static/generator/ckeditor/plugins/font/lang/de.js
// static/generator/ckeditor/plugins/font/lang/el.js
// static/generator/ckeditor/plugins/font/lang/en-au.js
// static/generator/ckeditor/plugins/font/lang/en-ca.js
// static/generator/ckeditor/plugins/font/lang/en-gb.js
// static/generator/ckeditor/plugins/font/lang/en.js
// static/generator/ckeditor/plugins/font/lang/eo.js
// static/generator/ckeditor/plugins/font/lang/es.js
// static/generator/ckeditor/plugins/font/lang/et.js
// static/generator/ckeditor/plugins/font/lang/eu.js
// static/generator/ckeditor/plugins/font/lang/fa.js
// static/generator/ckeditor/plugins/font/lang/fi.js
// static/generator/ckeditor/plugins/font/lang/fo.js
// static/generator/ckeditor/plugins/font/lang/fr-ca.js
// static/generator/ckeditor/plugins/font/lang/fr.js
// static/generator/ckeditor/plugins/font/lang/gl.js
// static/generator/ckeditor/plugins/font/lang/gu.js
// static/generator/ckeditor/plugins/font/lang/he.js
// static/generator/ckeditor/plugins/font/lang/hi.js
// static/generator/ckeditor/plugins/font/lang/hr.js
// static/generator/ckeditor/plugins/font/lang/hu.js
// static/generator/ckeditor/plugins/font/lang/id.js
// static/generator/ckeditor/plugins/font/lang/is.js
// static/generator/ckeditor/plugins/font/lang/it.js
// static/generator/ckeditor/plugins/font/lang/ja.js
// static/generator/ckeditor/plugins/font/lang/ka.js
// static/generator/ckeditor/plugins/font/lang/km.js
// static/generator/ckeditor/plugins/font/lang/ko.js
// static/generator/ckeditor/plugins/font/lang/ku.js
// static/generator/ckeditor/plugins/font/lang/lt.js
// static/generator/ckeditor/plugins/font/lang/lv.js
// static/generator/ckeditor/plugins/font/lang/mk.js
// static/generator/ckeditor/plugins/font/lang/mn.js
// static/generator/ckeditor/plugins/font/lang/ms.js
// static/generator/ckeditor/plugins/font/lang/nb.js
// static/generator/ckeditor/plugins/font/lang/nl.js
// static/generator/ckeditor/plugins/font/lang/no.js
// static/generator/ckeditor/plugins/font/lang/oc.js
// static/generator/ckeditor/plugins/font/lang/pl.js
// static/generator/ckeditor/plugins/font/lang/pt-br.js
// static/generator/ckeditor/plugins/font/lang/pt.js
// static/generator/ckeditor/plugins/font/lang/ro.js
// static/generator/ckeditor/plugins/font/lang/ru.js
// static/generator/ckeditor/plugins/font/lang/si.js
// static/generator/ckeditor/plugins/font/lang/sk.js
// static/generator/ckeditor/plugins/font/lang/sl.js
// static/generator/ckeditor/plugins/font/lang/sq.js
// static/generator/ckeditor/plugins/font/lang/sr-latn.js
// static/generator/ckeditor/plugins/font/lang/sr.js
// static/generator/ckeditor/plugins/font/lang/sv.js
// static/generator/ckeditor/plugins/font/lang/th.js
// static/generator/ckeditor/plugins/font/lang/tr.js
// static/generator/ckeditor/plugins/font/lang/tt.js
// static/generator/ckeditor/plugins/font/lang/ug.js
// static/generator/ckeditor/plugins/font/lang/uk.js
// static/generator/ckeditor/plugins/font/lang/vi.js
// static/generator/ckeditor/plugins/font/lang/zh-cn.js
// static/generator/ckeditor/plugins/font/lang/zh.js
// static/generator/ckeditor/plugins/font/plugin.js
// static/generator/ckeditor/plugins/fontawesome/dialogs/fontawesome.js
// static/generator/ckeditor/plugins/fontawesome/dialogs/index.html
// static/generator/ckeditor/plugins/fontawesome/font-awesome/css/font-awesome.min.css
// static/generator/ckeditor/plugins/fontawesome/font-awesome/css/index.html
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/FontAwesome.otf
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.eot
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.svg
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.ttf
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.woff
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.woff2
// static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/index.html
// static/generator/ckeditor/plugins/fontawesome/font-awesome/index.html
// static/generator/ckeditor/plugins/fontawesome/icons/fontawesome.png
// static/generator/ckeditor/plugins/fontawesome/icons/index.html
// static/generator/ckeditor/plugins/fontawesome/index.html
// static/generator/ckeditor/plugins/fontawesome/plugin.js
// static/generator/ckeditor/plugins/format/lang/af.js
// static/generator/ckeditor/plugins/format/lang/ar.js
// static/generator/ckeditor/plugins/format/lang/az.js
// static/generator/ckeditor/plugins/format/lang/bg.js
// static/generator/ckeditor/plugins/format/lang/bn.js
// static/generator/ckeditor/plugins/format/lang/bs.js
// static/generator/ckeditor/plugins/format/lang/ca.js
// static/generator/ckeditor/plugins/format/lang/cs.js
// static/generator/ckeditor/plugins/format/lang/cy.js
// static/generator/ckeditor/plugins/format/lang/da.js
// static/generator/ckeditor/plugins/format/lang/de-ch.js
// static/generator/ckeditor/plugins/format/lang/de.js
// static/generator/ckeditor/plugins/format/lang/el.js
// static/generator/ckeditor/plugins/format/lang/en-au.js
// static/generator/ckeditor/plugins/format/lang/en-ca.js
// static/generator/ckeditor/plugins/format/lang/en-gb.js
// static/generator/ckeditor/plugins/format/lang/en.js
// static/generator/ckeditor/plugins/format/lang/eo.js
// static/generator/ckeditor/plugins/format/lang/es.js
// static/generator/ckeditor/plugins/format/lang/et.js
// static/generator/ckeditor/plugins/format/lang/eu.js
// static/generator/ckeditor/plugins/format/lang/fa.js
// static/generator/ckeditor/plugins/format/lang/fi.js
// static/generator/ckeditor/plugins/format/lang/fo.js
// static/generator/ckeditor/plugins/format/lang/fr-ca.js
// static/generator/ckeditor/plugins/format/lang/fr.js
// static/generator/ckeditor/plugins/format/lang/gl.js
// static/generator/ckeditor/plugins/format/lang/gu.js
// static/generator/ckeditor/plugins/format/lang/he.js
// static/generator/ckeditor/plugins/format/lang/hi.js
// static/generator/ckeditor/plugins/format/lang/hr.js
// static/generator/ckeditor/plugins/format/lang/hu.js
// static/generator/ckeditor/plugins/format/lang/id.js
// static/generator/ckeditor/plugins/format/lang/is.js
// static/generator/ckeditor/plugins/format/lang/it.js
// static/generator/ckeditor/plugins/format/lang/ja.js
// static/generator/ckeditor/plugins/format/lang/ka.js
// static/generator/ckeditor/plugins/format/lang/km.js
// static/generator/ckeditor/plugins/format/lang/ko.js
// static/generator/ckeditor/plugins/format/lang/ku.js
// static/generator/ckeditor/plugins/format/lang/lt.js
// static/generator/ckeditor/plugins/format/lang/lv.js
// static/generator/ckeditor/plugins/format/lang/mk.js
// static/generator/ckeditor/plugins/format/lang/mn.js
// static/generator/ckeditor/plugins/format/lang/ms.js
// static/generator/ckeditor/plugins/format/lang/nb.js
// static/generator/ckeditor/plugins/format/lang/nl.js
// static/generator/ckeditor/plugins/format/lang/no.js
// static/generator/ckeditor/plugins/format/lang/oc.js
// static/generator/ckeditor/plugins/format/lang/pl.js
// static/generator/ckeditor/plugins/format/lang/pt-br.js
// static/generator/ckeditor/plugins/format/lang/pt.js
// static/generator/ckeditor/plugins/format/lang/ro.js
// static/generator/ckeditor/plugins/format/lang/ru.js
// static/generator/ckeditor/plugins/format/lang/si.js
// static/generator/ckeditor/plugins/format/lang/sk.js
// static/generator/ckeditor/plugins/format/lang/sl.js
// static/generator/ckeditor/plugins/format/lang/sq.js
// static/generator/ckeditor/plugins/format/lang/sr-latn.js
// static/generator/ckeditor/plugins/format/lang/sr.js
// static/generator/ckeditor/plugins/format/lang/sv.js
// static/generator/ckeditor/plugins/format/lang/th.js
// static/generator/ckeditor/plugins/format/lang/tr.js
// static/generator/ckeditor/plugins/format/lang/tt.js
// static/generator/ckeditor/plugins/format/lang/ug.js
// static/generator/ckeditor/plugins/format/lang/uk.js
// static/generator/ckeditor/plugins/format/lang/vi.js
// static/generator/ckeditor/plugins/format/lang/zh-cn.js
// static/generator/ckeditor/plugins/format/lang/zh.js
// static/generator/ckeditor/plugins/format/plugin.js
// static/generator/ckeditor/plugins/forms/dialogs/button.js
// static/generator/ckeditor/plugins/forms/dialogs/checkbox.js
// static/generator/ckeditor/plugins/forms/dialogs/form.js
// static/generator/ckeditor/plugins/forms/dialogs/hiddenfield.js
// static/generator/ckeditor/plugins/forms/dialogs/radio.js
// static/generator/ckeditor/plugins/forms/dialogs/select.js
// static/generator/ckeditor/plugins/forms/dialogs/textarea.js
// static/generator/ckeditor/plugins/forms/dialogs/textfield.js
// static/generator/ckeditor/plugins/forms/icons/button.png
// static/generator/ckeditor/plugins/forms/icons/checkbox.png
// static/generator/ckeditor/plugins/forms/icons/form.png
// static/generator/ckeditor/plugins/forms/icons/hiddenfield.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/button.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/checkbox.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/form.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/hiddenfield.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/imagebutton.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/radio.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/select-rtl.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/select.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/textarea-rtl.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/textarea.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/textfield-rtl.png
// static/generator/ckeditor/plugins/forms/icons/hidpi/textfield.png
// static/generator/ckeditor/plugins/forms/icons/imagebutton.png
// static/generator/ckeditor/plugins/forms/icons/radio.png
// static/generator/ckeditor/plugins/forms/icons/select-rtl.png
// static/generator/ckeditor/plugins/forms/icons/select.png
// static/generator/ckeditor/plugins/forms/icons/textarea-rtl.png
// static/generator/ckeditor/plugins/forms/icons/textarea.png
// static/generator/ckeditor/plugins/forms/icons/textfield-rtl.png
// static/generator/ckeditor/plugins/forms/icons/textfield.png
// static/generator/ckeditor/plugins/forms/images/hiddenfield.gif
// static/generator/ckeditor/plugins/forms/lang/af.js
// static/generator/ckeditor/plugins/forms/lang/ar.js
// static/generator/ckeditor/plugins/forms/lang/az.js
// static/generator/ckeditor/plugins/forms/lang/bg.js
// static/generator/ckeditor/plugins/forms/lang/bn.js
// static/generator/ckeditor/plugins/forms/lang/bs.js
// static/generator/ckeditor/plugins/forms/lang/ca.js
// static/generator/ckeditor/plugins/forms/lang/cs.js
// static/generator/ckeditor/plugins/forms/lang/cy.js
// static/generator/ckeditor/plugins/forms/lang/da.js
// static/generator/ckeditor/plugins/forms/lang/de-ch.js
// static/generator/ckeditor/plugins/forms/lang/de.js
// static/generator/ckeditor/plugins/forms/lang/el.js
// static/generator/ckeditor/plugins/forms/lang/en-au.js
// static/generator/ckeditor/plugins/forms/lang/en-ca.js
// static/generator/ckeditor/plugins/forms/lang/en-gb.js
// static/generator/ckeditor/plugins/forms/lang/en.js
// static/generator/ckeditor/plugins/forms/lang/eo.js
// static/generator/ckeditor/plugins/forms/lang/es.js
// static/generator/ckeditor/plugins/forms/lang/et.js
// static/generator/ckeditor/plugins/forms/lang/eu.js
// static/generator/ckeditor/plugins/forms/lang/fa.js
// static/generator/ckeditor/plugins/forms/lang/fi.js
// static/generator/ckeditor/plugins/forms/lang/fo.js
// static/generator/ckeditor/plugins/forms/lang/fr-ca.js
// static/generator/ckeditor/plugins/forms/lang/fr.js
// static/generator/ckeditor/plugins/forms/lang/gl.js
// static/generator/ckeditor/plugins/forms/lang/gu.js
// static/generator/ckeditor/plugins/forms/lang/he.js
// static/generator/ckeditor/plugins/forms/lang/hi.js
// static/generator/ckeditor/plugins/forms/lang/hr.js
// static/generator/ckeditor/plugins/forms/lang/hu.js
// static/generator/ckeditor/plugins/forms/lang/id.js
// static/generator/ckeditor/plugins/forms/lang/is.js
// static/generator/ckeditor/plugins/forms/lang/it.js
// static/generator/ckeditor/plugins/forms/lang/ja.js
// static/generator/ckeditor/plugins/forms/lang/ka.js
// static/generator/ckeditor/plugins/forms/lang/km.js
// static/generator/ckeditor/plugins/forms/lang/ko.js
// static/generator/ckeditor/plugins/forms/lang/ku.js
// static/generator/ckeditor/plugins/forms/lang/lt.js
// static/generator/ckeditor/plugins/forms/lang/lv.js
// static/generator/ckeditor/plugins/forms/lang/mk.js
// static/generator/ckeditor/plugins/forms/lang/mn.js
// static/generator/ckeditor/plugins/forms/lang/ms.js
// static/generator/ckeditor/plugins/forms/lang/nb.js
// static/generator/ckeditor/plugins/forms/lang/nl.js
// static/generator/ckeditor/plugins/forms/lang/no.js
// static/generator/ckeditor/plugins/forms/lang/oc.js
// static/generator/ckeditor/plugins/forms/lang/pl.js
// static/generator/ckeditor/plugins/forms/lang/pt-br.js
// static/generator/ckeditor/plugins/forms/lang/pt.js
// static/generator/ckeditor/plugins/forms/lang/ro.js
// static/generator/ckeditor/plugins/forms/lang/ru.js
// static/generator/ckeditor/plugins/forms/lang/si.js
// static/generator/ckeditor/plugins/forms/lang/sk.js
// static/generator/ckeditor/plugins/forms/lang/sl.js
// static/generator/ckeditor/plugins/forms/lang/sq.js
// static/generator/ckeditor/plugins/forms/lang/sr-latn.js
// static/generator/ckeditor/plugins/forms/lang/sr.js
// static/generator/ckeditor/plugins/forms/lang/sv.js
// static/generator/ckeditor/plugins/forms/lang/th.js
// static/generator/ckeditor/plugins/forms/lang/tr.js
// static/generator/ckeditor/plugins/forms/lang/tt.js
// static/generator/ckeditor/plugins/forms/lang/ug.js
// static/generator/ckeditor/plugins/forms/lang/uk.js
// static/generator/ckeditor/plugins/forms/lang/vi.js
// static/generator/ckeditor/plugins/forms/lang/zh-cn.js
// static/generator/ckeditor/plugins/forms/lang/zh.js
// static/generator/ckeditor/plugins/forms/plugin.js
// static/generator/ckeditor/plugins/glyphicons/css/config.json
// static/generator/ckeditor/plugins/glyphicons/css/css/bootstrap.css
// static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.eot
// static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.svg
// static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.ttf
// static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.woff
// static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.woff2
// static/generator/ckeditor/plugins/glyphicons/css/js/bootstrap.js
// static/generator/ckeditor/plugins/glyphicons/css/js/bootstrap.min.js
// static/generator/ckeditor/plugins/glyphicons/css/style.css
// static/generator/ckeditor/plugins/glyphicons/dialogs/glyphicons.js
// static/generator/ckeditor/plugins/horizontalrule/icons/hidpi/horizontalrule.png
// static/generator/ckeditor/plugins/horizontalrule/icons/horizontalrule.png
// static/generator/ckeditor/plugins/horizontalrule/lang/af.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ar.js
// static/generator/ckeditor/plugins/horizontalrule/lang/az.js
// static/generator/ckeditor/plugins/horizontalrule/lang/bg.js
// static/generator/ckeditor/plugins/horizontalrule/lang/bn.js
// static/generator/ckeditor/plugins/horizontalrule/lang/bs.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ca.js
// static/generator/ckeditor/plugins/horizontalrule/lang/cs.js
// static/generator/ckeditor/plugins/horizontalrule/lang/cy.js
// static/generator/ckeditor/plugins/horizontalrule/lang/da.js
// static/generator/ckeditor/plugins/horizontalrule/lang/de-ch.js
// static/generator/ckeditor/plugins/horizontalrule/lang/de.js
// static/generator/ckeditor/plugins/horizontalrule/lang/el.js
// static/generator/ckeditor/plugins/horizontalrule/lang/en-au.js
// static/generator/ckeditor/plugins/horizontalrule/lang/en-ca.js
// static/generator/ckeditor/plugins/horizontalrule/lang/en-gb.js
// static/generator/ckeditor/plugins/horizontalrule/lang/en.js
// static/generator/ckeditor/plugins/horizontalrule/lang/eo.js
// static/generator/ckeditor/plugins/horizontalrule/lang/es.js
// static/generator/ckeditor/plugins/horizontalrule/lang/et.js
// static/generator/ckeditor/plugins/horizontalrule/lang/eu.js
// static/generator/ckeditor/plugins/horizontalrule/lang/fa.js
// static/generator/ckeditor/plugins/horizontalrule/lang/fi.js
// static/generator/ckeditor/plugins/horizontalrule/lang/fo.js
// static/generator/ckeditor/plugins/horizontalrule/lang/fr-ca.js
// static/generator/ckeditor/plugins/horizontalrule/lang/fr.js
// static/generator/ckeditor/plugins/horizontalrule/lang/gl.js
// static/generator/ckeditor/plugins/horizontalrule/lang/gu.js
// static/generator/ckeditor/plugins/horizontalrule/lang/he.js
// static/generator/ckeditor/plugins/horizontalrule/lang/hi.js
// static/generator/ckeditor/plugins/horizontalrule/lang/hr.js
// static/generator/ckeditor/plugins/horizontalrule/lang/hu.js
// static/generator/ckeditor/plugins/horizontalrule/lang/id.js
// static/generator/ckeditor/plugins/horizontalrule/lang/is.js
// static/generator/ckeditor/plugins/horizontalrule/lang/it.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ja.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ka.js
// static/generator/ckeditor/plugins/horizontalrule/lang/km.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ko.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ku.js
// static/generator/ckeditor/plugins/horizontalrule/lang/lt.js
// static/generator/ckeditor/plugins/horizontalrule/lang/lv.js
// static/generator/ckeditor/plugins/horizontalrule/lang/mk.js
// static/generator/ckeditor/plugins/horizontalrule/lang/mn.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ms.js
// static/generator/ckeditor/plugins/horizontalrule/lang/nb.js
// static/generator/ckeditor/plugins/horizontalrule/lang/nl.js
// static/generator/ckeditor/plugins/horizontalrule/lang/no.js
// static/generator/ckeditor/plugins/horizontalrule/lang/oc.js
// static/generator/ckeditor/plugins/horizontalrule/lang/pl.js
// static/generator/ckeditor/plugins/horizontalrule/lang/pt-br.js
// static/generator/ckeditor/plugins/horizontalrule/lang/pt.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ro.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ru.js
// static/generator/ckeditor/plugins/horizontalrule/lang/si.js
// static/generator/ckeditor/plugins/horizontalrule/lang/sk.js
// static/generator/ckeditor/plugins/horizontalrule/lang/sl.js
// static/generator/ckeditor/plugins/horizontalrule/lang/sq.js
// static/generator/ckeditor/plugins/horizontalrule/lang/sr-latn.js
// static/generator/ckeditor/plugins/horizontalrule/lang/sr.js
// static/generator/ckeditor/plugins/horizontalrule/lang/sv.js
// static/generator/ckeditor/plugins/horizontalrule/lang/th.js
// static/generator/ckeditor/plugins/horizontalrule/lang/tr.js
// static/generator/ckeditor/plugins/horizontalrule/lang/tt.js
// static/generator/ckeditor/plugins/horizontalrule/lang/ug.js
// static/generator/ckeditor/plugins/horizontalrule/lang/uk.js
// static/generator/ckeditor/plugins/horizontalrule/lang/vi.js
// static/generator/ckeditor/plugins/horizontalrule/lang/zh-cn.js
// static/generator/ckeditor/plugins/horizontalrule/lang/zh.js
// static/generator/ckeditor/plugins/horizontalrule/plugin.js
// static/generator/ckeditor/plugins/htmlwriter/plugin.js
// static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/outputforflash.fla
// static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/outputforflash.swf
// static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/swfobject.js
// static/generator/ckeditor/plugins/htmlwriter/samples/outputforflash.html
// static/generator/ckeditor/plugins/htmlwriter/samples/outputhtml.html
// static/generator/ckeditor/plugins/icons.png
// static/generator/ckeditor/plugins/icons_hidpi.png
// static/generator/ckeditor/plugins/iframe/dialogs/iframe.js
// static/generator/ckeditor/plugins/iframe/icons/hidpi/iframe.png
// static/generator/ckeditor/plugins/iframe/icons/iframe.png
// static/generator/ckeditor/plugins/iframe/images/placeholder.png
// static/generator/ckeditor/plugins/iframe/lang/af.js
// static/generator/ckeditor/plugins/iframe/lang/ar.js
// static/generator/ckeditor/plugins/iframe/lang/az.js
// static/generator/ckeditor/plugins/iframe/lang/bg.js
// static/generator/ckeditor/plugins/iframe/lang/bn.js
// static/generator/ckeditor/plugins/iframe/lang/bs.js
// static/generator/ckeditor/plugins/iframe/lang/ca.js
// static/generator/ckeditor/plugins/iframe/lang/cs.js
// static/generator/ckeditor/plugins/iframe/lang/cy.js
// static/generator/ckeditor/plugins/iframe/lang/da.js
// static/generator/ckeditor/plugins/iframe/lang/de-ch.js
// static/generator/ckeditor/plugins/iframe/lang/de.js
// static/generator/ckeditor/plugins/iframe/lang/el.js
// static/generator/ckeditor/plugins/iframe/lang/en-au.js
// static/generator/ckeditor/plugins/iframe/lang/en-ca.js
// static/generator/ckeditor/plugins/iframe/lang/en-gb.js
// static/generator/ckeditor/plugins/iframe/lang/en.js
// static/generator/ckeditor/plugins/iframe/lang/eo.js
// static/generator/ckeditor/plugins/iframe/lang/es.js
// static/generator/ckeditor/plugins/iframe/lang/et.js
// static/generator/ckeditor/plugins/iframe/lang/eu.js
// static/generator/ckeditor/plugins/iframe/lang/fa.js
// static/generator/ckeditor/plugins/iframe/lang/fi.js
// static/generator/ckeditor/plugins/iframe/lang/fo.js
// static/generator/ckeditor/plugins/iframe/lang/fr-ca.js
// static/generator/ckeditor/plugins/iframe/lang/fr.js
// static/generator/ckeditor/plugins/iframe/lang/gl.js
// static/generator/ckeditor/plugins/iframe/lang/gu.js
// static/generator/ckeditor/plugins/iframe/lang/he.js
// static/generator/ckeditor/plugins/iframe/lang/hi.js
// static/generator/ckeditor/plugins/iframe/lang/hr.js
// static/generator/ckeditor/plugins/iframe/lang/hu.js
// static/generator/ckeditor/plugins/iframe/lang/id.js
// static/generator/ckeditor/plugins/iframe/lang/is.js
// static/generator/ckeditor/plugins/iframe/lang/it.js
// static/generator/ckeditor/plugins/iframe/lang/ja.js
// static/generator/ckeditor/plugins/iframe/lang/ka.js
// static/generator/ckeditor/plugins/iframe/lang/km.js
// static/generator/ckeditor/plugins/iframe/lang/ko.js
// static/generator/ckeditor/plugins/iframe/lang/ku.js
// static/generator/ckeditor/plugins/iframe/lang/lt.js
// static/generator/ckeditor/plugins/iframe/lang/lv.js
// static/generator/ckeditor/plugins/iframe/lang/mk.js
// static/generator/ckeditor/plugins/iframe/lang/mn.js
// static/generator/ckeditor/plugins/iframe/lang/ms.js
// static/generator/ckeditor/plugins/iframe/lang/nb.js
// static/generator/ckeditor/plugins/iframe/lang/nl.js
// static/generator/ckeditor/plugins/iframe/lang/no.js
// static/generator/ckeditor/plugins/iframe/lang/oc.js
// static/generator/ckeditor/plugins/iframe/lang/pl.js
// static/generator/ckeditor/plugins/iframe/lang/pt-br.js
// static/generator/ckeditor/plugins/iframe/lang/pt.js
// static/generator/ckeditor/plugins/iframe/lang/ro.js
// static/generator/ckeditor/plugins/iframe/lang/ru.js
// static/generator/ckeditor/plugins/iframe/lang/si.js
// static/generator/ckeditor/plugins/iframe/lang/sk.js
// static/generator/ckeditor/plugins/iframe/lang/sl.js
// static/generator/ckeditor/plugins/iframe/lang/sq.js
// static/generator/ckeditor/plugins/iframe/lang/sr-latn.js
// static/generator/ckeditor/plugins/iframe/lang/sr.js
// static/generator/ckeditor/plugins/iframe/lang/sv.js
// static/generator/ckeditor/plugins/iframe/lang/th.js
// static/generator/ckeditor/plugins/iframe/lang/tr.js
// static/generator/ckeditor/plugins/iframe/lang/tt.js
// static/generator/ckeditor/plugins/iframe/lang/ug.js
// static/generator/ckeditor/plugins/iframe/lang/uk.js
// static/generator/ckeditor/plugins/iframe/lang/vi.js
// static/generator/ckeditor/plugins/iframe/lang/zh-cn.js
// static/generator/ckeditor/plugins/iframe/lang/zh.js
// static/generator/ckeditor/plugins/iframe/plugin.js
// static/generator/ckeditor/plugins/image/dialogs/image.js
// static/generator/ckeditor/plugins/image/icons/hidpi/image.png
// static/generator/ckeditor/plugins/image/icons/image.png
// static/generator/ckeditor/plugins/image/images/noimage.png
// static/generator/ckeditor/plugins/image/lang/af.js
// static/generator/ckeditor/plugins/image/lang/ar.js
// static/generator/ckeditor/plugins/image/lang/az.js
// static/generator/ckeditor/plugins/image/lang/bg.js
// static/generator/ckeditor/plugins/image/lang/bn.js
// static/generator/ckeditor/plugins/image/lang/bs.js
// static/generator/ckeditor/plugins/image/lang/ca.js
// static/generator/ckeditor/plugins/image/lang/cs.js
// static/generator/ckeditor/plugins/image/lang/cy.js
// static/generator/ckeditor/plugins/image/lang/da.js
// static/generator/ckeditor/plugins/image/lang/de-ch.js
// static/generator/ckeditor/plugins/image/lang/de.js
// static/generator/ckeditor/plugins/image/lang/el.js
// static/generator/ckeditor/plugins/image/lang/en-au.js
// static/generator/ckeditor/plugins/image/lang/en-ca.js
// static/generator/ckeditor/plugins/image/lang/en-gb.js
// static/generator/ckeditor/plugins/image/lang/en.js
// static/generator/ckeditor/plugins/image/lang/eo.js
// static/generator/ckeditor/plugins/image/lang/es.js
// static/generator/ckeditor/plugins/image/lang/et.js
// static/generator/ckeditor/plugins/image/lang/eu.js
// static/generator/ckeditor/plugins/image/lang/fa.js
// static/generator/ckeditor/plugins/image/lang/fi.js
// static/generator/ckeditor/plugins/image/lang/fo.js
// static/generator/ckeditor/plugins/image/lang/fr-ca.js
// static/generator/ckeditor/plugins/image/lang/fr.js
// static/generator/ckeditor/plugins/image/lang/gl.js
// static/generator/ckeditor/plugins/image/lang/gu.js
// static/generator/ckeditor/plugins/image/lang/he.js
// static/generator/ckeditor/plugins/image/lang/hi.js
// static/generator/ckeditor/plugins/image/lang/hr.js
// static/generator/ckeditor/plugins/image/lang/hu.js
// static/generator/ckeditor/plugins/image/lang/id.js
// static/generator/ckeditor/plugins/image/lang/is.js
// static/generator/ckeditor/plugins/image/lang/it.js
// static/generator/ckeditor/plugins/image/lang/ja.js
// static/generator/ckeditor/plugins/image/lang/ka.js
// static/generator/ckeditor/plugins/image/lang/km.js
// static/generator/ckeditor/plugins/image/lang/ko.js
// static/generator/ckeditor/plugins/image/lang/ku.js
// static/generator/ckeditor/plugins/image/lang/lt.js
// static/generator/ckeditor/plugins/image/lang/lv.js
// static/generator/ckeditor/plugins/image/lang/mk.js
// static/generator/ckeditor/plugins/image/lang/mn.js
// static/generator/ckeditor/plugins/image/lang/ms.js
// static/generator/ckeditor/plugins/image/lang/nb.js
// static/generator/ckeditor/plugins/image/lang/nl.js
// static/generator/ckeditor/plugins/image/lang/no.js
// static/generator/ckeditor/plugins/image/lang/oc.js
// static/generator/ckeditor/plugins/image/lang/pl.js
// static/generator/ckeditor/plugins/image/lang/pt-br.js
// static/generator/ckeditor/plugins/image/lang/pt.js
// static/generator/ckeditor/plugins/image/lang/ro.js
// static/generator/ckeditor/plugins/image/lang/ru.js
// static/generator/ckeditor/plugins/image/lang/si.js
// static/generator/ckeditor/plugins/image/lang/sk.js
// static/generator/ckeditor/plugins/image/lang/sl.js
// static/generator/ckeditor/plugins/image/lang/sq.js
// static/generator/ckeditor/plugins/image/lang/sr-latn.js
// static/generator/ckeditor/plugins/image/lang/sr.js
// static/generator/ckeditor/plugins/image/lang/sv.js
// static/generator/ckeditor/plugins/image/lang/th.js
// static/generator/ckeditor/plugins/image/lang/tr.js
// static/generator/ckeditor/plugins/image/lang/tt.js
// static/generator/ckeditor/plugins/image/lang/ug.js
// static/generator/ckeditor/plugins/image/lang/uk.js
// static/generator/ckeditor/plugins/image/lang/vi.js
// static/generator/ckeditor/plugins/image/lang/zh-cn.js
// static/generator/ckeditor/plugins/image/lang/zh.js
// static/generator/ckeditor/plugins/image/plugin.js
// static/generator/ckeditor/plugins/indent/dev/indent.html
// static/generator/ckeditor/plugins/indent/icons/hidpi/indent-rtl.png
// static/generator/ckeditor/plugins/indent/icons/hidpi/indent.png
// static/generator/ckeditor/plugins/indent/icons/hidpi/outdent-rtl.png
// static/generator/ckeditor/plugins/indent/icons/hidpi/outdent.png
// static/generator/ckeditor/plugins/indent/icons/indent-rtl.png
// static/generator/ckeditor/plugins/indent/icons/indent.png
// static/generator/ckeditor/plugins/indent/icons/outdent-rtl.png
// static/generator/ckeditor/plugins/indent/icons/outdent.png
// static/generator/ckeditor/plugins/indent/lang/af.js
// static/generator/ckeditor/plugins/indent/lang/ar.js
// static/generator/ckeditor/plugins/indent/lang/az.js
// static/generator/ckeditor/plugins/indent/lang/bg.js
// static/generator/ckeditor/plugins/indent/lang/bn.js
// static/generator/ckeditor/plugins/indent/lang/bs.js
// static/generator/ckeditor/plugins/indent/lang/ca.js
// static/generator/ckeditor/plugins/indent/lang/cs.js
// static/generator/ckeditor/plugins/indent/lang/cy.js
// static/generator/ckeditor/plugins/indent/lang/da.js
// static/generator/ckeditor/plugins/indent/lang/de-ch.js
// static/generator/ckeditor/plugins/indent/lang/de.js
// static/generator/ckeditor/plugins/indent/lang/el.js
// static/generator/ckeditor/plugins/indent/lang/en-au.js
// static/generator/ckeditor/plugins/indent/lang/en-ca.js
// static/generator/ckeditor/plugins/indent/lang/en-gb.js
// static/generator/ckeditor/plugins/indent/lang/en.js
// static/generator/ckeditor/plugins/indent/lang/eo.js
// static/generator/ckeditor/plugins/indent/lang/es.js
// static/generator/ckeditor/plugins/indent/lang/et.js
// static/generator/ckeditor/plugins/indent/lang/eu.js
// static/generator/ckeditor/plugins/indent/lang/fa.js
// static/generator/ckeditor/plugins/indent/lang/fi.js
// static/generator/ckeditor/plugins/indent/lang/fo.js
// static/generator/ckeditor/plugins/indent/lang/fr-ca.js
// static/generator/ckeditor/plugins/indent/lang/fr.js
// static/generator/ckeditor/plugins/indent/lang/gl.js
// static/generator/ckeditor/plugins/indent/lang/gu.js
// static/generator/ckeditor/plugins/indent/lang/he.js
// static/generator/ckeditor/plugins/indent/lang/hi.js
// static/generator/ckeditor/plugins/indent/lang/hr.js
// static/generator/ckeditor/plugins/indent/lang/hu.js
// static/generator/ckeditor/plugins/indent/lang/id.js
// static/generator/ckeditor/plugins/indent/lang/is.js
// static/generator/ckeditor/plugins/indent/lang/it.js
// static/generator/ckeditor/plugins/indent/lang/ja.js
// static/generator/ckeditor/plugins/indent/lang/ka.js
// static/generator/ckeditor/plugins/indent/lang/km.js
// static/generator/ckeditor/plugins/indent/lang/ko.js
// static/generator/ckeditor/plugins/indent/lang/ku.js
// static/generator/ckeditor/plugins/indent/lang/lt.js
// static/generator/ckeditor/plugins/indent/lang/lv.js
// static/generator/ckeditor/plugins/indent/lang/mk.js
// static/generator/ckeditor/plugins/indent/lang/mn.js
// static/generator/ckeditor/plugins/indent/lang/ms.js
// static/generator/ckeditor/plugins/indent/lang/nb.js
// static/generator/ckeditor/plugins/indent/lang/nl.js
// static/generator/ckeditor/plugins/indent/lang/no.js
// static/generator/ckeditor/plugins/indent/lang/oc.js
// static/generator/ckeditor/plugins/indent/lang/pl.js
// static/generator/ckeditor/plugins/indent/lang/pt-br.js
// static/generator/ckeditor/plugins/indent/lang/pt.js
// static/generator/ckeditor/plugins/indent/lang/ro.js
// static/generator/ckeditor/plugins/indent/lang/ru.js
// static/generator/ckeditor/plugins/indent/lang/si.js
// static/generator/ckeditor/plugins/indent/lang/sk.js
// static/generator/ckeditor/plugins/indent/lang/sl.js
// static/generator/ckeditor/plugins/indent/lang/sq.js
// static/generator/ckeditor/plugins/indent/lang/sr-latn.js
// static/generator/ckeditor/plugins/indent/lang/sr.js
// static/generator/ckeditor/plugins/indent/lang/sv.js
// static/generator/ckeditor/plugins/indent/lang/th.js
// static/generator/ckeditor/plugins/indent/lang/tr.js
// static/generator/ckeditor/plugins/indent/lang/tt.js
// static/generator/ckeditor/plugins/indent/lang/ug.js
// static/generator/ckeditor/plugins/indent/lang/uk.js
// static/generator/ckeditor/plugins/indent/lang/vi.js
// static/generator/ckeditor/plugins/indent/lang/zh-cn.js
// static/generator/ckeditor/plugins/indent/lang/zh.js
// static/generator/ckeditor/plugins/indent/plugin.js
// static/generator/ckeditor/plugins/indentblock/plugin.js
// static/generator/ckeditor/plugins/indentlist/plugin.js
// static/generator/ckeditor/plugins/justify/icons/hidpi/justifyblock.png
// static/generator/ckeditor/plugins/justify/icons/hidpi/justifycenter.png
// static/generator/ckeditor/plugins/justify/icons/hidpi/justifyleft.png
// static/generator/ckeditor/plugins/justify/icons/hidpi/justifyright.png
// static/generator/ckeditor/plugins/justify/icons/justifyblock.png
// static/generator/ckeditor/plugins/justify/icons/justifycenter.png
// static/generator/ckeditor/plugins/justify/icons/justifyleft.png
// static/generator/ckeditor/plugins/justify/icons/justifyright.png
// static/generator/ckeditor/plugins/justify/lang/af.js
// static/generator/ckeditor/plugins/justify/lang/ar.js
// static/generator/ckeditor/plugins/justify/lang/az.js
// static/generator/ckeditor/plugins/justify/lang/bg.js
// static/generator/ckeditor/plugins/justify/lang/bn.js
// static/generator/ckeditor/plugins/justify/lang/bs.js
// static/generator/ckeditor/plugins/justify/lang/ca.js
// static/generator/ckeditor/plugins/justify/lang/cs.js
// static/generator/ckeditor/plugins/justify/lang/cy.js
// static/generator/ckeditor/plugins/justify/lang/da.js
// static/generator/ckeditor/plugins/justify/lang/de-ch.js
// static/generator/ckeditor/plugins/justify/lang/de.js
// static/generator/ckeditor/plugins/justify/lang/el.js
// static/generator/ckeditor/plugins/justify/lang/en-au.js
// static/generator/ckeditor/plugins/justify/lang/en-ca.js
// static/generator/ckeditor/plugins/justify/lang/en-gb.js
// static/generator/ckeditor/plugins/justify/lang/en.js
// static/generator/ckeditor/plugins/justify/lang/eo.js
// static/generator/ckeditor/plugins/justify/lang/es.js
// static/generator/ckeditor/plugins/justify/lang/et.js
// static/generator/ckeditor/plugins/justify/lang/eu.js
// static/generator/ckeditor/plugins/justify/lang/fa.js
// static/generator/ckeditor/plugins/justify/lang/fi.js
// static/generator/ckeditor/plugins/justify/lang/fo.js
// static/generator/ckeditor/plugins/justify/lang/fr-ca.js
// static/generator/ckeditor/plugins/justify/lang/fr.js
// static/generator/ckeditor/plugins/justify/lang/gl.js
// static/generator/ckeditor/plugins/justify/lang/gu.js
// static/generator/ckeditor/plugins/justify/lang/he.js
// static/generator/ckeditor/plugins/justify/lang/hi.js
// static/generator/ckeditor/plugins/justify/lang/hr.js
// static/generator/ckeditor/plugins/justify/lang/hu.js
// static/generator/ckeditor/plugins/justify/lang/id.js
// static/generator/ckeditor/plugins/justify/lang/is.js
// static/generator/ckeditor/plugins/justify/lang/it.js
// static/generator/ckeditor/plugins/justify/lang/ja.js
// static/generator/ckeditor/plugins/justify/lang/ka.js
// static/generator/ckeditor/plugins/justify/lang/km.js
// static/generator/ckeditor/plugins/justify/lang/ko.js
// static/generator/ckeditor/plugins/justify/lang/ku.js
// static/generator/ckeditor/plugins/justify/lang/lt.js
// static/generator/ckeditor/plugins/justify/lang/lv.js
// static/generator/ckeditor/plugins/justify/lang/mk.js
// static/generator/ckeditor/plugins/justify/lang/mn.js
// static/generator/ckeditor/plugins/justify/lang/ms.js
// static/generator/ckeditor/plugins/justify/lang/nb.js
// static/generator/ckeditor/plugins/justify/lang/nl.js
// static/generator/ckeditor/plugins/justify/lang/no.js
// static/generator/ckeditor/plugins/justify/lang/oc.js
// static/generator/ckeditor/plugins/justify/lang/pl.js
// static/generator/ckeditor/plugins/justify/lang/pt-br.js
// static/generator/ckeditor/plugins/justify/lang/pt.js
// static/generator/ckeditor/plugins/justify/lang/ro.js
// static/generator/ckeditor/plugins/justify/lang/ru.js
// static/generator/ckeditor/plugins/justify/lang/si.js
// static/generator/ckeditor/plugins/justify/lang/sk.js
// static/generator/ckeditor/plugins/justify/lang/sl.js
// static/generator/ckeditor/plugins/justify/lang/sq.js
// static/generator/ckeditor/plugins/justify/lang/sr-latn.js
// static/generator/ckeditor/plugins/justify/lang/sr.js
// static/generator/ckeditor/plugins/justify/lang/sv.js
// static/generator/ckeditor/plugins/justify/lang/th.js
// static/generator/ckeditor/plugins/justify/lang/tr.js
// static/generator/ckeditor/plugins/justify/lang/tt.js
// static/generator/ckeditor/plugins/justify/lang/ug.js
// static/generator/ckeditor/plugins/justify/lang/uk.js
// static/generator/ckeditor/plugins/justify/lang/vi.js
// static/generator/ckeditor/plugins/justify/lang/zh-cn.js
// static/generator/ckeditor/plugins/justify/lang/zh.js
// static/generator/ckeditor/plugins/justify/plugin.js
// static/generator/ckeditor/plugins/language/icons/hidpi/language.png
// static/generator/ckeditor/plugins/language/icons/language.png
// static/generator/ckeditor/plugins/language/lang/ar.js
// static/generator/ckeditor/plugins/language/lang/az.js
// static/generator/ckeditor/plugins/language/lang/bg.js
// static/generator/ckeditor/plugins/language/lang/ca.js
// static/generator/ckeditor/plugins/language/lang/cs.js
// static/generator/ckeditor/plugins/language/lang/cy.js
// static/generator/ckeditor/plugins/language/lang/da.js
// static/generator/ckeditor/plugins/language/lang/de-ch.js
// static/generator/ckeditor/plugins/language/lang/de.js
// static/generator/ckeditor/plugins/language/lang/el.js
// static/generator/ckeditor/plugins/language/lang/en-gb.js
// static/generator/ckeditor/plugins/language/lang/en.js
// static/generator/ckeditor/plugins/language/lang/eo.js
// static/generator/ckeditor/plugins/language/lang/es.js
// static/generator/ckeditor/plugins/language/lang/eu.js
// static/generator/ckeditor/plugins/language/lang/fa.js
// static/generator/ckeditor/plugins/language/lang/fi.js
// static/generator/ckeditor/plugins/language/lang/fo.js
// static/generator/ckeditor/plugins/language/lang/fr.js
// static/generator/ckeditor/plugins/language/lang/gl.js
// static/generator/ckeditor/plugins/language/lang/he.js
// static/generator/ckeditor/plugins/language/lang/hr.js
// static/generator/ckeditor/plugins/language/lang/hu.js
// static/generator/ckeditor/plugins/language/lang/id.js
// static/generator/ckeditor/plugins/language/lang/it.js
// static/generator/ckeditor/plugins/language/lang/ja.js
// static/generator/ckeditor/plugins/language/lang/km.js
// static/generator/ckeditor/plugins/language/lang/ko.js
// static/generator/ckeditor/plugins/language/lang/ku.js
// static/generator/ckeditor/plugins/language/lang/nb.js
// static/generator/ckeditor/plugins/language/lang/nl.js
// static/generator/ckeditor/plugins/language/lang/no.js
// static/generator/ckeditor/plugins/language/lang/oc.js
// static/generator/ckeditor/plugins/language/lang/pl.js
// static/generator/ckeditor/plugins/language/lang/pt-br.js
// static/generator/ckeditor/plugins/language/lang/pt.js
// static/generator/ckeditor/plugins/language/lang/ru.js
// static/generator/ckeditor/plugins/language/lang/sk.js
// static/generator/ckeditor/plugins/language/lang/sl.js
// static/generator/ckeditor/plugins/language/lang/sq.js
// static/generator/ckeditor/plugins/language/lang/sv.js
// static/generator/ckeditor/plugins/language/lang/tr.js
// static/generator/ckeditor/plugins/language/lang/tt.js
// static/generator/ckeditor/plugins/language/lang/ug.js
// static/generator/ckeditor/plugins/language/lang/uk.js
// static/generator/ckeditor/plugins/language/lang/vi.js
// static/generator/ckeditor/plugins/language/lang/zh-cn.js
// static/generator/ckeditor/plugins/language/lang/zh.js
// static/generator/ckeditor/plugins/language/plugin.js
// static/generator/ckeditor/plugins/link/dialogs/anchor.js
// static/generator/ckeditor/plugins/link/dialogs/link.js
// static/generator/ckeditor/plugins/link/icons/anchor-rtl.png
// static/generator/ckeditor/plugins/link/icons/anchor.png
// static/generator/ckeditor/plugins/link/icons/hidpi/anchor-rtl.png
// static/generator/ckeditor/plugins/link/icons/hidpi/anchor.png
// static/generator/ckeditor/plugins/link/icons/hidpi/link.png
// static/generator/ckeditor/plugins/link/icons/hidpi/unlink.png
// static/generator/ckeditor/plugins/link/icons/link.png
// static/generator/ckeditor/plugins/link/icons/unlink.png
// static/generator/ckeditor/plugins/link/images/anchor.png
// static/generator/ckeditor/plugins/link/images/hidpi/anchor.png
// static/generator/ckeditor/plugins/link/lang/af.js
// static/generator/ckeditor/plugins/link/lang/ar.js
// static/generator/ckeditor/plugins/link/lang/az.js
// static/generator/ckeditor/plugins/link/lang/bg.js
// static/generator/ckeditor/plugins/link/lang/bn.js
// static/generator/ckeditor/plugins/link/lang/bs.js
// static/generator/ckeditor/plugins/link/lang/ca.js
// static/generator/ckeditor/plugins/link/lang/cs.js
// static/generator/ckeditor/plugins/link/lang/cy.js
// static/generator/ckeditor/plugins/link/lang/da.js
// static/generator/ckeditor/plugins/link/lang/de-ch.js
// static/generator/ckeditor/plugins/link/lang/de.js
// static/generator/ckeditor/plugins/link/lang/el.js
// static/generator/ckeditor/plugins/link/lang/en-au.js
// static/generator/ckeditor/plugins/link/lang/en-ca.js
// static/generator/ckeditor/plugins/link/lang/en-gb.js
// static/generator/ckeditor/plugins/link/lang/en.js
// static/generator/ckeditor/plugins/link/lang/eo.js
// static/generator/ckeditor/plugins/link/lang/es.js
// static/generator/ckeditor/plugins/link/lang/et.js
// static/generator/ckeditor/plugins/link/lang/eu.js
// static/generator/ckeditor/plugins/link/lang/fa.js
// static/generator/ckeditor/plugins/link/lang/fi.js
// static/generator/ckeditor/plugins/link/lang/fo.js
// static/generator/ckeditor/plugins/link/lang/fr-ca.js
// static/generator/ckeditor/plugins/link/lang/fr.js
// static/generator/ckeditor/plugins/link/lang/gl.js
// static/generator/ckeditor/plugins/link/lang/gu.js
// static/generator/ckeditor/plugins/link/lang/he.js
// static/generator/ckeditor/plugins/link/lang/hi.js
// static/generator/ckeditor/plugins/link/lang/hr.js
// static/generator/ckeditor/plugins/link/lang/hu.js
// static/generator/ckeditor/plugins/link/lang/id.js
// static/generator/ckeditor/plugins/link/lang/is.js
// static/generator/ckeditor/plugins/link/lang/it.js
// static/generator/ckeditor/plugins/link/lang/ja.js
// static/generator/ckeditor/plugins/link/lang/ka.js
// static/generator/ckeditor/plugins/link/lang/km.js
// static/generator/ckeditor/plugins/link/lang/ko.js
// static/generator/ckeditor/plugins/link/lang/ku.js
// static/generator/ckeditor/plugins/link/lang/lt.js
// static/generator/ckeditor/plugins/link/lang/lv.js
// static/generator/ckeditor/plugins/link/lang/mk.js
// static/generator/ckeditor/plugins/link/lang/mn.js
// static/generator/ckeditor/plugins/link/lang/ms.js
// static/generator/ckeditor/plugins/link/lang/nb.js
// static/generator/ckeditor/plugins/link/lang/nl.js
// static/generator/ckeditor/plugins/link/lang/no.js
// static/generator/ckeditor/plugins/link/lang/oc.js
// static/generator/ckeditor/plugins/link/lang/pl.js
// static/generator/ckeditor/plugins/link/lang/pt-br.js
// static/generator/ckeditor/plugins/link/lang/pt.js
// static/generator/ckeditor/plugins/link/lang/ro.js
// static/generator/ckeditor/plugins/link/lang/ru.js
// static/generator/ckeditor/plugins/link/lang/si.js
// static/generator/ckeditor/plugins/link/lang/sk.js
// static/generator/ckeditor/plugins/link/lang/sl.js
// static/generator/ckeditor/plugins/link/lang/sq.js
// static/generator/ckeditor/plugins/link/lang/sr-latn.js
// static/generator/ckeditor/plugins/link/lang/sr.js
// static/generator/ckeditor/plugins/link/lang/sv.js
// static/generator/ckeditor/plugins/link/lang/th.js
// static/generator/ckeditor/plugins/link/lang/tr.js
// static/generator/ckeditor/plugins/link/lang/tt.js
// static/generator/ckeditor/plugins/link/lang/ug.js
// static/generator/ckeditor/plugins/link/lang/uk.js
// static/generator/ckeditor/plugins/link/lang/vi.js
// static/generator/ckeditor/plugins/link/lang/zh-cn.js
// static/generator/ckeditor/plugins/link/lang/zh.js
// static/generator/ckeditor/plugins/link/plugin.js
// static/generator/ckeditor/plugins/list/icons/bulletedlist-rtl.png
// static/generator/ckeditor/plugins/list/icons/bulletedlist.png
// static/generator/ckeditor/plugins/list/icons/hidpi/bulletedlist-rtl.png
// static/generator/ckeditor/plugins/list/icons/hidpi/bulletedlist.png
// static/generator/ckeditor/plugins/list/icons/hidpi/numberedlist-rtl.png
// static/generator/ckeditor/plugins/list/icons/hidpi/numberedlist.png
// static/generator/ckeditor/plugins/list/icons/numberedlist-rtl.png
// static/generator/ckeditor/plugins/list/icons/numberedlist.png
// static/generator/ckeditor/plugins/list/lang/af.js
// static/generator/ckeditor/plugins/list/lang/ar.js
// static/generator/ckeditor/plugins/list/lang/az.js
// static/generator/ckeditor/plugins/list/lang/bg.js
// static/generator/ckeditor/plugins/list/lang/bn.js
// static/generator/ckeditor/plugins/list/lang/bs.js
// static/generator/ckeditor/plugins/list/lang/ca.js
// static/generator/ckeditor/plugins/list/lang/cs.js
// static/generator/ckeditor/plugins/list/lang/cy.js
// static/generator/ckeditor/plugins/list/lang/da.js
// static/generator/ckeditor/plugins/list/lang/de-ch.js
// static/generator/ckeditor/plugins/list/lang/de.js
// static/generator/ckeditor/plugins/list/lang/el.js
// static/generator/ckeditor/plugins/list/lang/en-au.js
// static/generator/ckeditor/plugins/list/lang/en-ca.js
// static/generator/ckeditor/plugins/list/lang/en-gb.js
// static/generator/ckeditor/plugins/list/lang/en.js
// static/generator/ckeditor/plugins/list/lang/eo.js
// static/generator/ckeditor/plugins/list/lang/es.js
// static/generator/ckeditor/plugins/list/lang/et.js
// static/generator/ckeditor/plugins/list/lang/eu.js
// static/generator/ckeditor/plugins/list/lang/fa.js
// static/generator/ckeditor/plugins/list/lang/fi.js
// static/generator/ckeditor/plugins/list/lang/fo.js
// static/generator/ckeditor/plugins/list/lang/fr-ca.js
// static/generator/ckeditor/plugins/list/lang/fr.js
// static/generator/ckeditor/plugins/list/lang/gl.js
// static/generator/ckeditor/plugins/list/lang/gu.js
// static/generator/ckeditor/plugins/list/lang/he.js
// static/generator/ckeditor/plugins/list/lang/hi.js
// static/generator/ckeditor/plugins/list/lang/hr.js
// static/generator/ckeditor/plugins/list/lang/hu.js
// static/generator/ckeditor/plugins/list/lang/id.js
// static/generator/ckeditor/plugins/list/lang/is.js
// static/generator/ckeditor/plugins/list/lang/it.js
// static/generator/ckeditor/plugins/list/lang/ja.js
// static/generator/ckeditor/plugins/list/lang/ka.js
// static/generator/ckeditor/plugins/list/lang/km.js
// static/generator/ckeditor/plugins/list/lang/ko.js
// static/generator/ckeditor/plugins/list/lang/ku.js
// static/generator/ckeditor/plugins/list/lang/lt.js
// static/generator/ckeditor/plugins/list/lang/lv.js
// static/generator/ckeditor/plugins/list/lang/mk.js
// static/generator/ckeditor/plugins/list/lang/mn.js
// static/generator/ckeditor/plugins/list/lang/ms.js
// static/generator/ckeditor/plugins/list/lang/nb.js
// static/generator/ckeditor/plugins/list/lang/nl.js
// static/generator/ckeditor/plugins/list/lang/no.js
// static/generator/ckeditor/plugins/list/lang/oc.js
// static/generator/ckeditor/plugins/list/lang/pl.js
// static/generator/ckeditor/plugins/list/lang/pt-br.js
// static/generator/ckeditor/plugins/list/lang/pt.js
// static/generator/ckeditor/plugins/list/lang/ro.js
// static/generator/ckeditor/plugins/list/lang/ru.js
// static/generator/ckeditor/plugins/list/lang/si.js
// static/generator/ckeditor/plugins/list/lang/sk.js
// static/generator/ckeditor/plugins/list/lang/sl.js
// static/generator/ckeditor/plugins/list/lang/sq.js
// static/generator/ckeditor/plugins/list/lang/sr-latn.js
// static/generator/ckeditor/plugins/list/lang/sr.js
// static/generator/ckeditor/plugins/list/lang/sv.js
// static/generator/ckeditor/plugins/list/lang/th.js
// static/generator/ckeditor/plugins/list/lang/tr.js
// static/generator/ckeditor/plugins/list/lang/tt.js
// static/generator/ckeditor/plugins/list/lang/ug.js
// static/generator/ckeditor/plugins/list/lang/uk.js
// static/generator/ckeditor/plugins/list/lang/vi.js
// static/generator/ckeditor/plugins/list/lang/zh-cn.js
// static/generator/ckeditor/plugins/list/lang/zh.js
// static/generator/ckeditor/plugins/list/plugin.js
// static/generator/ckeditor/plugins/listblock/plugin.js
// static/generator/ckeditor/plugins/liststyle/dialogs/liststyle.js
// static/generator/ckeditor/plugins/liststyle/lang/af.js
// static/generator/ckeditor/plugins/liststyle/lang/ar.js
// static/generator/ckeditor/plugins/liststyle/lang/az.js
// static/generator/ckeditor/plugins/liststyle/lang/bg.js
// static/generator/ckeditor/plugins/liststyle/lang/bn.js
// static/generator/ckeditor/plugins/liststyle/lang/bs.js
// static/generator/ckeditor/plugins/liststyle/lang/ca.js
// static/generator/ckeditor/plugins/liststyle/lang/cs.js
// static/generator/ckeditor/plugins/liststyle/lang/cy.js
// static/generator/ckeditor/plugins/liststyle/lang/da.js
// static/generator/ckeditor/plugins/liststyle/lang/de-ch.js
// static/generator/ckeditor/plugins/liststyle/lang/de.js
// static/generator/ckeditor/plugins/liststyle/lang/el.js
// static/generator/ckeditor/plugins/liststyle/lang/en-au.js
// static/generator/ckeditor/plugins/liststyle/lang/en-ca.js
// static/generator/ckeditor/plugins/liststyle/lang/en-gb.js
// static/generator/ckeditor/plugins/liststyle/lang/en.js
// static/generator/ckeditor/plugins/liststyle/lang/eo.js
// static/generator/ckeditor/plugins/liststyle/lang/es.js
// static/generator/ckeditor/plugins/liststyle/lang/et.js
// static/generator/ckeditor/plugins/liststyle/lang/eu.js
// static/generator/ckeditor/plugins/liststyle/lang/fa.js
// static/generator/ckeditor/plugins/liststyle/lang/fi.js
// static/generator/ckeditor/plugins/liststyle/lang/fo.js
// static/generator/ckeditor/plugins/liststyle/lang/fr-ca.js
// static/generator/ckeditor/plugins/liststyle/lang/fr.js
// static/generator/ckeditor/plugins/liststyle/lang/gl.js
// static/generator/ckeditor/plugins/liststyle/lang/gu.js
// static/generator/ckeditor/plugins/liststyle/lang/he.js
// static/generator/ckeditor/plugins/liststyle/lang/hi.js
// static/generator/ckeditor/plugins/liststyle/lang/hr.js
// static/generator/ckeditor/plugins/liststyle/lang/hu.js
// static/generator/ckeditor/plugins/liststyle/lang/id.js
// static/generator/ckeditor/plugins/liststyle/lang/is.js
// static/generator/ckeditor/plugins/liststyle/lang/it.js
// static/generator/ckeditor/plugins/liststyle/lang/ja.js
// static/generator/ckeditor/plugins/liststyle/lang/ka.js
// static/generator/ckeditor/plugins/liststyle/lang/km.js
// static/generator/ckeditor/plugins/liststyle/lang/ko.js
// static/generator/ckeditor/plugins/liststyle/lang/ku.js
// static/generator/ckeditor/plugins/liststyle/lang/lt.js
// static/generator/ckeditor/plugins/liststyle/lang/lv.js
// static/generator/ckeditor/plugins/liststyle/lang/mk.js
// static/generator/ckeditor/plugins/liststyle/lang/mn.js
// static/generator/ckeditor/plugins/liststyle/lang/ms.js
// static/generator/ckeditor/plugins/liststyle/lang/nb.js
// static/generator/ckeditor/plugins/liststyle/lang/nl.js
// static/generator/ckeditor/plugins/liststyle/lang/no.js
// static/generator/ckeditor/plugins/liststyle/lang/oc.js
// static/generator/ckeditor/plugins/liststyle/lang/pl.js
// static/generator/ckeditor/plugins/liststyle/lang/pt-br.js
// static/generator/ckeditor/plugins/liststyle/lang/pt.js
// static/generator/ckeditor/plugins/liststyle/lang/ro.js
// static/generator/ckeditor/plugins/liststyle/lang/ru.js
// static/generator/ckeditor/plugins/liststyle/lang/si.js
// static/generator/ckeditor/plugins/liststyle/lang/sk.js
// static/generator/ckeditor/plugins/liststyle/lang/sl.js
// static/generator/ckeditor/plugins/liststyle/lang/sq.js
// static/generator/ckeditor/plugins/liststyle/lang/sr-latn.js
// static/generator/ckeditor/plugins/liststyle/lang/sr.js
// static/generator/ckeditor/plugins/liststyle/lang/sv.js
// static/generator/ckeditor/plugins/liststyle/lang/th.js
// static/generator/ckeditor/plugins/liststyle/lang/tr.js
// static/generator/ckeditor/plugins/liststyle/lang/tt.js
// static/generator/ckeditor/plugins/liststyle/lang/ug.js
// static/generator/ckeditor/plugins/liststyle/lang/uk.js
// static/generator/ckeditor/plugins/liststyle/lang/vi.js
// static/generator/ckeditor/plugins/liststyle/lang/zh-cn.js
// static/generator/ckeditor/plugins/liststyle/lang/zh.js
// static/generator/ckeditor/plugins/liststyle/plugin.js
// static/generator/ckeditor/plugins/magicline/dev/magicline.html
// static/generator/ckeditor/plugins/magicline/images/hidpi/icon-rtl.png
// static/generator/ckeditor/plugins/magicline/images/hidpi/icon.png
// static/generator/ckeditor/plugins/magicline/images/icon-rtl.png
// static/generator/ckeditor/plugins/magicline/images/icon.png
// static/generator/ckeditor/plugins/magicline/lang/af.js
// static/generator/ckeditor/plugins/magicline/lang/ar.js
// static/generator/ckeditor/plugins/magicline/lang/az.js
// static/generator/ckeditor/plugins/magicline/lang/bg.js
// static/generator/ckeditor/plugins/magicline/lang/ca.js
// static/generator/ckeditor/plugins/magicline/lang/cs.js
// static/generator/ckeditor/plugins/magicline/lang/cy.js
// static/generator/ckeditor/plugins/magicline/lang/da.js
// static/generator/ckeditor/plugins/magicline/lang/de-ch.js
// static/generator/ckeditor/plugins/magicline/lang/de.js
// static/generator/ckeditor/plugins/magicline/lang/el.js
// static/generator/ckeditor/plugins/magicline/lang/en-gb.js
// static/generator/ckeditor/plugins/magicline/lang/en.js
// static/generator/ckeditor/plugins/magicline/lang/eo.js
// static/generator/ckeditor/plugins/magicline/lang/es.js
// static/generator/ckeditor/plugins/magicline/lang/et.js
// static/generator/ckeditor/plugins/magicline/lang/eu.js
// static/generator/ckeditor/plugins/magicline/lang/fa.js
// static/generator/ckeditor/plugins/magicline/lang/fi.js
// static/generator/ckeditor/plugins/magicline/lang/fr-ca.js
// static/generator/ckeditor/plugins/magicline/lang/fr.js
// static/generator/ckeditor/plugins/magicline/lang/gl.js
// static/generator/ckeditor/plugins/magicline/lang/he.js
// static/generator/ckeditor/plugins/magicline/lang/hr.js
// static/generator/ckeditor/plugins/magicline/lang/hu.js
// static/generator/ckeditor/plugins/magicline/lang/id.js
// static/generator/ckeditor/plugins/magicline/lang/it.js
// static/generator/ckeditor/plugins/magicline/lang/ja.js
// static/generator/ckeditor/plugins/magicline/lang/km.js
// static/generator/ckeditor/plugins/magicline/lang/ko.js
// static/generator/ckeditor/plugins/magicline/lang/ku.js
// static/generator/ckeditor/plugins/magicline/lang/lv.js
// static/generator/ckeditor/plugins/magicline/lang/nb.js
// static/generator/ckeditor/plugins/magicline/lang/nl.js
// static/generator/ckeditor/plugins/magicline/lang/no.js
// static/generator/ckeditor/plugins/magicline/lang/oc.js
// static/generator/ckeditor/plugins/magicline/lang/pl.js
// static/generator/ckeditor/plugins/magicline/lang/pt-br.js
// static/generator/ckeditor/plugins/magicline/lang/pt.js
// static/generator/ckeditor/plugins/magicline/lang/ru.js
// static/generator/ckeditor/plugins/magicline/lang/si.js
// static/generator/ckeditor/plugins/magicline/lang/sk.js
// static/generator/ckeditor/plugins/magicline/lang/sl.js
// static/generator/ckeditor/plugins/magicline/lang/sq.js
// static/generator/ckeditor/plugins/magicline/lang/sv.js
// static/generator/ckeditor/plugins/magicline/lang/tr.js
// static/generator/ckeditor/plugins/magicline/lang/tt.js
// static/generator/ckeditor/plugins/magicline/lang/ug.js
// static/generator/ckeditor/plugins/magicline/lang/uk.js
// static/generator/ckeditor/plugins/magicline/lang/vi.js
// static/generator/ckeditor/plugins/magicline/lang/zh-cn.js
// static/generator/ckeditor/plugins/magicline/lang/zh.js
// static/generator/ckeditor/plugins/magicline/plugin.js
// static/generator/ckeditor/plugins/magicline/samples/magicline.html
// static/generator/ckeditor/plugins/maximize/icons/hidpi/maximize.png
// static/generator/ckeditor/plugins/maximize/icons/maximize.png
// static/generator/ckeditor/plugins/maximize/lang/af.js
// static/generator/ckeditor/plugins/maximize/lang/ar.js
// static/generator/ckeditor/plugins/maximize/lang/az.js
// static/generator/ckeditor/plugins/maximize/lang/bg.js
// static/generator/ckeditor/plugins/maximize/lang/bn.js
// static/generator/ckeditor/plugins/maximize/lang/bs.js
// static/generator/ckeditor/plugins/maximize/lang/ca.js
// static/generator/ckeditor/plugins/maximize/lang/cs.js
// static/generator/ckeditor/plugins/maximize/lang/cy.js
// static/generator/ckeditor/plugins/maximize/lang/da.js
// static/generator/ckeditor/plugins/maximize/lang/de-ch.js
// static/generator/ckeditor/plugins/maximize/lang/de.js
// static/generator/ckeditor/plugins/maximize/lang/el.js
// static/generator/ckeditor/plugins/maximize/lang/en-au.js
// static/generator/ckeditor/plugins/maximize/lang/en-ca.js
// static/generator/ckeditor/plugins/maximize/lang/en-gb.js
// static/generator/ckeditor/plugins/maximize/lang/en.js
// static/generator/ckeditor/plugins/maximize/lang/eo.js
// static/generator/ckeditor/plugins/maximize/lang/es.js
// static/generator/ckeditor/plugins/maximize/lang/et.js
// static/generator/ckeditor/plugins/maximize/lang/eu.js
// static/generator/ckeditor/plugins/maximize/lang/fa.js
// static/generator/ckeditor/plugins/maximize/lang/fi.js
// static/generator/ckeditor/plugins/maximize/lang/fo.js
// static/generator/ckeditor/plugins/maximize/lang/fr-ca.js
// static/generator/ckeditor/plugins/maximize/lang/fr.js
// static/generator/ckeditor/plugins/maximize/lang/gl.js
// static/generator/ckeditor/plugins/maximize/lang/gu.js
// static/generator/ckeditor/plugins/maximize/lang/he.js
// static/generator/ckeditor/plugins/maximize/lang/hi.js
// static/generator/ckeditor/plugins/maximize/lang/hr.js
// static/generator/ckeditor/plugins/maximize/lang/hu.js
// static/generator/ckeditor/plugins/maximize/lang/id.js
// static/generator/ckeditor/plugins/maximize/lang/is.js
// static/generator/ckeditor/plugins/maximize/lang/it.js
// static/generator/ckeditor/plugins/maximize/lang/ja.js
// static/generator/ckeditor/plugins/maximize/lang/ka.js
// static/generator/ckeditor/plugins/maximize/lang/km.js
// static/generator/ckeditor/plugins/maximize/lang/ko.js
// static/generator/ckeditor/plugins/maximize/lang/ku.js
// static/generator/ckeditor/plugins/maximize/lang/lt.js
// static/generator/ckeditor/plugins/maximize/lang/lv.js
// static/generator/ckeditor/plugins/maximize/lang/mk.js
// static/generator/ckeditor/plugins/maximize/lang/mn.js
// static/generator/ckeditor/plugins/maximize/lang/ms.js
// static/generator/ckeditor/plugins/maximize/lang/nb.js
// static/generator/ckeditor/plugins/maximize/lang/nl.js
// static/generator/ckeditor/plugins/maximize/lang/no.js
// static/generator/ckeditor/plugins/maximize/lang/oc.js
// static/generator/ckeditor/plugins/maximize/lang/pl.js
// static/generator/ckeditor/plugins/maximize/lang/pt-br.js
// static/generator/ckeditor/plugins/maximize/lang/pt.js
// static/generator/ckeditor/plugins/maximize/lang/ro.js
// static/generator/ckeditor/plugins/maximize/lang/ru.js
// static/generator/ckeditor/plugins/maximize/lang/si.js
// static/generator/ckeditor/plugins/maximize/lang/sk.js
// static/generator/ckeditor/plugins/maximize/lang/sl.js
// static/generator/ckeditor/plugins/maximize/lang/sq.js
// static/generator/ckeditor/plugins/maximize/lang/sr-latn.js
// static/generator/ckeditor/plugins/maximize/lang/sr.js
// static/generator/ckeditor/plugins/maximize/lang/sv.js
// static/generator/ckeditor/plugins/maximize/lang/th.js
// static/generator/ckeditor/plugins/maximize/lang/tr.js
// static/generator/ckeditor/plugins/maximize/lang/tt.js
// static/generator/ckeditor/plugins/maximize/lang/ug.js
// static/generator/ckeditor/plugins/maximize/lang/uk.js
// static/generator/ckeditor/plugins/maximize/lang/vi.js
// static/generator/ckeditor/plugins/maximize/lang/zh-cn.js
// static/generator/ckeditor/plugins/maximize/lang/zh.js
// static/generator/ckeditor/plugins/maximize/plugin.js
// static/generator/ckeditor/plugins/menu/plugin.js
// static/generator/ckeditor/plugins/menubutton/plugin.js
// static/generator/ckeditor/plugins/newpage/icons/hidpi/newpage-rtl.png
// static/generator/ckeditor/plugins/newpage/icons/hidpi/newpage.png
// static/generator/ckeditor/plugins/newpage/icons/newpage-rtl.png
// static/generator/ckeditor/plugins/newpage/icons/newpage.png
// static/generator/ckeditor/plugins/newpage/lang/af.js
// static/generator/ckeditor/plugins/newpage/lang/ar.js
// static/generator/ckeditor/plugins/newpage/lang/az.js
// static/generator/ckeditor/plugins/newpage/lang/bg.js
// static/generator/ckeditor/plugins/newpage/lang/bn.js
// static/generator/ckeditor/plugins/newpage/lang/bs.js
// static/generator/ckeditor/plugins/newpage/lang/ca.js
// static/generator/ckeditor/plugins/newpage/lang/cs.js
// static/generator/ckeditor/plugins/newpage/lang/cy.js
// static/generator/ckeditor/plugins/newpage/lang/da.js
// static/generator/ckeditor/plugins/newpage/lang/de-ch.js
// static/generator/ckeditor/plugins/newpage/lang/de.js
// static/generator/ckeditor/plugins/newpage/lang/el.js
// static/generator/ckeditor/plugins/newpage/lang/en-au.js
// static/generator/ckeditor/plugins/newpage/lang/en-ca.js
// static/generator/ckeditor/plugins/newpage/lang/en-gb.js
// static/generator/ckeditor/plugins/newpage/lang/en.js
// static/generator/ckeditor/plugins/newpage/lang/eo.js
// static/generator/ckeditor/plugins/newpage/lang/es.js
// static/generator/ckeditor/plugins/newpage/lang/et.js
// static/generator/ckeditor/plugins/newpage/lang/eu.js
// static/generator/ckeditor/plugins/newpage/lang/fa.js
// static/generator/ckeditor/plugins/newpage/lang/fi.js
// static/generator/ckeditor/plugins/newpage/lang/fo.js
// static/generator/ckeditor/plugins/newpage/lang/fr-ca.js
// static/generator/ckeditor/plugins/newpage/lang/fr.js
// static/generator/ckeditor/plugins/newpage/lang/gl.js
// static/generator/ckeditor/plugins/newpage/lang/gu.js
// static/generator/ckeditor/plugins/newpage/lang/he.js
// static/generator/ckeditor/plugins/newpage/lang/hi.js
// static/generator/ckeditor/plugins/newpage/lang/hr.js
// static/generator/ckeditor/plugins/newpage/lang/hu.js
// static/generator/ckeditor/plugins/newpage/lang/id.js
// static/generator/ckeditor/plugins/newpage/lang/is.js
// static/generator/ckeditor/plugins/newpage/lang/it.js
// static/generator/ckeditor/plugins/newpage/lang/ja.js
// static/generator/ckeditor/plugins/newpage/lang/ka.js
// static/generator/ckeditor/plugins/newpage/lang/km.js
// static/generator/ckeditor/plugins/newpage/lang/ko.js
// static/generator/ckeditor/plugins/newpage/lang/ku.js
// static/generator/ckeditor/plugins/newpage/lang/lt.js
// static/generator/ckeditor/plugins/newpage/lang/lv.js
// static/generator/ckeditor/plugins/newpage/lang/mk.js
// static/generator/ckeditor/plugins/newpage/lang/mn.js
// static/generator/ckeditor/plugins/newpage/lang/ms.js
// static/generator/ckeditor/plugins/newpage/lang/nb.js
// static/generator/ckeditor/plugins/newpage/lang/nl.js
// static/generator/ckeditor/plugins/newpage/lang/no.js
// static/generator/ckeditor/plugins/newpage/lang/oc.js
// static/generator/ckeditor/plugins/newpage/lang/pl.js
// static/generator/ckeditor/plugins/newpage/lang/pt-br.js
// static/generator/ckeditor/plugins/newpage/lang/pt.js
// static/generator/ckeditor/plugins/newpage/lang/ro.js
// static/generator/ckeditor/plugins/newpage/lang/ru.js
// static/generator/ckeditor/plugins/newpage/lang/si.js
// static/generator/ckeditor/plugins/newpage/lang/sk.js
// static/generator/ckeditor/plugins/newpage/lang/sl.js
// static/generator/ckeditor/plugins/newpage/lang/sq.js
// static/generator/ckeditor/plugins/newpage/lang/sr-latn.js
// static/generator/ckeditor/plugins/newpage/lang/sr.js
// static/generator/ckeditor/plugins/newpage/lang/sv.js
// static/generator/ckeditor/plugins/newpage/lang/th.js
// static/generator/ckeditor/plugins/newpage/lang/tr.js
// static/generator/ckeditor/plugins/newpage/lang/tt.js
// static/generator/ckeditor/plugins/newpage/lang/ug.js
// static/generator/ckeditor/plugins/newpage/lang/uk.js
// static/generator/ckeditor/plugins/newpage/lang/vi.js
// static/generator/ckeditor/plugins/newpage/lang/zh-cn.js
// static/generator/ckeditor/plugins/newpage/lang/zh.js
// static/generator/ckeditor/plugins/newpage/plugin.js
// static/generator/ckeditor/plugins/pagebreak/icons/hidpi/pagebreak-rtl.png
// static/generator/ckeditor/plugins/pagebreak/icons/hidpi/pagebreak.png
// static/generator/ckeditor/plugins/pagebreak/icons/pagebreak-rtl.png
// static/generator/ckeditor/plugins/pagebreak/icons/pagebreak.png
// static/generator/ckeditor/plugins/pagebreak/images/pagebreak.gif
// static/generator/ckeditor/plugins/pagebreak/lang/af.js
// static/generator/ckeditor/plugins/pagebreak/lang/ar.js
// static/generator/ckeditor/plugins/pagebreak/lang/az.js
// static/generator/ckeditor/plugins/pagebreak/lang/bg.js
// static/generator/ckeditor/plugins/pagebreak/lang/bn.js
// static/generator/ckeditor/plugins/pagebreak/lang/bs.js
// static/generator/ckeditor/plugins/pagebreak/lang/ca.js
// static/generator/ckeditor/plugins/pagebreak/lang/cs.js
// static/generator/ckeditor/plugins/pagebreak/lang/cy.js
// static/generator/ckeditor/plugins/pagebreak/lang/da.js
// static/generator/ckeditor/plugins/pagebreak/lang/de-ch.js
// static/generator/ckeditor/plugins/pagebreak/lang/de.js
// static/generator/ckeditor/plugins/pagebreak/lang/el.js
// static/generator/ckeditor/plugins/pagebreak/lang/en-au.js
// static/generator/ckeditor/plugins/pagebreak/lang/en-ca.js
// static/generator/ckeditor/plugins/pagebreak/lang/en-gb.js
// static/generator/ckeditor/plugins/pagebreak/lang/en.js
// static/generator/ckeditor/plugins/pagebreak/lang/eo.js
// static/generator/ckeditor/plugins/pagebreak/lang/es.js
// static/generator/ckeditor/plugins/pagebreak/lang/et.js
// static/generator/ckeditor/plugins/pagebreak/lang/eu.js
// static/generator/ckeditor/plugins/pagebreak/lang/fa.js
// static/generator/ckeditor/plugins/pagebreak/lang/fi.js
// static/generator/ckeditor/plugins/pagebreak/lang/fo.js
// static/generator/ckeditor/plugins/pagebreak/lang/fr-ca.js
// static/generator/ckeditor/plugins/pagebreak/lang/fr.js
// static/generator/ckeditor/plugins/pagebreak/lang/gl.js
// static/generator/ckeditor/plugins/pagebreak/lang/gu.js
// static/generator/ckeditor/plugins/pagebreak/lang/he.js
// static/generator/ckeditor/plugins/pagebreak/lang/hi.js
// static/generator/ckeditor/plugins/pagebreak/lang/hr.js
// static/generator/ckeditor/plugins/pagebreak/lang/hu.js
// static/generator/ckeditor/plugins/pagebreak/lang/id.js
// static/generator/ckeditor/plugins/pagebreak/lang/is.js
// static/generator/ckeditor/plugins/pagebreak/lang/it.js
// static/generator/ckeditor/plugins/pagebreak/lang/ja.js
// static/generator/ckeditor/plugins/pagebreak/lang/ka.js
// static/generator/ckeditor/plugins/pagebreak/lang/km.js
// static/generator/ckeditor/plugins/pagebreak/lang/ko.js
// static/generator/ckeditor/plugins/pagebreak/lang/ku.js
// static/generator/ckeditor/plugins/pagebreak/lang/lt.js
// static/generator/ckeditor/plugins/pagebreak/lang/lv.js
// static/generator/ckeditor/plugins/pagebreak/lang/mk.js
// static/generator/ckeditor/plugins/pagebreak/lang/mn.js
// static/generator/ckeditor/plugins/pagebreak/lang/ms.js
// static/generator/ckeditor/plugins/pagebreak/lang/nb.js
// static/generator/ckeditor/plugins/pagebreak/lang/nl.js
// static/generator/ckeditor/plugins/pagebreak/lang/no.js
// static/generator/ckeditor/plugins/pagebreak/lang/oc.js
// static/generator/ckeditor/plugins/pagebreak/lang/pl.js
// static/generator/ckeditor/plugins/pagebreak/lang/pt-br.js
// static/generator/ckeditor/plugins/pagebreak/lang/pt.js
// static/generator/ckeditor/plugins/pagebreak/lang/ro.js
// static/generator/ckeditor/plugins/pagebreak/lang/ru.js
// static/generator/ckeditor/plugins/pagebreak/lang/si.js
// static/generator/ckeditor/plugins/pagebreak/lang/sk.js
// static/generator/ckeditor/plugins/pagebreak/lang/sl.js
// static/generator/ckeditor/plugins/pagebreak/lang/sq.js
// static/generator/ckeditor/plugins/pagebreak/lang/sr-latn.js
// static/generator/ckeditor/plugins/pagebreak/lang/sr.js
// static/generator/ckeditor/plugins/pagebreak/lang/sv.js
// static/generator/ckeditor/plugins/pagebreak/lang/th.js
// static/generator/ckeditor/plugins/pagebreak/lang/tr.js
// static/generator/ckeditor/plugins/pagebreak/lang/tt.js
// static/generator/ckeditor/plugins/pagebreak/lang/ug.js
// static/generator/ckeditor/plugins/pagebreak/lang/uk.js
// static/generator/ckeditor/plugins/pagebreak/lang/vi.js
// static/generator/ckeditor/plugins/pagebreak/lang/zh-cn.js
// static/generator/ckeditor/plugins/pagebreak/lang/zh.js
// static/generator/ckeditor/plugins/pagebreak/plugin.js
// static/generator/ckeditor/plugins/panel/plugin.js
// static/generator/ckeditor/plugins/panelbutton/plugin.js
// static/generator/ckeditor/plugins/pastefromword/filter/default.js
// static/generator/ckeditor/plugins/pastefromword/icons/hidpi/pastefromword-rtl.png
// static/generator/ckeditor/plugins/pastefromword/icons/hidpi/pastefromword.png
// static/generator/ckeditor/plugins/pastefromword/icons/pastefromword-rtl.png
// static/generator/ckeditor/plugins/pastefromword/icons/pastefromword.png
// static/generator/ckeditor/plugins/pastefromword/lang/af.js
// static/generator/ckeditor/plugins/pastefromword/lang/ar.js
// static/generator/ckeditor/plugins/pastefromword/lang/az.js
// static/generator/ckeditor/plugins/pastefromword/lang/bg.js
// static/generator/ckeditor/plugins/pastefromword/lang/bn.js
// static/generator/ckeditor/plugins/pastefromword/lang/bs.js
// static/generator/ckeditor/plugins/pastefromword/lang/ca.js
// static/generator/ckeditor/plugins/pastefromword/lang/cs.js
// static/generator/ckeditor/plugins/pastefromword/lang/cy.js
// static/generator/ckeditor/plugins/pastefromword/lang/da.js
// static/generator/ckeditor/plugins/pastefromword/lang/de-ch.js
// static/generator/ckeditor/plugins/pastefromword/lang/de.js
// static/generator/ckeditor/plugins/pastefromword/lang/el.js
// static/generator/ckeditor/plugins/pastefromword/lang/en-au.js
// static/generator/ckeditor/plugins/pastefromword/lang/en-ca.js
// static/generator/ckeditor/plugins/pastefromword/lang/en-gb.js
// static/generator/ckeditor/plugins/pastefromword/lang/en.js
// static/generator/ckeditor/plugins/pastefromword/lang/eo.js
// static/generator/ckeditor/plugins/pastefromword/lang/es.js
// static/generator/ckeditor/plugins/pastefromword/lang/et.js
// static/generator/ckeditor/plugins/pastefromword/lang/eu.js
// static/generator/ckeditor/plugins/pastefromword/lang/fa.js
// static/generator/ckeditor/plugins/pastefromword/lang/fi.js
// static/generator/ckeditor/plugins/pastefromword/lang/fo.js
// static/generator/ckeditor/plugins/pastefromword/lang/fr-ca.js
// static/generator/ckeditor/plugins/pastefromword/lang/fr.js
// static/generator/ckeditor/plugins/pastefromword/lang/gl.js
// static/generator/ckeditor/plugins/pastefromword/lang/gu.js
// static/generator/ckeditor/plugins/pastefromword/lang/he.js
// static/generator/ckeditor/plugins/pastefromword/lang/hi.js
// static/generator/ckeditor/plugins/pastefromword/lang/hr.js
// static/generator/ckeditor/plugins/pastefromword/lang/hu.js
// static/generator/ckeditor/plugins/pastefromword/lang/id.js
// static/generator/ckeditor/plugins/pastefromword/lang/is.js
// static/generator/ckeditor/plugins/pastefromword/lang/it.js
// static/generator/ckeditor/plugins/pastefromword/lang/ja.js
// static/generator/ckeditor/plugins/pastefromword/lang/ka.js
// static/generator/ckeditor/plugins/pastefromword/lang/km.js
// static/generator/ckeditor/plugins/pastefromword/lang/ko.js
// static/generator/ckeditor/plugins/pastefromword/lang/ku.js
// static/generator/ckeditor/plugins/pastefromword/lang/lt.js
// static/generator/ckeditor/plugins/pastefromword/lang/lv.js
// static/generator/ckeditor/plugins/pastefromword/lang/mk.js
// static/generator/ckeditor/plugins/pastefromword/lang/mn.js
// static/generator/ckeditor/plugins/pastefromword/lang/ms.js
// static/generator/ckeditor/plugins/pastefromword/lang/nb.js
// static/generator/ckeditor/plugins/pastefromword/lang/nl.js
// static/generator/ckeditor/plugins/pastefromword/lang/no.js
// static/generator/ckeditor/plugins/pastefromword/lang/oc.js
// static/generator/ckeditor/plugins/pastefromword/lang/pl.js
// static/generator/ckeditor/plugins/pastefromword/lang/pt-br.js
// static/generator/ckeditor/plugins/pastefromword/lang/pt.js
// static/generator/ckeditor/plugins/pastefromword/lang/ro.js
// static/generator/ckeditor/plugins/pastefromword/lang/ru.js
// static/generator/ckeditor/plugins/pastefromword/lang/si.js
// static/generator/ckeditor/plugins/pastefromword/lang/sk.js
// static/generator/ckeditor/plugins/pastefromword/lang/sl.js
// static/generator/ckeditor/plugins/pastefromword/lang/sq.js
// static/generator/ckeditor/plugins/pastefromword/lang/sr-latn.js
// static/generator/ckeditor/plugins/pastefromword/lang/sr.js
// static/generator/ckeditor/plugins/pastefromword/lang/sv.js
// static/generator/ckeditor/plugins/pastefromword/lang/th.js
// static/generator/ckeditor/plugins/pastefromword/lang/tr.js
// static/generator/ckeditor/plugins/pastefromword/lang/tt.js
// static/generator/ckeditor/plugins/pastefromword/lang/ug.js
// static/generator/ckeditor/plugins/pastefromword/lang/uk.js
// static/generator/ckeditor/plugins/pastefromword/lang/vi.js
// static/generator/ckeditor/plugins/pastefromword/lang/zh-cn.js
// static/generator/ckeditor/plugins/pastefromword/lang/zh.js
// static/generator/ckeditor/plugins/pastefromword/plugin.js
// static/generator/ckeditor/plugins/pastetext/icons/hidpi/pastetext-rtl.png
// static/generator/ckeditor/plugins/pastetext/icons/hidpi/pastetext.png
// static/generator/ckeditor/plugins/pastetext/icons/pastetext-rtl.png
// static/generator/ckeditor/plugins/pastetext/icons/pastetext.png
// static/generator/ckeditor/plugins/pastetext/lang/af.js
// static/generator/ckeditor/plugins/pastetext/lang/ar.js
// static/generator/ckeditor/plugins/pastetext/lang/az.js
// static/generator/ckeditor/plugins/pastetext/lang/bg.js
// static/generator/ckeditor/plugins/pastetext/lang/bn.js
// static/generator/ckeditor/plugins/pastetext/lang/bs.js
// static/generator/ckeditor/plugins/pastetext/lang/ca.js
// static/generator/ckeditor/plugins/pastetext/lang/cs.js
// static/generator/ckeditor/plugins/pastetext/lang/cy.js
// static/generator/ckeditor/plugins/pastetext/lang/da.js
// static/generator/ckeditor/plugins/pastetext/lang/de-ch.js
// static/generator/ckeditor/plugins/pastetext/lang/de.js
// static/generator/ckeditor/plugins/pastetext/lang/el.js
// static/generator/ckeditor/plugins/pastetext/lang/en-au.js
// static/generator/ckeditor/plugins/pastetext/lang/en-ca.js
// static/generator/ckeditor/plugins/pastetext/lang/en-gb.js
// static/generator/ckeditor/plugins/pastetext/lang/en.js
// static/generator/ckeditor/plugins/pastetext/lang/eo.js
// static/generator/ckeditor/plugins/pastetext/lang/es.js
// static/generator/ckeditor/plugins/pastetext/lang/et.js
// static/generator/ckeditor/plugins/pastetext/lang/eu.js
// static/generator/ckeditor/plugins/pastetext/lang/fa.js
// static/generator/ckeditor/plugins/pastetext/lang/fi.js
// static/generator/ckeditor/plugins/pastetext/lang/fo.js
// static/generator/ckeditor/plugins/pastetext/lang/fr-ca.js
// static/generator/ckeditor/plugins/pastetext/lang/fr.js
// static/generator/ckeditor/plugins/pastetext/lang/gl.js
// static/generator/ckeditor/plugins/pastetext/lang/gu.js
// static/generator/ckeditor/plugins/pastetext/lang/he.js
// static/generator/ckeditor/plugins/pastetext/lang/hi.js
// static/generator/ckeditor/plugins/pastetext/lang/hr.js
// static/generator/ckeditor/plugins/pastetext/lang/hu.js
// static/generator/ckeditor/plugins/pastetext/lang/id.js
// static/generator/ckeditor/plugins/pastetext/lang/is.js
// static/generator/ckeditor/plugins/pastetext/lang/it.js
// static/generator/ckeditor/plugins/pastetext/lang/ja.js
// static/generator/ckeditor/plugins/pastetext/lang/ka.js
// static/generator/ckeditor/plugins/pastetext/lang/km.js
// static/generator/ckeditor/plugins/pastetext/lang/ko.js
// static/generator/ckeditor/plugins/pastetext/lang/ku.js
// static/generator/ckeditor/plugins/pastetext/lang/lt.js
// static/generator/ckeditor/plugins/pastetext/lang/lv.js
// static/generator/ckeditor/plugins/pastetext/lang/mk.js
// static/generator/ckeditor/plugins/pastetext/lang/mn.js
// static/generator/ckeditor/plugins/pastetext/lang/ms.js
// static/generator/ckeditor/plugins/pastetext/lang/nb.js
// static/generator/ckeditor/plugins/pastetext/lang/nl.js
// static/generator/ckeditor/plugins/pastetext/lang/no.js
// static/generator/ckeditor/plugins/pastetext/lang/oc.js
// static/generator/ckeditor/plugins/pastetext/lang/pl.js
// static/generator/ckeditor/plugins/pastetext/lang/pt-br.js
// static/generator/ckeditor/plugins/pastetext/lang/pt.js
// static/generator/ckeditor/plugins/pastetext/lang/ro.js
// static/generator/ckeditor/plugins/pastetext/lang/ru.js
// static/generator/ckeditor/plugins/pastetext/lang/si.js
// static/generator/ckeditor/plugins/pastetext/lang/sk.js
// static/generator/ckeditor/plugins/pastetext/lang/sl.js
// static/generator/ckeditor/plugins/pastetext/lang/sq.js
// static/generator/ckeditor/plugins/pastetext/lang/sr-latn.js
// static/generator/ckeditor/plugins/pastetext/lang/sr.js
// static/generator/ckeditor/plugins/pastetext/lang/sv.js
// static/generator/ckeditor/plugins/pastetext/lang/th.js
// static/generator/ckeditor/plugins/pastetext/lang/tr.js
// static/generator/ckeditor/plugins/pastetext/lang/tt.js
// static/generator/ckeditor/plugins/pastetext/lang/ug.js
// static/generator/ckeditor/plugins/pastetext/lang/uk.js
// static/generator/ckeditor/plugins/pastetext/lang/vi.js
// static/generator/ckeditor/plugins/pastetext/lang/zh-cn.js
// static/generator/ckeditor/plugins/pastetext/lang/zh.js
// static/generator/ckeditor/plugins/pastetext/plugin.js
// static/generator/ckeditor/plugins/popup/plugin.js
// static/generator/ckeditor/plugins/preview/icons/hidpi/preview-rtl.png
// static/generator/ckeditor/plugins/preview/icons/hidpi/preview.png
// static/generator/ckeditor/plugins/preview/icons/preview-rtl.png
// static/generator/ckeditor/plugins/preview/icons/preview.png
// static/generator/ckeditor/plugins/preview/lang/af.js
// static/generator/ckeditor/plugins/preview/lang/ar.js
// static/generator/ckeditor/plugins/preview/lang/az.js
// static/generator/ckeditor/plugins/preview/lang/bg.js
// static/generator/ckeditor/plugins/preview/lang/bn.js
// static/generator/ckeditor/plugins/preview/lang/bs.js
// static/generator/ckeditor/plugins/preview/lang/ca.js
// static/generator/ckeditor/plugins/preview/lang/cs.js
// static/generator/ckeditor/plugins/preview/lang/cy.js
// static/generator/ckeditor/plugins/preview/lang/da.js
// static/generator/ckeditor/plugins/preview/lang/de-ch.js
// static/generator/ckeditor/plugins/preview/lang/de.js
// static/generator/ckeditor/plugins/preview/lang/el.js
// static/generator/ckeditor/plugins/preview/lang/en-au.js
// static/generator/ckeditor/plugins/preview/lang/en-ca.js
// static/generator/ckeditor/plugins/preview/lang/en-gb.js
// static/generator/ckeditor/plugins/preview/lang/en.js
// static/generator/ckeditor/plugins/preview/lang/eo.js
// static/generator/ckeditor/plugins/preview/lang/es.js
// static/generator/ckeditor/plugins/preview/lang/et.js
// static/generator/ckeditor/plugins/preview/lang/eu.js
// static/generator/ckeditor/plugins/preview/lang/fa.js
// static/generator/ckeditor/plugins/preview/lang/fi.js
// static/generator/ckeditor/plugins/preview/lang/fo.js
// static/generator/ckeditor/plugins/preview/lang/fr-ca.js
// static/generator/ckeditor/plugins/preview/lang/fr.js
// static/generator/ckeditor/plugins/preview/lang/gl.js
// static/generator/ckeditor/plugins/preview/lang/gu.js
// static/generator/ckeditor/plugins/preview/lang/he.js
// static/generator/ckeditor/plugins/preview/lang/hi.js
// static/generator/ckeditor/plugins/preview/lang/hr.js
// static/generator/ckeditor/plugins/preview/lang/hu.js
// static/generator/ckeditor/plugins/preview/lang/id.js
// static/generator/ckeditor/plugins/preview/lang/is.js
// static/generator/ckeditor/plugins/preview/lang/it.js
// static/generator/ckeditor/plugins/preview/lang/ja.js
// static/generator/ckeditor/plugins/preview/lang/ka.js
// static/generator/ckeditor/plugins/preview/lang/km.js
// static/generator/ckeditor/plugins/preview/lang/ko.js
// static/generator/ckeditor/plugins/preview/lang/ku.js
// static/generator/ckeditor/plugins/preview/lang/lt.js
// static/generator/ckeditor/plugins/preview/lang/lv.js
// static/generator/ckeditor/plugins/preview/lang/mk.js
// static/generator/ckeditor/plugins/preview/lang/mn.js
// static/generator/ckeditor/plugins/preview/lang/ms.js
// static/generator/ckeditor/plugins/preview/lang/nb.js
// static/generator/ckeditor/plugins/preview/lang/nl.js
// static/generator/ckeditor/plugins/preview/lang/no.js
// static/generator/ckeditor/plugins/preview/lang/oc.js
// static/generator/ckeditor/plugins/preview/lang/pl.js
// static/generator/ckeditor/plugins/preview/lang/pt-br.js
// static/generator/ckeditor/plugins/preview/lang/pt.js
// static/generator/ckeditor/plugins/preview/lang/ro.js
// static/generator/ckeditor/plugins/preview/lang/ru.js
// static/generator/ckeditor/plugins/preview/lang/si.js
// static/generator/ckeditor/plugins/preview/lang/sk.js
// static/generator/ckeditor/plugins/preview/lang/sl.js
// static/generator/ckeditor/plugins/preview/lang/sq.js
// static/generator/ckeditor/plugins/preview/lang/sr-latn.js
// static/generator/ckeditor/plugins/preview/lang/sr.js
// static/generator/ckeditor/plugins/preview/lang/sv.js
// static/generator/ckeditor/plugins/preview/lang/th.js
// static/generator/ckeditor/plugins/preview/lang/tr.js
// static/generator/ckeditor/plugins/preview/lang/tt.js
// static/generator/ckeditor/plugins/preview/lang/ug.js
// static/generator/ckeditor/plugins/preview/lang/uk.js
// static/generator/ckeditor/plugins/preview/lang/vi.js
// static/generator/ckeditor/plugins/preview/lang/zh-cn.js
// static/generator/ckeditor/plugins/preview/lang/zh.js
// static/generator/ckeditor/plugins/preview/plugin.js
// static/generator/ckeditor/plugins/preview/preview.html
// static/generator/ckeditor/plugins/print/icons/hidpi/print.png
// static/generator/ckeditor/plugins/print/icons/print.png
// static/generator/ckeditor/plugins/print/lang/af.js
// static/generator/ckeditor/plugins/print/lang/ar.js
// static/generator/ckeditor/plugins/print/lang/az.js
// static/generator/ckeditor/plugins/print/lang/bg.js
// static/generator/ckeditor/plugins/print/lang/bn.js
// static/generator/ckeditor/plugins/print/lang/bs.js
// static/generator/ckeditor/plugins/print/lang/ca.js
// static/generator/ckeditor/plugins/print/lang/cs.js
// static/generator/ckeditor/plugins/print/lang/cy.js
// static/generator/ckeditor/plugins/print/lang/da.js
// static/generator/ckeditor/plugins/print/lang/de-ch.js
// static/generator/ckeditor/plugins/print/lang/de.js
// static/generator/ckeditor/plugins/print/lang/el.js
// static/generator/ckeditor/plugins/print/lang/en-au.js
// static/generator/ckeditor/plugins/print/lang/en-ca.js
// static/generator/ckeditor/plugins/print/lang/en-gb.js
// static/generator/ckeditor/plugins/print/lang/en.js
// static/generator/ckeditor/plugins/print/lang/eo.js
// static/generator/ckeditor/plugins/print/lang/es.js
// static/generator/ckeditor/plugins/print/lang/et.js
// static/generator/ckeditor/plugins/print/lang/eu.js
// static/generator/ckeditor/plugins/print/lang/fa.js
// static/generator/ckeditor/plugins/print/lang/fi.js
// static/generator/ckeditor/plugins/print/lang/fo.js
// static/generator/ckeditor/plugins/print/lang/fr-ca.js
// static/generator/ckeditor/plugins/print/lang/fr.js
// static/generator/ckeditor/plugins/print/lang/gl.js
// static/generator/ckeditor/plugins/print/lang/gu.js
// static/generator/ckeditor/plugins/print/lang/he.js
// static/generator/ckeditor/plugins/print/lang/hi.js
// static/generator/ckeditor/plugins/print/lang/hr.js
// static/generator/ckeditor/plugins/print/lang/hu.js
// static/generator/ckeditor/plugins/print/lang/id.js
// static/generator/ckeditor/plugins/print/lang/is.js
// static/generator/ckeditor/plugins/print/lang/it.js
// static/generator/ckeditor/plugins/print/lang/ja.js
// static/generator/ckeditor/plugins/print/lang/ka.js
// static/generator/ckeditor/plugins/print/lang/km.js
// static/generator/ckeditor/plugins/print/lang/ko.js
// static/generator/ckeditor/plugins/print/lang/ku.js
// static/generator/ckeditor/plugins/print/lang/lt.js
// static/generator/ckeditor/plugins/print/lang/lv.js
// static/generator/ckeditor/plugins/print/lang/mk.js
// static/generator/ckeditor/plugins/print/lang/mn.js
// static/generator/ckeditor/plugins/print/lang/ms.js
// static/generator/ckeditor/plugins/print/lang/nb.js
// static/generator/ckeditor/plugins/print/lang/nl.js
// static/generator/ckeditor/plugins/print/lang/no.js
// static/generator/ckeditor/plugins/print/lang/oc.js
// static/generator/ckeditor/plugins/print/lang/pl.js
// static/generator/ckeditor/plugins/print/lang/pt-br.js
// static/generator/ckeditor/plugins/print/lang/pt.js
// static/generator/ckeditor/plugins/print/lang/ro.js
// static/generator/ckeditor/plugins/print/lang/ru.js
// static/generator/ckeditor/plugins/print/lang/si.js
// static/generator/ckeditor/plugins/print/lang/sk.js
// static/generator/ckeditor/plugins/print/lang/sl.js
// static/generator/ckeditor/plugins/print/lang/sq.js
// static/generator/ckeditor/plugins/print/lang/sr-latn.js
// static/generator/ckeditor/plugins/print/lang/sr.js
// static/generator/ckeditor/plugins/print/lang/sv.js
// static/generator/ckeditor/plugins/print/lang/th.js
// static/generator/ckeditor/plugins/print/lang/tr.js
// static/generator/ckeditor/plugins/print/lang/tt.js
// static/generator/ckeditor/plugins/print/lang/ug.js
// static/generator/ckeditor/plugins/print/lang/uk.js
// static/generator/ckeditor/plugins/print/lang/vi.js
// static/generator/ckeditor/plugins/print/lang/zh-cn.js
// static/generator/ckeditor/plugins/print/lang/zh.js
// static/generator/ckeditor/plugins/print/plugin.js
// static/generator/ckeditor/plugins/removeformat/icons/hidpi/removeformat.png
// static/generator/ckeditor/plugins/removeformat/icons/removeformat.png
// static/generator/ckeditor/plugins/removeformat/lang/af.js
// static/generator/ckeditor/plugins/removeformat/lang/ar.js
// static/generator/ckeditor/plugins/removeformat/lang/az.js
// static/generator/ckeditor/plugins/removeformat/lang/bg.js
// static/generator/ckeditor/plugins/removeformat/lang/bn.js
// static/generator/ckeditor/plugins/removeformat/lang/bs.js
// static/generator/ckeditor/plugins/removeformat/lang/ca.js
// static/generator/ckeditor/plugins/removeformat/lang/cs.js
// static/generator/ckeditor/plugins/removeformat/lang/cy.js
// static/generator/ckeditor/plugins/removeformat/lang/da.js
// static/generator/ckeditor/plugins/removeformat/lang/de-ch.js
// static/generator/ckeditor/plugins/removeformat/lang/de.js
// static/generator/ckeditor/plugins/removeformat/lang/el.js
// static/generator/ckeditor/plugins/removeformat/lang/en-au.js
// static/generator/ckeditor/plugins/removeformat/lang/en-ca.js
// static/generator/ckeditor/plugins/removeformat/lang/en-gb.js
// static/generator/ckeditor/plugins/removeformat/lang/en.js
// static/generator/ckeditor/plugins/removeformat/lang/eo.js
// static/generator/ckeditor/plugins/removeformat/lang/es.js
// static/generator/ckeditor/plugins/removeformat/lang/et.js
// static/generator/ckeditor/plugins/removeformat/lang/eu.js
// static/generator/ckeditor/plugins/removeformat/lang/fa.js
// static/generator/ckeditor/plugins/removeformat/lang/fi.js
// static/generator/ckeditor/plugins/removeformat/lang/fo.js
// static/generator/ckeditor/plugins/removeformat/lang/fr-ca.js
// static/generator/ckeditor/plugins/removeformat/lang/fr.js
// static/generator/ckeditor/plugins/removeformat/lang/gl.js
// static/generator/ckeditor/plugins/removeformat/lang/gu.js
// static/generator/ckeditor/plugins/removeformat/lang/he.js
// static/generator/ckeditor/plugins/removeformat/lang/hi.js
// static/generator/ckeditor/plugins/removeformat/lang/hr.js
// static/generator/ckeditor/plugins/removeformat/lang/hu.js
// static/generator/ckeditor/plugins/removeformat/lang/id.js
// static/generator/ckeditor/plugins/removeformat/lang/is.js
// static/generator/ckeditor/plugins/removeformat/lang/it.js
// static/generator/ckeditor/plugins/removeformat/lang/ja.js
// static/generator/ckeditor/plugins/removeformat/lang/ka.js
// static/generator/ckeditor/plugins/removeformat/lang/km.js
// static/generator/ckeditor/plugins/removeformat/lang/ko.js
// static/generator/ckeditor/plugins/removeformat/lang/ku.js
// static/generator/ckeditor/plugins/removeformat/lang/lt.js
// static/generator/ckeditor/plugins/removeformat/lang/lv.js
// static/generator/ckeditor/plugins/removeformat/lang/mk.js
// static/generator/ckeditor/plugins/removeformat/lang/mn.js
// static/generator/ckeditor/plugins/removeformat/lang/ms.js
// static/generator/ckeditor/plugins/removeformat/lang/nb.js
// static/generator/ckeditor/plugins/removeformat/lang/nl.js
// static/generator/ckeditor/plugins/removeformat/lang/no.js
// static/generator/ckeditor/plugins/removeformat/lang/oc.js
// static/generator/ckeditor/plugins/removeformat/lang/pl.js
// static/generator/ckeditor/plugins/removeformat/lang/pt-br.js
// static/generator/ckeditor/plugins/removeformat/lang/pt.js
// static/generator/ckeditor/plugins/removeformat/lang/ro.js
// static/generator/ckeditor/plugins/removeformat/lang/ru.js
// static/generator/ckeditor/plugins/removeformat/lang/si.js
// static/generator/ckeditor/plugins/removeformat/lang/sk.js
// static/generator/ckeditor/plugins/removeformat/lang/sl.js
// static/generator/ckeditor/plugins/removeformat/lang/sq.js
// static/generator/ckeditor/plugins/removeformat/lang/sr-latn.js
// static/generator/ckeditor/plugins/removeformat/lang/sr.js
// static/generator/ckeditor/plugins/removeformat/lang/sv.js
// static/generator/ckeditor/plugins/removeformat/lang/th.js
// static/generator/ckeditor/plugins/removeformat/lang/tr.js
// static/generator/ckeditor/plugins/removeformat/lang/tt.js
// static/generator/ckeditor/plugins/removeformat/lang/ug.js
// static/generator/ckeditor/plugins/removeformat/lang/uk.js
// static/generator/ckeditor/plugins/removeformat/lang/vi.js
// static/generator/ckeditor/plugins/removeformat/lang/zh-cn.js
// static/generator/ckeditor/plugins/removeformat/lang/zh.js
// static/generator/ckeditor/plugins/removeformat/plugin.js
// static/generator/ckeditor/plugins/resize/plugin.js
// static/generator/ckeditor/plugins/richcombo/plugin.js
// static/generator/ckeditor/plugins/save/icons/hidpi/save.png
// static/generator/ckeditor/plugins/save/icons/save.png
// static/generator/ckeditor/plugins/save/lang/af.js
// static/generator/ckeditor/plugins/save/lang/ar.js
// static/generator/ckeditor/plugins/save/lang/az.js
// static/generator/ckeditor/plugins/save/lang/bg.js
// static/generator/ckeditor/plugins/save/lang/bn.js
// static/generator/ckeditor/plugins/save/lang/bs.js
// static/generator/ckeditor/plugins/save/lang/ca.js
// static/generator/ckeditor/plugins/save/lang/cs.js
// static/generator/ckeditor/plugins/save/lang/cy.js
// static/generator/ckeditor/plugins/save/lang/da.js
// static/generator/ckeditor/plugins/save/lang/de-ch.js
// static/generator/ckeditor/plugins/save/lang/de.js
// static/generator/ckeditor/plugins/save/lang/el.js
// static/generator/ckeditor/plugins/save/lang/en-au.js
// static/generator/ckeditor/plugins/save/lang/en-ca.js
// static/generator/ckeditor/plugins/save/lang/en-gb.js
// static/generator/ckeditor/plugins/save/lang/en.js
// static/generator/ckeditor/plugins/save/lang/eo.js
// static/generator/ckeditor/plugins/save/lang/es.js
// static/generator/ckeditor/plugins/save/lang/et.js
// static/generator/ckeditor/plugins/save/lang/eu.js
// static/generator/ckeditor/plugins/save/lang/fa.js
// static/generator/ckeditor/plugins/save/lang/fi.js
// static/generator/ckeditor/plugins/save/lang/fo.js
// static/generator/ckeditor/plugins/save/lang/fr-ca.js
// static/generator/ckeditor/plugins/save/lang/fr.js
// static/generator/ckeditor/plugins/save/lang/gl.js
// static/generator/ckeditor/plugins/save/lang/gu.js
// static/generator/ckeditor/plugins/save/lang/he.js
// static/generator/ckeditor/plugins/save/lang/hi.js
// static/generator/ckeditor/plugins/save/lang/hr.js
// static/generator/ckeditor/plugins/save/lang/hu.js
// static/generator/ckeditor/plugins/save/lang/id.js
// static/generator/ckeditor/plugins/save/lang/is.js
// static/generator/ckeditor/plugins/save/lang/it.js
// static/generator/ckeditor/plugins/save/lang/ja.js
// static/generator/ckeditor/plugins/save/lang/ka.js
// static/generator/ckeditor/plugins/save/lang/km.js
// static/generator/ckeditor/plugins/save/lang/ko.js
// static/generator/ckeditor/plugins/save/lang/ku.js
// static/generator/ckeditor/plugins/save/lang/lt.js
// static/generator/ckeditor/plugins/save/lang/lv.js
// static/generator/ckeditor/plugins/save/lang/mk.js
// static/generator/ckeditor/plugins/save/lang/mn.js
// static/generator/ckeditor/plugins/save/lang/ms.js
// static/generator/ckeditor/plugins/save/lang/nb.js
// static/generator/ckeditor/plugins/save/lang/nl.js
// static/generator/ckeditor/plugins/save/lang/no.js
// static/generator/ckeditor/plugins/save/lang/oc.js
// static/generator/ckeditor/plugins/save/lang/pl.js
// static/generator/ckeditor/plugins/save/lang/pt-br.js
// static/generator/ckeditor/plugins/save/lang/pt.js
// static/generator/ckeditor/plugins/save/lang/ro.js
// static/generator/ckeditor/plugins/save/lang/ru.js
// static/generator/ckeditor/plugins/save/lang/si.js
// static/generator/ckeditor/plugins/save/lang/sk.js
// static/generator/ckeditor/plugins/save/lang/sl.js
// static/generator/ckeditor/plugins/save/lang/sq.js
// static/generator/ckeditor/plugins/save/lang/sr-latn.js
// static/generator/ckeditor/plugins/save/lang/sr.js
// static/generator/ckeditor/plugins/save/lang/sv.js
// static/generator/ckeditor/plugins/save/lang/th.js
// static/generator/ckeditor/plugins/save/lang/tr.js
// static/generator/ckeditor/plugins/save/lang/tt.js
// static/generator/ckeditor/plugins/save/lang/ug.js
// static/generator/ckeditor/plugins/save/lang/uk.js
// static/generator/ckeditor/plugins/save/lang/vi.js
// static/generator/ckeditor/plugins/save/lang/zh-cn.js
// static/generator/ckeditor/plugins/save/lang/zh.js
// static/generator/ckeditor/plugins/save/plugin.js
// static/generator/ckeditor/plugins/scayt/CHANGELOG.md
// static/generator/ckeditor/plugins/scayt/LICENSE.md
// static/generator/ckeditor/plugins/scayt/README.md
// static/generator/ckeditor/plugins/scayt/dialogs/options.js
// static/generator/ckeditor/plugins/scayt/dialogs/toolbar.css
// static/generator/ckeditor/plugins/scayt/icons/hidpi/scayt.png
// static/generator/ckeditor/plugins/scayt/icons/scayt.png
// static/generator/ckeditor/plugins/scayt/lang/af.js
// static/generator/ckeditor/plugins/scayt/lang/ar.js
// static/generator/ckeditor/plugins/scayt/lang/bg.js
// static/generator/ckeditor/plugins/scayt/lang/bn.js
// static/generator/ckeditor/plugins/scayt/lang/bs.js
// static/generator/ckeditor/plugins/scayt/lang/ca.js
// static/generator/ckeditor/plugins/scayt/lang/cs.js
// static/generator/ckeditor/plugins/scayt/lang/cy.js
// static/generator/ckeditor/plugins/scayt/lang/da.js
// static/generator/ckeditor/plugins/scayt/lang/de.js
// static/generator/ckeditor/plugins/scayt/lang/el.js
// static/generator/ckeditor/plugins/scayt/lang/en-au.js
// static/generator/ckeditor/plugins/scayt/lang/en-ca.js
// static/generator/ckeditor/plugins/scayt/lang/en-gb.js
// static/generator/ckeditor/plugins/scayt/lang/en.js
// static/generator/ckeditor/plugins/scayt/lang/eo.js
// static/generator/ckeditor/plugins/scayt/lang/es.js
// static/generator/ckeditor/plugins/scayt/lang/et.js
// static/generator/ckeditor/plugins/scayt/lang/eu.js
// static/generator/ckeditor/plugins/scayt/lang/fa.js
// static/generator/ckeditor/plugins/scayt/lang/fi.js
// static/generator/ckeditor/plugins/scayt/lang/fo.js
// static/generator/ckeditor/plugins/scayt/lang/fr-ca.js
// static/generator/ckeditor/plugins/scayt/lang/fr.js
// static/generator/ckeditor/plugins/scayt/lang/gl.js
// static/generator/ckeditor/plugins/scayt/lang/gu.js
// static/generator/ckeditor/plugins/scayt/lang/he.js
// static/generator/ckeditor/plugins/scayt/lang/hi.js
// static/generator/ckeditor/plugins/scayt/lang/hr.js
// static/generator/ckeditor/plugins/scayt/lang/hu.js
// static/generator/ckeditor/plugins/scayt/lang/is.js
// static/generator/ckeditor/plugins/scayt/lang/it.js
// static/generator/ckeditor/plugins/scayt/lang/ja.js
// static/generator/ckeditor/plugins/scayt/lang/ka.js
// static/generator/ckeditor/plugins/scayt/lang/km.js
// static/generator/ckeditor/plugins/scayt/lang/ko.js
// static/generator/ckeditor/plugins/scayt/lang/ku.js
// static/generator/ckeditor/plugins/scayt/lang/lt.js
// static/generator/ckeditor/plugins/scayt/lang/lv.js
// static/generator/ckeditor/plugins/scayt/lang/mk.js
// static/generator/ckeditor/plugins/scayt/lang/mn.js
// static/generator/ckeditor/plugins/scayt/lang/ms.js
// static/generator/ckeditor/plugins/scayt/lang/nb.js
// static/generator/ckeditor/plugins/scayt/lang/nl.js
// static/generator/ckeditor/plugins/scayt/lang/no.js
// static/generator/ckeditor/plugins/scayt/lang/pl.js
// static/generator/ckeditor/plugins/scayt/lang/pt-br.js
// static/generator/ckeditor/plugins/scayt/lang/pt.js
// static/generator/ckeditor/plugins/scayt/lang/ro.js
// static/generator/ckeditor/plugins/scayt/lang/ru.js
// static/generator/ckeditor/plugins/scayt/lang/sk.js
// static/generator/ckeditor/plugins/scayt/lang/sl.js
// static/generator/ckeditor/plugins/scayt/lang/sr-latn.js
// static/generator/ckeditor/plugins/scayt/lang/sr.js
// static/generator/ckeditor/plugins/scayt/lang/sv.js
// static/generator/ckeditor/plugins/scayt/lang/th.js
// static/generator/ckeditor/plugins/scayt/lang/tr.js
// static/generator/ckeditor/plugins/scayt/lang/ug.js
// static/generator/ckeditor/plugins/scayt/lang/uk.js
// static/generator/ckeditor/plugins/scayt/lang/vi.js
// static/generator/ckeditor/plugins/scayt/lang/zh-cn.js
// static/generator/ckeditor/plugins/scayt/lang/zh.js
// static/generator/ckeditor/plugins/scayt/plugin.js
// static/generator/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css
// static/generator/ckeditor/plugins/selectall/icons/hidpi/selectall.png
// static/generator/ckeditor/plugins/selectall/icons/selectall.png
// static/generator/ckeditor/plugins/selectall/lang/af.js
// static/generator/ckeditor/plugins/selectall/lang/ar.js
// static/generator/ckeditor/plugins/selectall/lang/az.js
// static/generator/ckeditor/plugins/selectall/lang/bg.js
// static/generator/ckeditor/plugins/selectall/lang/bn.js
// static/generator/ckeditor/plugins/selectall/lang/bs.js
// static/generator/ckeditor/plugins/selectall/lang/ca.js
// static/generator/ckeditor/plugins/selectall/lang/cs.js
// static/generator/ckeditor/plugins/selectall/lang/cy.js
// static/generator/ckeditor/plugins/selectall/lang/da.js
// static/generator/ckeditor/plugins/selectall/lang/de-ch.js
// static/generator/ckeditor/plugins/selectall/lang/de.js
// static/generator/ckeditor/plugins/selectall/lang/el.js
// static/generator/ckeditor/plugins/selectall/lang/en-au.js
// static/generator/ckeditor/plugins/selectall/lang/en-ca.js
// static/generator/ckeditor/plugins/selectall/lang/en-gb.js
// static/generator/ckeditor/plugins/selectall/lang/en.js
// static/generator/ckeditor/plugins/selectall/lang/eo.js
// static/generator/ckeditor/plugins/selectall/lang/es.js
// static/generator/ckeditor/plugins/selectall/lang/et.js
// static/generator/ckeditor/plugins/selectall/lang/eu.js
// static/generator/ckeditor/plugins/selectall/lang/fa.js
// static/generator/ckeditor/plugins/selectall/lang/fi.js
// static/generator/ckeditor/plugins/selectall/lang/fo.js
// static/generator/ckeditor/plugins/selectall/lang/fr-ca.js
// static/generator/ckeditor/plugins/selectall/lang/fr.js
// static/generator/ckeditor/plugins/selectall/lang/gl.js
// static/generator/ckeditor/plugins/selectall/lang/gu.js
// static/generator/ckeditor/plugins/selectall/lang/he.js
// static/generator/ckeditor/plugins/selectall/lang/hi.js
// static/generator/ckeditor/plugins/selectall/lang/hr.js
// static/generator/ckeditor/plugins/selectall/lang/hu.js
// static/generator/ckeditor/plugins/selectall/lang/id.js
// static/generator/ckeditor/plugins/selectall/lang/is.js
// static/generator/ckeditor/plugins/selectall/lang/it.js
// static/generator/ckeditor/plugins/selectall/lang/ja.js
// static/generator/ckeditor/plugins/selectall/lang/ka.js
// static/generator/ckeditor/plugins/selectall/lang/km.js
// static/generator/ckeditor/plugins/selectall/lang/ko.js
// static/generator/ckeditor/plugins/selectall/lang/ku.js
// static/generator/ckeditor/plugins/selectall/lang/lt.js
// static/generator/ckeditor/plugins/selectall/lang/lv.js
// static/generator/ckeditor/plugins/selectall/lang/mk.js
// static/generator/ckeditor/plugins/selectall/lang/mn.js
// static/generator/ckeditor/plugins/selectall/lang/ms.js
// static/generator/ckeditor/plugins/selectall/lang/nb.js
// static/generator/ckeditor/plugins/selectall/lang/nl.js
// static/generator/ckeditor/plugins/selectall/lang/no.js
// static/generator/ckeditor/plugins/selectall/lang/oc.js
// static/generator/ckeditor/plugins/selectall/lang/pl.js
// static/generator/ckeditor/plugins/selectall/lang/pt-br.js
// static/generator/ckeditor/plugins/selectall/lang/pt.js
// static/generator/ckeditor/plugins/selectall/lang/ro.js
// static/generator/ckeditor/plugins/selectall/lang/ru.js
// static/generator/ckeditor/plugins/selectall/lang/si.js
// static/generator/ckeditor/plugins/selectall/lang/sk.js
// static/generator/ckeditor/plugins/selectall/lang/sl.js
// static/generator/ckeditor/plugins/selectall/lang/sq.js
// static/generator/ckeditor/plugins/selectall/lang/sr-latn.js
// static/generator/ckeditor/plugins/selectall/lang/sr.js
// static/generator/ckeditor/plugins/selectall/lang/sv.js
// static/generator/ckeditor/plugins/selectall/lang/th.js
// static/generator/ckeditor/plugins/selectall/lang/tr.js
// static/generator/ckeditor/plugins/selectall/lang/tt.js
// static/generator/ckeditor/plugins/selectall/lang/ug.js
// static/generator/ckeditor/plugins/selectall/lang/uk.js
// static/generator/ckeditor/plugins/selectall/lang/vi.js
// static/generator/ckeditor/plugins/selectall/lang/zh-cn.js
// static/generator/ckeditor/plugins/selectall/lang/zh.js
// static/generator/ckeditor/plugins/selectall/plugin.js
// static/generator/ckeditor/plugins/showblocks/icons/hidpi/showblocks-rtl.png
// static/generator/ckeditor/plugins/showblocks/icons/hidpi/showblocks.png
// static/generator/ckeditor/plugins/showblocks/icons/showblocks-rtl.png
// static/generator/ckeditor/plugins/showblocks/icons/showblocks.png
// static/generator/ckeditor/plugins/showblocks/images/block_address.png
// static/generator/ckeditor/plugins/showblocks/images/block_blockquote.png
// static/generator/ckeditor/plugins/showblocks/images/block_div.png
// static/generator/ckeditor/plugins/showblocks/images/block_h1.png
// static/generator/ckeditor/plugins/showblocks/images/block_h2.png
// static/generator/ckeditor/plugins/showblocks/images/block_h3.png
// static/generator/ckeditor/plugins/showblocks/images/block_h4.png
// static/generator/ckeditor/plugins/showblocks/images/block_h5.png
// static/generator/ckeditor/plugins/showblocks/images/block_h6.png
// static/generator/ckeditor/plugins/showblocks/images/block_p.png
// static/generator/ckeditor/plugins/showblocks/images/block_pre.png
// static/generator/ckeditor/plugins/showblocks/lang/af.js
// static/generator/ckeditor/plugins/showblocks/lang/ar.js
// static/generator/ckeditor/plugins/showblocks/lang/az.js
// static/generator/ckeditor/plugins/showblocks/lang/bg.js
// static/generator/ckeditor/plugins/showblocks/lang/bn.js
// static/generator/ckeditor/plugins/showblocks/lang/bs.js
// static/generator/ckeditor/plugins/showblocks/lang/ca.js
// static/generator/ckeditor/plugins/showblocks/lang/cs.js
// static/generator/ckeditor/plugins/showblocks/lang/cy.js
// static/generator/ckeditor/plugins/showblocks/lang/da.js
// static/generator/ckeditor/plugins/showblocks/lang/de-ch.js
// static/generator/ckeditor/plugins/showblocks/lang/de.js
// static/generator/ckeditor/plugins/showblocks/lang/el.js
// static/generator/ckeditor/plugins/showblocks/lang/en-au.js
// static/generator/ckeditor/plugins/showblocks/lang/en-ca.js
// static/generator/ckeditor/plugins/showblocks/lang/en-gb.js
// static/generator/ckeditor/plugins/showblocks/lang/en.js
// static/generator/ckeditor/plugins/showblocks/lang/eo.js
// static/generator/ckeditor/plugins/showblocks/lang/es.js
// static/generator/ckeditor/plugins/showblocks/lang/et.js
// static/generator/ckeditor/plugins/showblocks/lang/eu.js
// static/generator/ckeditor/plugins/showblocks/lang/fa.js
// static/generator/ckeditor/plugins/showblocks/lang/fi.js
// static/generator/ckeditor/plugins/showblocks/lang/fo.js
// static/generator/ckeditor/plugins/showblocks/lang/fr-ca.js
// static/generator/ckeditor/plugins/showblocks/lang/fr.js
// static/generator/ckeditor/plugins/showblocks/lang/gl.js
// static/generator/ckeditor/plugins/showblocks/lang/gu.js
// static/generator/ckeditor/plugins/showblocks/lang/he.js
// static/generator/ckeditor/plugins/showblocks/lang/hi.js
// static/generator/ckeditor/plugins/showblocks/lang/hr.js
// static/generator/ckeditor/plugins/showblocks/lang/hu.js
// static/generator/ckeditor/plugins/showblocks/lang/id.js
// static/generator/ckeditor/plugins/showblocks/lang/is.js
// static/generator/ckeditor/plugins/showblocks/lang/it.js
// static/generator/ckeditor/plugins/showblocks/lang/ja.js
// static/generator/ckeditor/plugins/showblocks/lang/ka.js
// static/generator/ckeditor/plugins/showblocks/lang/km.js
// static/generator/ckeditor/plugins/showblocks/lang/ko.js
// static/generator/ckeditor/plugins/showblocks/lang/ku.js
// static/generator/ckeditor/plugins/showblocks/lang/lt.js
// static/generator/ckeditor/plugins/showblocks/lang/lv.js
// static/generator/ckeditor/plugins/showblocks/lang/mk.js
// static/generator/ckeditor/plugins/showblocks/lang/mn.js
// static/generator/ckeditor/plugins/showblocks/lang/ms.js
// static/generator/ckeditor/plugins/showblocks/lang/nb.js
// static/generator/ckeditor/plugins/showblocks/lang/nl.js
// static/generator/ckeditor/plugins/showblocks/lang/no.js
// static/generator/ckeditor/plugins/showblocks/lang/oc.js
// static/generator/ckeditor/plugins/showblocks/lang/pl.js
// static/generator/ckeditor/plugins/showblocks/lang/pt-br.js
// static/generator/ckeditor/plugins/showblocks/lang/pt.js
// static/generator/ckeditor/plugins/showblocks/lang/ro.js
// static/generator/ckeditor/plugins/showblocks/lang/ru.js
// static/generator/ckeditor/plugins/showblocks/lang/si.js
// static/generator/ckeditor/plugins/showblocks/lang/sk.js
// static/generator/ckeditor/plugins/showblocks/lang/sl.js
// static/generator/ckeditor/plugins/showblocks/lang/sq.js
// static/generator/ckeditor/plugins/showblocks/lang/sr-latn.js
// static/generator/ckeditor/plugins/showblocks/lang/sr.js
// static/generator/ckeditor/plugins/showblocks/lang/sv.js
// static/generator/ckeditor/plugins/showblocks/lang/th.js
// static/generator/ckeditor/plugins/showblocks/lang/tr.js
// static/generator/ckeditor/plugins/showblocks/lang/tt.js
// static/generator/ckeditor/plugins/showblocks/lang/ug.js
// static/generator/ckeditor/plugins/showblocks/lang/uk.js
// static/generator/ckeditor/plugins/showblocks/lang/vi.js
// static/generator/ckeditor/plugins/showblocks/lang/zh-cn.js
// static/generator/ckeditor/plugins/showblocks/lang/zh.js
// static/generator/ckeditor/plugins/showblocks/plugin.js
// static/generator/ckeditor/plugins/showborders/plugin.js
// static/generator/ckeditor/plugins/smiley/dialogs/smiley.js
// static/generator/ckeditor/plugins/smiley/icons/hidpi/smiley.png
// static/generator/ckeditor/plugins/smiley/icons/smiley.png
// static/generator/ckeditor/plugins/smiley/images/angel_smile.gif
// static/generator/ckeditor/plugins/smiley/images/angel_smile.png
// static/generator/ckeditor/plugins/smiley/images/angry_smile.gif
// static/generator/ckeditor/plugins/smiley/images/angry_smile.png
// static/generator/ckeditor/plugins/smiley/images/broken_heart.gif
// static/generator/ckeditor/plugins/smiley/images/broken_heart.png
// static/generator/ckeditor/plugins/smiley/images/confused_smile.gif
// static/generator/ckeditor/plugins/smiley/images/confused_smile.png
// static/generator/ckeditor/plugins/smiley/images/cry_smile.gif
// static/generator/ckeditor/plugins/smiley/images/cry_smile.png
// static/generator/ckeditor/plugins/smiley/images/devil_smile.gif
// static/generator/ckeditor/plugins/smiley/images/devil_smile.png
// static/generator/ckeditor/plugins/smiley/images/embaressed_smile.gif
// static/generator/ckeditor/plugins/smiley/images/embarrassed_smile.gif
// static/generator/ckeditor/plugins/smiley/images/embarrassed_smile.png
// static/generator/ckeditor/plugins/smiley/images/envelope.gif
// static/generator/ckeditor/plugins/smiley/images/envelope.png
// static/generator/ckeditor/plugins/smiley/images/heart.gif
// static/generator/ckeditor/plugins/smiley/images/heart.png
// static/generator/ckeditor/plugins/smiley/images/kiss.gif
// static/generator/ckeditor/plugins/smiley/images/kiss.png
// static/generator/ckeditor/plugins/smiley/images/lightbulb.gif
// static/generator/ckeditor/plugins/smiley/images/lightbulb.png
// static/generator/ckeditor/plugins/smiley/images/omg_smile.gif
// static/generator/ckeditor/plugins/smiley/images/omg_smile.png
// static/generator/ckeditor/plugins/smiley/images/regular_smile.gif
// static/generator/ckeditor/plugins/smiley/images/regular_smile.png
// static/generator/ckeditor/plugins/smiley/images/sad_smile.gif
// static/generator/ckeditor/plugins/smiley/images/sad_smile.png
// static/generator/ckeditor/plugins/smiley/images/shades_smile.gif
// static/generator/ckeditor/plugins/smiley/images/shades_smile.png
// static/generator/ckeditor/plugins/smiley/images/teeth_smile.gif
// static/generator/ckeditor/plugins/smiley/images/teeth_smile.png
// static/generator/ckeditor/plugins/smiley/images/thumbs_down.gif
// static/generator/ckeditor/plugins/smiley/images/thumbs_down.png
// static/generator/ckeditor/plugins/smiley/images/thumbs_up.gif
// static/generator/ckeditor/plugins/smiley/images/thumbs_up.png
// static/generator/ckeditor/plugins/smiley/images/tongue_smile.gif
// static/generator/ckeditor/plugins/smiley/images/tongue_smile.png
// static/generator/ckeditor/plugins/smiley/images/tounge_smile.gif
// static/generator/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.gif
// static/generator/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.png
// static/generator/ckeditor/plugins/smiley/images/wink_smile.gif
// static/generator/ckeditor/plugins/smiley/images/wink_smile.png
// static/generator/ckeditor/plugins/smiley/lang/af.js
// static/generator/ckeditor/plugins/smiley/lang/ar.js
// static/generator/ckeditor/plugins/smiley/lang/az.js
// static/generator/ckeditor/plugins/smiley/lang/bg.js
// static/generator/ckeditor/plugins/smiley/lang/bn.js
// static/generator/ckeditor/plugins/smiley/lang/bs.js
// static/generator/ckeditor/plugins/smiley/lang/ca.js
// static/generator/ckeditor/plugins/smiley/lang/cs.js
// static/generator/ckeditor/plugins/smiley/lang/cy.js
// static/generator/ckeditor/plugins/smiley/lang/da.js
// static/generator/ckeditor/plugins/smiley/lang/de-ch.js
// static/generator/ckeditor/plugins/smiley/lang/de.js
// static/generator/ckeditor/plugins/smiley/lang/el.js
// static/generator/ckeditor/plugins/smiley/lang/en-au.js
// static/generator/ckeditor/plugins/smiley/lang/en-ca.js
// static/generator/ckeditor/plugins/smiley/lang/en-gb.js
// static/generator/ckeditor/plugins/smiley/lang/en.js
// static/generator/ckeditor/plugins/smiley/lang/eo.js
// static/generator/ckeditor/plugins/smiley/lang/es.js
// static/generator/ckeditor/plugins/smiley/lang/et.js
// static/generator/ckeditor/plugins/smiley/lang/eu.js
// static/generator/ckeditor/plugins/smiley/lang/fa.js
// static/generator/ckeditor/plugins/smiley/lang/fi.js
// static/generator/ckeditor/plugins/smiley/lang/fo.js
// static/generator/ckeditor/plugins/smiley/lang/fr-ca.js
// static/generator/ckeditor/plugins/smiley/lang/fr.js
// static/generator/ckeditor/plugins/smiley/lang/gl.js
// static/generator/ckeditor/plugins/smiley/lang/gu.js
// static/generator/ckeditor/plugins/smiley/lang/he.js
// static/generator/ckeditor/plugins/smiley/lang/hi.js
// static/generator/ckeditor/plugins/smiley/lang/hr.js
// static/generator/ckeditor/plugins/smiley/lang/hu.js
// static/generator/ckeditor/plugins/smiley/lang/id.js
// static/generator/ckeditor/plugins/smiley/lang/is.js
// static/generator/ckeditor/plugins/smiley/lang/it.js
// static/generator/ckeditor/plugins/smiley/lang/ja.js
// static/generator/ckeditor/plugins/smiley/lang/ka.js
// static/generator/ckeditor/plugins/smiley/lang/km.js
// static/generator/ckeditor/plugins/smiley/lang/ko.js
// static/generator/ckeditor/plugins/smiley/lang/ku.js
// static/generator/ckeditor/plugins/smiley/lang/lt.js
// static/generator/ckeditor/plugins/smiley/lang/lv.js
// static/generator/ckeditor/plugins/smiley/lang/mk.js
// static/generator/ckeditor/plugins/smiley/lang/mn.js
// static/generator/ckeditor/plugins/smiley/lang/ms.js
// static/generator/ckeditor/plugins/smiley/lang/nb.js
// static/generator/ckeditor/plugins/smiley/lang/nl.js
// static/generator/ckeditor/plugins/smiley/lang/no.js
// static/generator/ckeditor/plugins/smiley/lang/oc.js
// static/generator/ckeditor/plugins/smiley/lang/pl.js
// static/generator/ckeditor/plugins/smiley/lang/pt-br.js
// static/generator/ckeditor/plugins/smiley/lang/pt.js
// static/generator/ckeditor/plugins/smiley/lang/ro.js
// static/generator/ckeditor/plugins/smiley/lang/ru.js
// static/generator/ckeditor/plugins/smiley/lang/si.js
// static/generator/ckeditor/plugins/smiley/lang/sk.js
// static/generator/ckeditor/plugins/smiley/lang/sl.js
// static/generator/ckeditor/plugins/smiley/lang/sq.js
// static/generator/ckeditor/plugins/smiley/lang/sr-latn.js
// static/generator/ckeditor/plugins/smiley/lang/sr.js
// static/generator/ckeditor/plugins/smiley/lang/sv.js
// static/generator/ckeditor/plugins/smiley/lang/th.js
// static/generator/ckeditor/plugins/smiley/lang/tr.js
// static/generator/ckeditor/plugins/smiley/lang/tt.js
// static/generator/ckeditor/plugins/smiley/lang/ug.js
// static/generator/ckeditor/plugins/smiley/lang/uk.js
// static/generator/ckeditor/plugins/smiley/lang/vi.js
// static/generator/ckeditor/plugins/smiley/lang/zh-cn.js
// static/generator/ckeditor/plugins/smiley/lang/zh.js
// static/generator/ckeditor/plugins/smiley/plugin.js
// static/generator/ckeditor/plugins/sourcearea/icons/hidpi/source-rtl.png
// static/generator/ckeditor/plugins/sourcearea/icons/hidpi/source.png
// static/generator/ckeditor/plugins/sourcearea/icons/source-rtl.png
// static/generator/ckeditor/plugins/sourcearea/icons/source.png
// static/generator/ckeditor/plugins/sourcearea/lang/af.js
// static/generator/ckeditor/plugins/sourcearea/lang/ar.js
// static/generator/ckeditor/plugins/sourcearea/lang/az.js
// static/generator/ckeditor/plugins/sourcearea/lang/bg.js
// static/generator/ckeditor/plugins/sourcearea/lang/bn.js
// static/generator/ckeditor/plugins/sourcearea/lang/bs.js
// static/generator/ckeditor/plugins/sourcearea/lang/ca.js
// static/generator/ckeditor/plugins/sourcearea/lang/cs.js
// static/generator/ckeditor/plugins/sourcearea/lang/cy.js
// static/generator/ckeditor/plugins/sourcearea/lang/da.js
// static/generator/ckeditor/plugins/sourcearea/lang/de-ch.js
// static/generator/ckeditor/plugins/sourcearea/lang/de.js
// static/generator/ckeditor/plugins/sourcearea/lang/el.js
// static/generator/ckeditor/plugins/sourcearea/lang/en-au.js
// static/generator/ckeditor/plugins/sourcearea/lang/en-ca.js
// static/generator/ckeditor/plugins/sourcearea/lang/en-gb.js
// static/generator/ckeditor/plugins/sourcearea/lang/en.js
// static/generator/ckeditor/plugins/sourcearea/lang/eo.js
// static/generator/ckeditor/plugins/sourcearea/lang/es.js
// static/generator/ckeditor/plugins/sourcearea/lang/et.js
// static/generator/ckeditor/plugins/sourcearea/lang/eu.js
// static/generator/ckeditor/plugins/sourcearea/lang/fa.js
// static/generator/ckeditor/plugins/sourcearea/lang/fi.js
// static/generator/ckeditor/plugins/sourcearea/lang/fo.js
// static/generator/ckeditor/plugins/sourcearea/lang/fr-ca.js
// static/generator/ckeditor/plugins/sourcearea/lang/fr.js
// static/generator/ckeditor/plugins/sourcearea/lang/gl.js
// static/generator/ckeditor/plugins/sourcearea/lang/gu.js
// static/generator/ckeditor/plugins/sourcearea/lang/he.js
// static/generator/ckeditor/plugins/sourcearea/lang/hi.js
// static/generator/ckeditor/plugins/sourcearea/lang/hr.js
// static/generator/ckeditor/plugins/sourcearea/lang/hu.js
// static/generator/ckeditor/plugins/sourcearea/lang/id.js
// static/generator/ckeditor/plugins/sourcearea/lang/is.js
// static/generator/ckeditor/plugins/sourcearea/lang/it.js
// static/generator/ckeditor/plugins/sourcearea/lang/ja.js
// static/generator/ckeditor/plugins/sourcearea/lang/ka.js
// static/generator/ckeditor/plugins/sourcearea/lang/km.js
// static/generator/ckeditor/plugins/sourcearea/lang/ko.js
// static/generator/ckeditor/plugins/sourcearea/lang/ku.js
// static/generator/ckeditor/plugins/sourcearea/lang/lt.js
// static/generator/ckeditor/plugins/sourcearea/lang/lv.js
// static/generator/ckeditor/plugins/sourcearea/lang/mk.js
// static/generator/ckeditor/plugins/sourcearea/lang/mn.js
// static/generator/ckeditor/plugins/sourcearea/lang/ms.js
// static/generator/ckeditor/plugins/sourcearea/lang/nb.js
// static/generator/ckeditor/plugins/sourcearea/lang/nl.js
// static/generator/ckeditor/plugins/sourcearea/lang/no.js
// static/generator/ckeditor/plugins/sourcearea/lang/oc.js
// static/generator/ckeditor/plugins/sourcearea/lang/pl.js
// static/generator/ckeditor/plugins/sourcearea/lang/pt-br.js
// static/generator/ckeditor/plugins/sourcearea/lang/pt.js
// static/generator/ckeditor/plugins/sourcearea/lang/ro.js
// static/generator/ckeditor/plugins/sourcearea/lang/ru.js
// static/generator/ckeditor/plugins/sourcearea/lang/si.js
// static/generator/ckeditor/plugins/sourcearea/lang/sk.js
// static/generator/ckeditor/plugins/sourcearea/lang/sl.js
// static/generator/ckeditor/plugins/sourcearea/lang/sq.js
// static/generator/ckeditor/plugins/sourcearea/lang/sr-latn.js
// static/generator/ckeditor/plugins/sourcearea/lang/sr.js
// static/generator/ckeditor/plugins/sourcearea/lang/sv.js
// static/generator/ckeditor/plugins/sourcearea/lang/th.js
// static/generator/ckeditor/plugins/sourcearea/lang/tr.js
// static/generator/ckeditor/plugins/sourcearea/lang/tt.js
// static/generator/ckeditor/plugins/sourcearea/lang/ug.js
// static/generator/ckeditor/plugins/sourcearea/lang/uk.js
// static/generator/ckeditor/plugins/sourcearea/lang/vi.js
// static/generator/ckeditor/plugins/sourcearea/lang/zh-cn.js
// static/generator/ckeditor/plugins/sourcearea/lang/zh.js
// static/generator/ckeditor/plugins/sourcearea/plugin.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/_translationstatus.txt
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/af.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ar.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/az.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/bg.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ca.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/cs.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/cy.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/da.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/de-ch.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/de.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/el.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/en.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/eo.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/es.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/et.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/eu.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/fa.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/fi.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/fr.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/gl.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/he.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/hr.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/hu.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/id.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/it.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ja.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/km.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ko.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ku.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/lt.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/lv.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/nb.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/nl.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/no.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/oc.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/pl.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/pt.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ru.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/si.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/sk.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/sl.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/sq.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/sv.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/th.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/tr.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/tt.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/ug.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/uk.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/vi.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js
// static/generator/ckeditor/plugins/specialchar/dialogs/lang/zh.js
// static/generator/ckeditor/plugins/specialchar/dialogs/specialchar.js
// static/generator/ckeditor/plugins/specialchar/icons/hidpi/specialchar.png
// static/generator/ckeditor/plugins/specialchar/icons/specialchar.png
// static/generator/ckeditor/plugins/specialchar/lang/_translationstatus.txt
// static/generator/ckeditor/plugins/specialchar/lang/af.js
// static/generator/ckeditor/plugins/specialchar/lang/ar.js
// static/generator/ckeditor/plugins/specialchar/lang/az.js
// static/generator/ckeditor/plugins/specialchar/lang/bg.js
// static/generator/ckeditor/plugins/specialchar/lang/bn.js
// static/generator/ckeditor/plugins/specialchar/lang/bs.js
// static/generator/ckeditor/plugins/specialchar/lang/ca.js
// static/generator/ckeditor/plugins/specialchar/lang/cs.js
// static/generator/ckeditor/plugins/specialchar/lang/cy.js
// static/generator/ckeditor/plugins/specialchar/lang/da.js
// static/generator/ckeditor/plugins/specialchar/lang/de-ch.js
// static/generator/ckeditor/plugins/specialchar/lang/de.js
// static/generator/ckeditor/plugins/specialchar/lang/el.js
// static/generator/ckeditor/plugins/specialchar/lang/en-au.js
// static/generator/ckeditor/plugins/specialchar/lang/en-ca.js
// static/generator/ckeditor/plugins/specialchar/lang/en-gb.js
// static/generator/ckeditor/plugins/specialchar/lang/en.js
// static/generator/ckeditor/plugins/specialchar/lang/eo.js
// static/generator/ckeditor/plugins/specialchar/lang/es.js
// static/generator/ckeditor/plugins/specialchar/lang/et.js
// static/generator/ckeditor/plugins/specialchar/lang/eu.js
// static/generator/ckeditor/plugins/specialchar/lang/fa.js
// static/generator/ckeditor/plugins/specialchar/lang/fi.js
// static/generator/ckeditor/plugins/specialchar/lang/fo.js
// static/generator/ckeditor/plugins/specialchar/lang/fr-ca.js
// static/generator/ckeditor/plugins/specialchar/lang/fr.js
// static/generator/ckeditor/plugins/specialchar/lang/gl.js
// static/generator/ckeditor/plugins/specialchar/lang/gu.js
// static/generator/ckeditor/plugins/specialchar/lang/he.js
// static/generator/ckeditor/plugins/specialchar/lang/hi.js
// static/generator/ckeditor/plugins/specialchar/lang/hr.js
// static/generator/ckeditor/plugins/specialchar/lang/hu.js
// static/generator/ckeditor/plugins/specialchar/lang/id.js
// static/generator/ckeditor/plugins/specialchar/lang/is.js
// static/generator/ckeditor/plugins/specialchar/lang/it.js
// static/generator/ckeditor/plugins/specialchar/lang/ja.js
// static/generator/ckeditor/plugins/specialchar/lang/ka.js
// static/generator/ckeditor/plugins/specialchar/lang/km.js
// static/generator/ckeditor/plugins/specialchar/lang/ko.js
// static/generator/ckeditor/plugins/specialchar/lang/ku.js
// static/generator/ckeditor/plugins/specialchar/lang/lt.js
// static/generator/ckeditor/plugins/specialchar/lang/lv.js
// static/generator/ckeditor/plugins/specialchar/lang/mk.js
// static/generator/ckeditor/plugins/specialchar/lang/mn.js
// static/generator/ckeditor/plugins/specialchar/lang/ms.js
// static/generator/ckeditor/plugins/specialchar/lang/nb.js
// static/generator/ckeditor/plugins/specialchar/lang/nl.js
// static/generator/ckeditor/plugins/specialchar/lang/no.js
// static/generator/ckeditor/plugins/specialchar/lang/oc.js
// static/generator/ckeditor/plugins/specialchar/lang/pl.js
// static/generator/ckeditor/plugins/specialchar/lang/pt-br.js
// static/generator/ckeditor/plugins/specialchar/lang/pt.js
// static/generator/ckeditor/plugins/specialchar/lang/ro.js
// static/generator/ckeditor/plugins/specialchar/lang/ru.js
// static/generator/ckeditor/plugins/specialchar/lang/si.js
// static/generator/ckeditor/plugins/specialchar/lang/sk.js
// static/generator/ckeditor/plugins/specialchar/lang/sl.js
// static/generator/ckeditor/plugins/specialchar/lang/sq.js
// static/generator/ckeditor/plugins/specialchar/lang/sr-latn.js
// static/generator/ckeditor/plugins/specialchar/lang/sr.js
// static/generator/ckeditor/plugins/specialchar/lang/sv.js
// static/generator/ckeditor/plugins/specialchar/lang/th.js
// static/generator/ckeditor/plugins/specialchar/lang/tr.js
// static/generator/ckeditor/plugins/specialchar/lang/tt.js
// static/generator/ckeditor/plugins/specialchar/lang/ug.js
// static/generator/ckeditor/plugins/specialchar/lang/uk.js
// static/generator/ckeditor/plugins/specialchar/lang/vi.js
// static/generator/ckeditor/plugins/specialchar/lang/zh-cn.js
// static/generator/ckeditor/plugins/specialchar/lang/zh.js
// static/generator/ckeditor/plugins/specialchar/plugin.js
// static/generator/ckeditor/plugins/stylescombo/lang/af.js
// static/generator/ckeditor/plugins/stylescombo/lang/ar.js
// static/generator/ckeditor/plugins/stylescombo/lang/az.js
// static/generator/ckeditor/plugins/stylescombo/lang/bg.js
// static/generator/ckeditor/plugins/stylescombo/lang/bn.js
// static/generator/ckeditor/plugins/stylescombo/lang/bs.js
// static/generator/ckeditor/plugins/stylescombo/lang/ca.js
// static/generator/ckeditor/plugins/stylescombo/lang/cs.js
// static/generator/ckeditor/plugins/stylescombo/lang/cy.js
// static/generator/ckeditor/plugins/stylescombo/lang/da.js
// static/generator/ckeditor/plugins/stylescombo/lang/de-ch.js
// static/generator/ckeditor/plugins/stylescombo/lang/de.js
// static/generator/ckeditor/plugins/stylescombo/lang/el.js
// static/generator/ckeditor/plugins/stylescombo/lang/en-au.js
// static/generator/ckeditor/plugins/stylescombo/lang/en-ca.js
// static/generator/ckeditor/plugins/stylescombo/lang/en-gb.js
// static/generator/ckeditor/plugins/stylescombo/lang/en.js
// static/generator/ckeditor/plugins/stylescombo/lang/eo.js
// static/generator/ckeditor/plugins/stylescombo/lang/es.js
// static/generator/ckeditor/plugins/stylescombo/lang/et.js
// static/generator/ckeditor/plugins/stylescombo/lang/eu.js
// static/generator/ckeditor/plugins/stylescombo/lang/fa.js
// static/generator/ckeditor/plugins/stylescombo/lang/fi.js
// static/generator/ckeditor/plugins/stylescombo/lang/fo.js
// static/generator/ckeditor/plugins/stylescombo/lang/fr-ca.js
// static/generator/ckeditor/plugins/stylescombo/lang/fr.js
// static/generator/ckeditor/plugins/stylescombo/lang/gl.js
// static/generator/ckeditor/plugins/stylescombo/lang/gu.js
// static/generator/ckeditor/plugins/stylescombo/lang/he.js
// static/generator/ckeditor/plugins/stylescombo/lang/hi.js
// static/generator/ckeditor/plugins/stylescombo/lang/hr.js
// static/generator/ckeditor/plugins/stylescombo/lang/hu.js
// static/generator/ckeditor/plugins/stylescombo/lang/id.js
// static/generator/ckeditor/plugins/stylescombo/lang/is.js
// static/generator/ckeditor/plugins/stylescombo/lang/it.js
// static/generator/ckeditor/plugins/stylescombo/lang/ja.js
// static/generator/ckeditor/plugins/stylescombo/lang/ka.js
// static/generator/ckeditor/plugins/stylescombo/lang/km.js
// static/generator/ckeditor/plugins/stylescombo/lang/ko.js
// static/generator/ckeditor/plugins/stylescombo/lang/ku.js
// static/generator/ckeditor/plugins/stylescombo/lang/lt.js
// static/generator/ckeditor/plugins/stylescombo/lang/lv.js
// static/generator/ckeditor/plugins/stylescombo/lang/mk.js
// static/generator/ckeditor/plugins/stylescombo/lang/mn.js
// static/generator/ckeditor/plugins/stylescombo/lang/ms.js
// static/generator/ckeditor/plugins/stylescombo/lang/nb.js
// static/generator/ckeditor/plugins/stylescombo/lang/nl.js
// static/generator/ckeditor/plugins/stylescombo/lang/no.js
// static/generator/ckeditor/plugins/stylescombo/lang/oc.js
// static/generator/ckeditor/plugins/stylescombo/lang/pl.js
// static/generator/ckeditor/plugins/stylescombo/lang/pt-br.js
// static/generator/ckeditor/plugins/stylescombo/lang/pt.js
// static/generator/ckeditor/plugins/stylescombo/lang/ro.js
// static/generator/ckeditor/plugins/stylescombo/lang/ru.js
// static/generator/ckeditor/plugins/stylescombo/lang/si.js
// static/generator/ckeditor/plugins/stylescombo/lang/sk.js
// static/generator/ckeditor/plugins/stylescombo/lang/sl.js
// static/generator/ckeditor/plugins/stylescombo/lang/sq.js
// static/generator/ckeditor/plugins/stylescombo/lang/sr-latn.js
// static/generator/ckeditor/plugins/stylescombo/lang/sr.js
// static/generator/ckeditor/plugins/stylescombo/lang/sv.js
// static/generator/ckeditor/plugins/stylescombo/lang/th.js
// static/generator/ckeditor/plugins/stylescombo/lang/tr.js
// static/generator/ckeditor/plugins/stylescombo/lang/tt.js
// static/generator/ckeditor/plugins/stylescombo/lang/ug.js
// static/generator/ckeditor/plugins/stylescombo/lang/uk.js
// static/generator/ckeditor/plugins/stylescombo/lang/vi.js
// static/generator/ckeditor/plugins/stylescombo/lang/zh-cn.js
// static/generator/ckeditor/plugins/stylescombo/lang/zh.js
// static/generator/ckeditor/plugins/stylescombo/plugin.js
// static/generator/ckeditor/plugins/tab/plugin.js
// static/generator/ckeditor/plugins/table/dialogs/table.js
// static/generator/ckeditor/plugins/table/icons/hidpi/table.png
// static/generator/ckeditor/plugins/table/icons/table.png
// static/generator/ckeditor/plugins/table/lang/af.js
// static/generator/ckeditor/plugins/table/lang/ar.js
// static/generator/ckeditor/plugins/table/lang/az.js
// static/generator/ckeditor/plugins/table/lang/bg.js
// static/generator/ckeditor/plugins/table/lang/bn.js
// static/generator/ckeditor/plugins/table/lang/bs.js
// static/generator/ckeditor/plugins/table/lang/ca.js
// static/generator/ckeditor/plugins/table/lang/cs.js
// static/generator/ckeditor/plugins/table/lang/cy.js
// static/generator/ckeditor/plugins/table/lang/da.js
// static/generator/ckeditor/plugins/table/lang/de-ch.js
// static/generator/ckeditor/plugins/table/lang/de.js
// static/generator/ckeditor/plugins/table/lang/el.js
// static/generator/ckeditor/plugins/table/lang/en-au.js
// static/generator/ckeditor/plugins/table/lang/en-ca.js
// static/generator/ckeditor/plugins/table/lang/en-gb.js
// static/generator/ckeditor/plugins/table/lang/en.js
// static/generator/ckeditor/plugins/table/lang/eo.js
// static/generator/ckeditor/plugins/table/lang/es.js
// static/generator/ckeditor/plugins/table/lang/et.js
// static/generator/ckeditor/plugins/table/lang/eu.js
// static/generator/ckeditor/plugins/table/lang/fa.js
// static/generator/ckeditor/plugins/table/lang/fi.js
// static/generator/ckeditor/plugins/table/lang/fo.js
// static/generator/ckeditor/plugins/table/lang/fr-ca.js
// static/generator/ckeditor/plugins/table/lang/fr.js
// static/generator/ckeditor/plugins/table/lang/gl.js
// static/generator/ckeditor/plugins/table/lang/gu.js
// static/generator/ckeditor/plugins/table/lang/he.js
// static/generator/ckeditor/plugins/table/lang/hi.js
// static/generator/ckeditor/plugins/table/lang/hr.js
// static/generator/ckeditor/plugins/table/lang/hu.js
// static/generator/ckeditor/plugins/table/lang/id.js
// static/generator/ckeditor/plugins/table/lang/is.js
// static/generator/ckeditor/plugins/table/lang/it.js
// static/generator/ckeditor/plugins/table/lang/ja.js
// static/generator/ckeditor/plugins/table/lang/ka.js
// static/generator/ckeditor/plugins/table/lang/km.js
// static/generator/ckeditor/plugins/table/lang/ko.js
// static/generator/ckeditor/plugins/table/lang/ku.js
// static/generator/ckeditor/plugins/table/lang/lt.js
// static/generator/ckeditor/plugins/table/lang/lv.js
// static/generator/ckeditor/plugins/table/lang/mk.js
// static/generator/ckeditor/plugins/table/lang/mn.js
// static/generator/ckeditor/plugins/table/lang/ms.js
// static/generator/ckeditor/plugins/table/lang/nb.js
// static/generator/ckeditor/plugins/table/lang/nl.js
// static/generator/ckeditor/plugins/table/lang/no.js
// static/generator/ckeditor/plugins/table/lang/oc.js
// static/generator/ckeditor/plugins/table/lang/pl.js
// static/generator/ckeditor/plugins/table/lang/pt-br.js
// static/generator/ckeditor/plugins/table/lang/pt.js
// static/generator/ckeditor/plugins/table/lang/ro.js
// static/generator/ckeditor/plugins/table/lang/ru.js
// static/generator/ckeditor/plugins/table/lang/si.js
// static/generator/ckeditor/plugins/table/lang/sk.js
// static/generator/ckeditor/plugins/table/lang/sl.js
// static/generator/ckeditor/plugins/table/lang/sq.js
// static/generator/ckeditor/plugins/table/lang/sr-latn.js
// static/generator/ckeditor/plugins/table/lang/sr.js
// static/generator/ckeditor/plugins/table/lang/sv.js
// static/generator/ckeditor/plugins/table/lang/th.js
// static/generator/ckeditor/plugins/table/lang/tr.js
// static/generator/ckeditor/plugins/table/lang/tt.js
// static/generator/ckeditor/plugins/table/lang/ug.js
// static/generator/ckeditor/plugins/table/lang/uk.js
// static/generator/ckeditor/plugins/table/lang/vi.js
// static/generator/ckeditor/plugins/table/lang/zh-cn.js
// static/generator/ckeditor/plugins/table/lang/zh.js
// static/generator/ckeditor/plugins/table/plugin.js
// static/generator/ckeditor/plugins/tabletools/dialogs/tableCell.js
// static/generator/ckeditor/plugins/tabletools/plugin.js
// static/generator/ckeditor/plugins/templates/dialogs/templates.css
// static/generator/ckeditor/plugins/templates/dialogs/templates.js
// static/generator/ckeditor/plugins/templates/icons/hidpi/templates-rtl.png
// static/generator/ckeditor/plugins/templates/icons/hidpi/templates.png
// static/generator/ckeditor/plugins/templates/icons/templates-rtl.png
// static/generator/ckeditor/plugins/templates/icons/templates.png
// static/generator/ckeditor/plugins/templates/lang/af.js
// static/generator/ckeditor/plugins/templates/lang/ar.js
// static/generator/ckeditor/plugins/templates/lang/az.js
// static/generator/ckeditor/plugins/templates/lang/bg.js
// static/generator/ckeditor/plugins/templates/lang/bn.js
// static/generator/ckeditor/plugins/templates/lang/bs.js
// static/generator/ckeditor/plugins/templates/lang/ca.js
// static/generator/ckeditor/plugins/templates/lang/cs.js
// static/generator/ckeditor/plugins/templates/lang/cy.js
// static/generator/ckeditor/plugins/templates/lang/da.js
// static/generator/ckeditor/plugins/templates/lang/de-ch.js
// static/generator/ckeditor/plugins/templates/lang/de.js
// static/generator/ckeditor/plugins/templates/lang/el.js
// static/generator/ckeditor/plugins/templates/lang/en-au.js
// static/generator/ckeditor/plugins/templates/lang/en-ca.js
// static/generator/ckeditor/plugins/templates/lang/en-gb.js
// static/generator/ckeditor/plugins/templates/lang/en.js
// static/generator/ckeditor/plugins/templates/lang/eo.js
// static/generator/ckeditor/plugins/templates/lang/es.js
// static/generator/ckeditor/plugins/templates/lang/et.js
// static/generator/ckeditor/plugins/templates/lang/eu.js
// static/generator/ckeditor/plugins/templates/lang/fa.js
// static/generator/ckeditor/plugins/templates/lang/fi.js
// static/generator/ckeditor/plugins/templates/lang/fo.js
// static/generator/ckeditor/plugins/templates/lang/fr-ca.js
// static/generator/ckeditor/plugins/templates/lang/fr.js
// static/generator/ckeditor/plugins/templates/lang/gl.js
// static/generator/ckeditor/plugins/templates/lang/gu.js
// static/generator/ckeditor/plugins/templates/lang/he.js
// static/generator/ckeditor/plugins/templates/lang/hi.js
// static/generator/ckeditor/plugins/templates/lang/hr.js
// static/generator/ckeditor/plugins/templates/lang/hu.js
// static/generator/ckeditor/plugins/templates/lang/id.js
// static/generator/ckeditor/plugins/templates/lang/is.js
// static/generator/ckeditor/plugins/templates/lang/it.js
// static/generator/ckeditor/plugins/templates/lang/ja.js
// static/generator/ckeditor/plugins/templates/lang/ka.js
// static/generator/ckeditor/plugins/templates/lang/km.js
// static/generator/ckeditor/plugins/templates/lang/ko.js
// static/generator/ckeditor/plugins/templates/lang/ku.js
// static/generator/ckeditor/plugins/templates/lang/lt.js
// static/generator/ckeditor/plugins/templates/lang/lv.js
// static/generator/ckeditor/plugins/templates/lang/mk.js
// static/generator/ckeditor/plugins/templates/lang/mn.js
// static/generator/ckeditor/plugins/templates/lang/ms.js
// static/generator/ckeditor/plugins/templates/lang/nb.js
// static/generator/ckeditor/plugins/templates/lang/nl.js
// static/generator/ckeditor/plugins/templates/lang/no.js
// static/generator/ckeditor/plugins/templates/lang/oc.js
// static/generator/ckeditor/plugins/templates/lang/pl.js
// static/generator/ckeditor/plugins/templates/lang/pt-br.js
// static/generator/ckeditor/plugins/templates/lang/pt.js
// static/generator/ckeditor/plugins/templates/lang/ro.js
// static/generator/ckeditor/plugins/templates/lang/ru.js
// static/generator/ckeditor/plugins/templates/lang/si.js
// static/generator/ckeditor/plugins/templates/lang/sk.js
// static/generator/ckeditor/plugins/templates/lang/sl.js
// static/generator/ckeditor/plugins/templates/lang/sq.js
// static/generator/ckeditor/plugins/templates/lang/sr-latn.js
// static/generator/ckeditor/plugins/templates/lang/sr.js
// static/generator/ckeditor/plugins/templates/lang/sv.js
// static/generator/ckeditor/plugins/templates/lang/th.js
// static/generator/ckeditor/plugins/templates/lang/tr.js
// static/generator/ckeditor/plugins/templates/lang/tt.js
// static/generator/ckeditor/plugins/templates/lang/ug.js
// static/generator/ckeditor/plugins/templates/lang/uk.js
// static/generator/ckeditor/plugins/templates/lang/vi.js
// static/generator/ckeditor/plugins/templates/lang/zh-cn.js
// static/generator/ckeditor/plugins/templates/lang/zh.js
// static/generator/ckeditor/plugins/templates/plugin.js
// static/generator/ckeditor/plugins/templates/templates/default.js
// static/generator/ckeditor/plugins/templates/templates/images/template1.gif
// static/generator/ckeditor/plugins/templates/templates/images/template2.gif
// static/generator/ckeditor/plugins/templates/templates/images/template3.gif
// static/generator/ckeditor/plugins/toolbar/lang/af.js
// static/generator/ckeditor/plugins/toolbar/lang/ar.js
// static/generator/ckeditor/plugins/toolbar/lang/az.js
// static/generator/ckeditor/plugins/toolbar/lang/bg.js
// static/generator/ckeditor/plugins/toolbar/lang/bn.js
// static/generator/ckeditor/plugins/toolbar/lang/bs.js
// static/generator/ckeditor/plugins/toolbar/lang/ca.js
// static/generator/ckeditor/plugins/toolbar/lang/cs.js
// static/generator/ckeditor/plugins/toolbar/lang/cy.js
// static/generator/ckeditor/plugins/toolbar/lang/da.js
// static/generator/ckeditor/plugins/toolbar/lang/de-ch.js
// static/generator/ckeditor/plugins/toolbar/lang/de.js
// static/generator/ckeditor/plugins/toolbar/lang/el.js
// static/generator/ckeditor/plugins/toolbar/lang/en-au.js
// static/generator/ckeditor/plugins/toolbar/lang/en-ca.js
// static/generator/ckeditor/plugins/toolbar/lang/en-gb.js
// static/generator/ckeditor/plugins/toolbar/lang/en.js
// static/generator/ckeditor/plugins/toolbar/lang/eo.js
// static/generator/ckeditor/plugins/toolbar/lang/es.js
// static/generator/ckeditor/plugins/toolbar/lang/et.js
// static/generator/ckeditor/plugins/toolbar/lang/eu.js
// static/generator/ckeditor/plugins/toolbar/lang/fa.js
// static/generator/ckeditor/plugins/toolbar/lang/fi.js
// static/generator/ckeditor/plugins/toolbar/lang/fo.js
// static/generator/ckeditor/plugins/toolbar/lang/fr-ca.js
// static/generator/ckeditor/plugins/toolbar/lang/fr.js
// static/generator/ckeditor/plugins/toolbar/lang/gl.js
// static/generator/ckeditor/plugins/toolbar/lang/gu.js
// static/generator/ckeditor/plugins/toolbar/lang/he.js
// static/generator/ckeditor/plugins/toolbar/lang/hi.js
// static/generator/ckeditor/plugins/toolbar/lang/hr.js
// static/generator/ckeditor/plugins/toolbar/lang/hu.js
// static/generator/ckeditor/plugins/toolbar/lang/id.js
// static/generator/ckeditor/plugins/toolbar/lang/is.js
// static/generator/ckeditor/plugins/toolbar/lang/it.js
// static/generator/ckeditor/plugins/toolbar/lang/ja.js
// static/generator/ckeditor/plugins/toolbar/lang/ka.js
// static/generator/ckeditor/plugins/toolbar/lang/km.js
// static/generator/ckeditor/plugins/toolbar/lang/ko.js
// static/generator/ckeditor/plugins/toolbar/lang/ku.js
// static/generator/ckeditor/plugins/toolbar/lang/lt.js
// static/generator/ckeditor/plugins/toolbar/lang/lv.js
// static/generator/ckeditor/plugins/toolbar/lang/mk.js
// static/generator/ckeditor/plugins/toolbar/lang/mn.js
// static/generator/ckeditor/plugins/toolbar/lang/ms.js
// static/generator/ckeditor/plugins/toolbar/lang/nb.js
// static/generator/ckeditor/plugins/toolbar/lang/nl.js
// static/generator/ckeditor/plugins/toolbar/lang/no.js
// static/generator/ckeditor/plugins/toolbar/lang/oc.js
// static/generator/ckeditor/plugins/toolbar/lang/pl.js
// static/generator/ckeditor/plugins/toolbar/lang/pt-br.js
// static/generator/ckeditor/plugins/toolbar/lang/pt.js
// static/generator/ckeditor/plugins/toolbar/lang/ro.js
// static/generator/ckeditor/plugins/toolbar/lang/ru.js
// static/generator/ckeditor/plugins/toolbar/lang/si.js
// static/generator/ckeditor/plugins/toolbar/lang/sk.js
// static/generator/ckeditor/plugins/toolbar/lang/sl.js
// static/generator/ckeditor/plugins/toolbar/lang/sq.js
// static/generator/ckeditor/plugins/toolbar/lang/sr-latn.js
// static/generator/ckeditor/plugins/toolbar/lang/sr.js
// static/generator/ckeditor/plugins/toolbar/lang/sv.js
// static/generator/ckeditor/plugins/toolbar/lang/th.js
// static/generator/ckeditor/plugins/toolbar/lang/tr.js
// static/generator/ckeditor/plugins/toolbar/lang/tt.js
// static/generator/ckeditor/plugins/toolbar/lang/ug.js
// static/generator/ckeditor/plugins/toolbar/lang/uk.js
// static/generator/ckeditor/plugins/toolbar/lang/vi.js
// static/generator/ckeditor/plugins/toolbar/lang/zh-cn.js
// static/generator/ckeditor/plugins/toolbar/lang/zh.js
// static/generator/ckeditor/plugins/toolbar/plugin.js
// static/generator/ckeditor/plugins/toolbar/samples/toolbar.html
// static/generator/ckeditor/plugins/undo/dev/snapshot.html
// static/generator/ckeditor/plugins/undo/icons/hidpi/redo-rtl.png
// static/generator/ckeditor/plugins/undo/icons/hidpi/redo.png
// static/generator/ckeditor/plugins/undo/icons/hidpi/undo-rtl.png
// static/generator/ckeditor/plugins/undo/icons/hidpi/undo.png
// static/generator/ckeditor/plugins/undo/icons/redo-rtl.png
// static/generator/ckeditor/plugins/undo/icons/redo.png
// static/generator/ckeditor/plugins/undo/icons/undo-rtl.png
// static/generator/ckeditor/plugins/undo/icons/undo.png
// static/generator/ckeditor/plugins/undo/lang/af.js
// static/generator/ckeditor/plugins/undo/lang/ar.js
// static/generator/ckeditor/plugins/undo/lang/az.js
// static/generator/ckeditor/plugins/undo/lang/bg.js
// static/generator/ckeditor/plugins/undo/lang/bn.js
// static/generator/ckeditor/plugins/undo/lang/bs.js
// static/generator/ckeditor/plugins/undo/lang/ca.js
// static/generator/ckeditor/plugins/undo/lang/cs.js
// static/generator/ckeditor/plugins/undo/lang/cy.js
// static/generator/ckeditor/plugins/undo/lang/da.js
// static/generator/ckeditor/plugins/undo/lang/de-ch.js
// static/generator/ckeditor/plugins/undo/lang/de.js
// static/generator/ckeditor/plugins/undo/lang/el.js
// static/generator/ckeditor/plugins/undo/lang/en-au.js
// static/generator/ckeditor/plugins/undo/lang/en-ca.js
// static/generator/ckeditor/plugins/undo/lang/en-gb.js
// static/generator/ckeditor/plugins/undo/lang/en.js
// static/generator/ckeditor/plugins/undo/lang/eo.js
// static/generator/ckeditor/plugins/undo/lang/es.js
// static/generator/ckeditor/plugins/undo/lang/et.js
// static/generator/ckeditor/plugins/undo/lang/eu.js
// static/generator/ckeditor/plugins/undo/lang/fa.js
// static/generator/ckeditor/plugins/undo/lang/fi.js
// static/generator/ckeditor/plugins/undo/lang/fo.js
// static/generator/ckeditor/plugins/undo/lang/fr-ca.js
// static/generator/ckeditor/plugins/undo/lang/fr.js
// static/generator/ckeditor/plugins/undo/lang/gl.js
// static/generator/ckeditor/plugins/undo/lang/gu.js
// static/generator/ckeditor/plugins/undo/lang/he.js
// static/generator/ckeditor/plugins/undo/lang/hi.js
// static/generator/ckeditor/plugins/undo/lang/hr.js
// static/generator/ckeditor/plugins/undo/lang/hu.js
// static/generator/ckeditor/plugins/undo/lang/id.js
// static/generator/ckeditor/plugins/undo/lang/is.js
// static/generator/ckeditor/plugins/undo/lang/it.js
// static/generator/ckeditor/plugins/undo/lang/ja.js
// static/generator/ckeditor/plugins/undo/lang/ka.js
// static/generator/ckeditor/plugins/undo/lang/km.js
// static/generator/ckeditor/plugins/undo/lang/ko.js
// static/generator/ckeditor/plugins/undo/lang/ku.js
// static/generator/ckeditor/plugins/undo/lang/lt.js
// static/generator/ckeditor/plugins/undo/lang/lv.js
// static/generator/ckeditor/plugins/undo/lang/mk.js
// static/generator/ckeditor/plugins/undo/lang/mn.js
// static/generator/ckeditor/plugins/undo/lang/ms.js
// static/generator/ckeditor/plugins/undo/lang/nb.js
// static/generator/ckeditor/plugins/undo/lang/nl.js
// static/generator/ckeditor/plugins/undo/lang/no.js
// static/generator/ckeditor/plugins/undo/lang/oc.js
// static/generator/ckeditor/plugins/undo/lang/pl.js
// static/generator/ckeditor/plugins/undo/lang/pt-br.js
// static/generator/ckeditor/plugins/undo/lang/pt.js
// static/generator/ckeditor/plugins/undo/lang/ro.js
// static/generator/ckeditor/plugins/undo/lang/ru.js
// static/generator/ckeditor/plugins/undo/lang/si.js
// static/generator/ckeditor/plugins/undo/lang/sk.js
// static/generator/ckeditor/plugins/undo/lang/sl.js
// static/generator/ckeditor/plugins/undo/lang/sq.js
// static/generator/ckeditor/plugins/undo/lang/sr-latn.js
// static/generator/ckeditor/plugins/undo/lang/sr.js
// static/generator/ckeditor/plugins/undo/lang/sv.js
// static/generator/ckeditor/plugins/undo/lang/th.js
// static/generator/ckeditor/plugins/undo/lang/tr.js
// static/generator/ckeditor/plugins/undo/lang/tt.js
// static/generator/ckeditor/plugins/undo/lang/ug.js
// static/generator/ckeditor/plugins/undo/lang/uk.js
// static/generator/ckeditor/plugins/undo/lang/vi.js
// static/generator/ckeditor/plugins/undo/lang/zh-cn.js
// static/generator/ckeditor/plugins/undo/lang/zh.js
// static/generator/ckeditor/plugins/undo/plugin.js
// static/generator/ckeditor/plugins/widget/images/handle.png
// static/generator/ckeditor/plugins/wsc/LICENSE.md
// static/generator/ckeditor/plugins/wsc/README.js
// static/generator/ckeditor/plugins/wsc/README.md
// static/generator/ckeditor/plugins/wsc/dialogs/ciframe.html
// static/generator/ckeditor/plugins/wsc/dialogs/tmp.html
// static/generator/ckeditor/plugins/wsc/dialogs/tmpFrameset.html
// static/generator/ckeditor/plugins/wsc/dialogs/wsc.css
// static/generator/ckeditor/plugins/wsc/dialogs/wsc.js
// static/generator/ckeditor/plugins/wsc/dialogs/wsc_ie.js
// static/generator/ckeditor/plugins/wsc/icons/hidpi/spellchecker.png
// static/generator/ckeditor/plugins/wsc/icons/spellchecker.png
// static/generator/ckeditor/plugins/wsc/lang/af.js
// static/generator/ckeditor/plugins/wsc/lang/ar.js
// static/generator/ckeditor/plugins/wsc/lang/bg.js
// static/generator/ckeditor/plugins/wsc/lang/bn.js
// static/generator/ckeditor/plugins/wsc/lang/bs.js
// static/generator/ckeditor/plugins/wsc/lang/ca.js
// static/generator/ckeditor/plugins/wsc/lang/cs.js
// static/generator/ckeditor/plugins/wsc/lang/cy.js
// static/generator/ckeditor/plugins/wsc/lang/da.js
// static/generator/ckeditor/plugins/wsc/lang/de.js
// static/generator/ckeditor/plugins/wsc/lang/el.js
// static/generator/ckeditor/plugins/wsc/lang/en-au.js
// static/generator/ckeditor/plugins/wsc/lang/en-ca.js
// static/generator/ckeditor/plugins/wsc/lang/en-gb.js
// static/generator/ckeditor/plugins/wsc/lang/en.js
// static/generator/ckeditor/plugins/wsc/lang/eo.js
// static/generator/ckeditor/plugins/wsc/lang/es.js
// static/generator/ckeditor/plugins/wsc/lang/et.js
// static/generator/ckeditor/plugins/wsc/lang/eu.js
// static/generator/ckeditor/plugins/wsc/lang/fa.js
// static/generator/ckeditor/plugins/wsc/lang/fi.js
// static/generator/ckeditor/plugins/wsc/lang/fo.js
// static/generator/ckeditor/plugins/wsc/lang/fr-ca.js
// static/generator/ckeditor/plugins/wsc/lang/fr.js
// static/generator/ckeditor/plugins/wsc/lang/gl.js
// static/generator/ckeditor/plugins/wsc/lang/gu.js
// static/generator/ckeditor/plugins/wsc/lang/he.js
// static/generator/ckeditor/plugins/wsc/lang/hi.js
// static/generator/ckeditor/plugins/wsc/lang/hr.js
// static/generator/ckeditor/plugins/wsc/lang/hu.js
// static/generator/ckeditor/plugins/wsc/lang/is.js
// static/generator/ckeditor/plugins/wsc/lang/it.js
// static/generator/ckeditor/plugins/wsc/lang/ja.js
// static/generator/ckeditor/plugins/wsc/lang/ka.js
// static/generator/ckeditor/plugins/wsc/lang/km.js
// static/generator/ckeditor/plugins/wsc/lang/ko.js
// static/generator/ckeditor/plugins/wsc/lang/ku.js
// static/generator/ckeditor/plugins/wsc/lang/lt.js
// static/generator/ckeditor/plugins/wsc/lang/lv.js
// static/generator/ckeditor/plugins/wsc/lang/mk.js
// static/generator/ckeditor/plugins/wsc/lang/mn.js
// static/generator/ckeditor/plugins/wsc/lang/ms.js
// static/generator/ckeditor/plugins/wsc/lang/nb.js
// static/generator/ckeditor/plugins/wsc/lang/nl.js
// static/generator/ckeditor/plugins/wsc/lang/no.js
// static/generator/ckeditor/plugins/wsc/lang/pl.js
// static/generator/ckeditor/plugins/wsc/lang/pt-br.js
// static/generator/ckeditor/plugins/wsc/lang/pt.js
// static/generator/ckeditor/plugins/wsc/lang/ro.js
// static/generator/ckeditor/plugins/wsc/lang/ru.js
// static/generator/ckeditor/plugins/wsc/lang/sk.js
// static/generator/ckeditor/plugins/wsc/lang/sl.js
// static/generator/ckeditor/plugins/wsc/lang/sr-latn.js
// static/generator/ckeditor/plugins/wsc/lang/sr.js
// static/generator/ckeditor/plugins/wsc/lang/sv.js
// static/generator/ckeditor/plugins/wsc/lang/th.js
// static/generator/ckeditor/plugins/wsc/lang/tr.js
// static/generator/ckeditor/plugins/wsc/lang/ug.js
// static/generator/ckeditor/plugins/wsc/lang/uk.js
// static/generator/ckeditor/plugins/wsc/lang/vi.js
// static/generator/ckeditor/plugins/wsc/lang/zh-cn.js
// static/generator/ckeditor/plugins/wsc/lang/zh.js
// static/generator/ckeditor/plugins/wsc/plugin.js
// static/generator/ckeditor/plugins/wsc/skins/moono-lisa/wsc.css
// static/generator/ckeditor/plugins/wysiwygarea/plugin.js
// static/generator/ckeditor/plugins/wysiwygarea/samples/fullpage.html
// static/generator/ckeditor/samples/ajax.html
// static/generator/ckeditor/samples/api.html
// static/generator/ckeditor/samples/appendto.html
// static/generator/ckeditor/samples/assets/inlineall/logo.png
// static/generator/ckeditor/samples/assets/outputxhtml/outputxhtml.css
// static/generator/ckeditor/samples/assets/posteddata.php
// static/generator/ckeditor/samples/assets/sample.css
// static/generator/ckeditor/samples/assets/sample.jpg
// static/generator/ckeditor/samples/assets/uilanguages/languages.js
// static/generator/ckeditor/samples/css/samples.css
// static/generator/ckeditor/samples/datafiltering.html
// static/generator/ckeditor/samples/debug.log
// static/generator/ckeditor/samples/divreplace.html
// static/generator/ckeditor/samples/img/github-top.png
// static/generator/ckeditor/samples/img/header-bg.png
// static/generator/ckeditor/samples/img/header-separator.png
// static/generator/ckeditor/samples/img/logo.png
// static/generator/ckeditor/samples/img/navigation-tip.png
// static/generator/ckeditor/samples/index.html
// static/generator/ckeditor/samples/inlineall.html
// static/generator/ckeditor/samples/inlinebycode.html
// static/generator/ckeditor/samples/inlinetextarea.html
// static/generator/ckeditor/samples/jquery.html
// static/generator/ckeditor/samples/js/sample.js
// static/generator/ckeditor/samples/js/sf.js
// static/generator/ckeditor/samples/old/ajax.html
// static/generator/ckeditor/samples/old/api.html
// static/generator/ckeditor/samples/old/appendto.html
// static/generator/ckeditor/samples/old/assets/inlineall/logo.png
// static/generator/ckeditor/samples/old/assets/outputxhtml/outputxhtml.css
// static/generator/ckeditor/samples/old/assets/posteddata.php
// static/generator/ckeditor/samples/old/assets/sample.jpg
// static/generator/ckeditor/samples/old/assets/uilanguages/languages.js
// static/generator/ckeditor/samples/old/datafiltering.html
// static/generator/ckeditor/samples/old/dialog/assets/my_dialog.js
// static/generator/ckeditor/samples/old/dialog/dialog.html
// static/generator/ckeditor/samples/old/divreplace.html
// static/generator/ckeditor/samples/old/enterkey/enterkey.html
// static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.fla
// static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.swf
// static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/swfobject.js
// static/generator/ckeditor/samples/old/htmlwriter/outputforflash.html
// static/generator/ckeditor/samples/old/htmlwriter/outputhtml.html
// static/generator/ckeditor/samples/old/index.html
// static/generator/ckeditor/samples/old/inlineall.html
// static/generator/ckeditor/samples/old/inlinebycode.html
// static/generator/ckeditor/samples/old/inlinetextarea.html
// static/generator/ckeditor/samples/old/jquery.html
// static/generator/ckeditor/samples/old/magicline/magicline.html
// static/generator/ckeditor/samples/old/readonly.html
// static/generator/ckeditor/samples/old/replacebyclass.html
// static/generator/ckeditor/samples/old/replacebycode.html
// static/generator/ckeditor/samples/old/sample.css
// static/generator/ckeditor/samples/old/sample.js
// static/generator/ckeditor/samples/old/sample_posteddata.php
// static/generator/ckeditor/samples/old/tabindex.html
// static/generator/ckeditor/samples/old/toolbar/toolbar.html
// static/generator/ckeditor/samples/old/uicolor.html
// static/generator/ckeditor/samples/old/uilanguages.html
// static/generator/ckeditor/samples/old/wysiwygarea/fullpage.html
// static/generator/ckeditor/samples/old/xhtmlstyle.html
// static/generator/ckeditor/samples/plugins/dialog/assets/my_dialog.js
// static/generator/ckeditor/samples/plugins/dialog/dialog.html
// static/generator/ckeditor/samples/plugins/enterkey/enterkey.html
// static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/outputforflash.fla
// static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/outputforflash.swf
// static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/swfobject.js
// static/generator/ckeditor/samples/plugins/htmlwriter/outputforflash.html
// static/generator/ckeditor/samples/plugins/htmlwriter/outputhtml.html
// static/generator/ckeditor/samples/plugins/magicline/magicline.html
// static/generator/ckeditor/samples/plugins/toolbar/toolbar.html
// static/generator/ckeditor/samples/plugins/wysiwygarea/fullpage.html
// static/generator/ckeditor/samples/readonly.html
// static/generator/ckeditor/samples/replacebyclass.html
// static/generator/ckeditor/samples/replacebycode.html
// static/generator/ckeditor/samples/sample.css
// static/generator/ckeditor/samples/sample.js
// static/generator/ckeditor/samples/sample_posteddata.php
// static/generator/ckeditor/samples/tabindex.html
// static/generator/ckeditor/samples/toolbarconfigurator/bender.js
// static/generator/ckeditor/samples/toolbarconfigurator/css/fontello.css
// static/generator/ckeditor/samples/toolbarconfigurator/font/LICENSE.txt
// static/generator/ckeditor/samples/toolbarconfigurator/font/config.json
// static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.eot
// static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.svg
// static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.ttf
// static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.woff
// static/generator/ckeditor/samples/toolbarconfigurator/index.html
// static/generator/ckeditor/samples/toolbarconfigurator/js/abstracttoolbarmodifier.js
// static/generator/ckeditor/samples/toolbarconfigurator/js/fulltoolbareditor.js
// static/generator/ckeditor/samples/toolbarconfigurator/js/toolbarmodifier.js
// static/generator/ckeditor/samples/toolbarconfigurator/js/toolbartextmodifier.js
// static/generator/ckeditor/samples/toolbarconfigurator/less/base.less
// static/generator/ckeditor/samples/toolbarconfigurator/less/toolbarmodifier.less
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/LICENSE
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/README.md
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.css
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.js
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/javascript.js
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/neo.css
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.css
// static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.js
// static/generator/ckeditor/samples/toolbarconfigurator/package.json
// static/generator/ckeditor/samples/toolbarconfigurator/tests/one.js
// static/generator/ckeditor/samples/uicolor.html
// static/generator/ckeditor/samples/uilanguages.html
// static/generator/ckeditor/samples/xhtmlstyle.html
// static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie7.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie8.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_iequirks.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_opera.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/editor.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_gecko.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie7.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie8.css
// static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_iequirks.css
// static/generator/ckeditor/skins/bootstrapck/dev/icons16.svg
// static/generator/ckeditor/skins/bootstrapck/dev/icons32.svg
// static/generator/ckeditor/skins/bootstrapck/dev/locations.json
// static/generator/ckeditor/skins/bootstrapck/dialog.css
// static/generator/ckeditor/skins/bootstrapck/dialog_ie.css
// static/generator/ckeditor/skins/bootstrapck/dialog_ie7.css
// static/generator/ckeditor/skins/bootstrapck/dialog_ie8.css
// static/generator/ckeditor/skins/bootstrapck/dialog_iequirks.css
// static/generator/ckeditor/skins/bootstrapck/dialog_opera.css
// static/generator/ckeditor/skins/bootstrapck/editor.css
// static/generator/ckeditor/skins/bootstrapck/editor_gecko.css
// static/generator/ckeditor/skins/bootstrapck/editor_ie.css
// static/generator/ckeditor/skins/bootstrapck/editor_ie7.css
// static/generator/ckeditor/skins/bootstrapck/editor_ie8.css
// static/generator/ckeditor/skins/bootstrapck/editor_iequirks.css
// static/generator/ckeditor/skins/bootstrapck/icons.png
// static/generator/ckeditor/skins/bootstrapck/icons_hidpi.png
// static/generator/ckeditor/skins/bootstrapck/images/arrow.png
// static/generator/ckeditor/skins/bootstrapck/images/close.png
// static/generator/ckeditor/skins/bootstrapck/images/hidpi/close.png
// static/generator/ckeditor/skins/bootstrapck/images/hidpi/lock-open.png
// static/generator/ckeditor/skins/bootstrapck/images/hidpi/lock.png
// static/generator/ckeditor/skins/bootstrapck/images/hidpi/refresh.png
// static/generator/ckeditor/skins/bootstrapck/images/lock-open.png
// static/generator/ckeditor/skins/bootstrapck/images/lock.png
// static/generator/ckeditor/skins/bootstrapck/images/refresh.png
// static/generator/ckeditor/skins/bootstrapck/readme.md
// static/generator/ckeditor/skins/bootstrapck/sample/bootstrapck-sample.html
// static/generator/ckeditor/skins/bootstrapck/sample/css/bootstrapck-sample.css
// static/generator/ckeditor/skins/bootstrapck/sample/js/analytics.js
// static/generator/ckeditor/skins/bootstrapck/sample/js/jquery-1.11.0.min.js
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/gecko/editor_gecko.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie/dialog_ie.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie/editor_ie.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie7/dialog_ie7.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie7/editor_ie7.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie8/dialog_ie8.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie8/editor_ie8.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/iequirks/dialog_iequirks.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/iequirks/editor_iequirks.scss
// static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/opera/dialog_opera.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_colorpanel.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_elementspath.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_mainui.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_menu.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_panel.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_presets.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_reset.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_richcombo.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/_toolbar.scss
// static/generator/ckeditor/skins/bootstrapck/scss/components/editor.scss
// static/generator/ckeditor/skins/bootstrapck/scss/config/_colors.scss
// static/generator/ckeditor/skins/bootstrapck/scss/config/_config.scss
// static/generator/ckeditor/skins/bootstrapck/scss/config/_defaults.scss
// static/generator/ckeditor/skins/bootstrapck/scss/dialog/dialog.scss
// static/generator/ckeditor/skins/bootstrapck/skin.js
// static/generator/ckeditor/skins/moono/dialog.css
// static/generator/ckeditor/skins/moono/dialog_ie.css
// static/generator/ckeditor/skins/moono/dialog_ie7.css
// static/generator/ckeditor/skins/moono/dialog_ie8.css
// static/generator/ckeditor/skins/moono/dialog_iequirks.css
// static/generator/ckeditor/skins/moono/dialog_opera.css
// static/generator/ckeditor/skins/moono/editor.css
// static/generator/ckeditor/skins/moono/editor_gecko.css
// static/generator/ckeditor/skins/moono/editor_ie.css
// static/generator/ckeditor/skins/moono/editor_ie7.css
// static/generator/ckeditor/skins/moono/editor_ie8.css
// static/generator/ckeditor/skins/moono/editor_iequirks.css
// static/generator/ckeditor/skins/moono/icons.png
// static/generator/ckeditor/skins/moono/icons_hidpi.png
// static/generator/ckeditor/skins/moono/images/arrow.png
// static/generator/ckeditor/skins/moono/images/close.png
// static/generator/ckeditor/skins/moono/images/hidpi/close.png
// static/generator/ckeditor/skins/moono/images/hidpi/lock-open.png
// static/generator/ckeditor/skins/moono/images/hidpi/lock.png
// static/generator/ckeditor/skins/moono/images/hidpi/refresh.png
// static/generator/ckeditor/skins/moono/images/lock-open.png
// static/generator/ckeditor/skins/moono/images/lock.png
// static/generator/ckeditor/skins/moono/images/refresh.png
// static/generator/ckeditor/skins/moono/readme.md
// static/generator/ckeditor/skins/moono-lisa/dialog.css
// static/generator/ckeditor/skins/moono-lisa/dialog_ie.css
// static/generator/ckeditor/skins/moono-lisa/dialog_ie8.css
// static/generator/ckeditor/skins/moono-lisa/dialog_iequirks.css
// static/generator/ckeditor/skins/moono-lisa/editor.css
// static/generator/ckeditor/skins/moono-lisa/editor_gecko.css
// static/generator/ckeditor/skins/moono-lisa/editor_ie.css
// static/generator/ckeditor/skins/moono-lisa/editor_ie8.css
// static/generator/ckeditor/skins/moono-lisa/editor_iequirks.css
// static/generator/ckeditor/skins/moono-lisa/icons.png
// static/generator/ckeditor/skins/moono-lisa/icons_hidpi.png
// static/generator/ckeditor/skins/moono-lisa/images/arrow.png
// static/generator/ckeditor/skins/moono-lisa/images/close.png
// static/generator/ckeditor/skins/moono-lisa/images/hidpi/close.png
// static/generator/ckeditor/skins/moono-lisa/images/hidpi/lock-open.png
// static/generator/ckeditor/skins/moono-lisa/images/hidpi/lock.png
// static/generator/ckeditor/skins/moono-lisa/images/hidpi/refresh.png
// static/generator/ckeditor/skins/moono-lisa/images/lock-open.png
// static/generator/ckeditor/skins/moono-lisa/images/lock.png
// static/generator/ckeditor/skins/moono-lisa/images/refresh.png
// static/generator/ckeditor/skins/moono-lisa/images/spinner.gif
// static/generator/ckeditor/skins/moono-lisa/readme.md
// static/generator/ckeditor/styles.js
// static/generator/js/code-generator.js
// static/generator/js/grammar.txt
// static/generator/js/jquery-ui.js
// static/generator/js/jquery-ui_orig.js
// static/generator/js/jquery.ui.touch-punch.min.js
// static/generator/js/libs/jquery-3.2.1.min.js
// static/generator/js/libs/js-class.js
// static/generator/js/libs/peg-0.10.0.js
// static/generator/js/main.js
// static/generator/js/parser.html
// static/generator/js/parser.js
// static/generator/js/scripts.js
// static/generator/js/scripts_orig.js
// static/generator/style.css
// static/generator.html
// static/generator_orig.html
// static/gov_birth_statement.html
// static/gov_citizens.html
// static/gov_create_budget.html
// static/gov_currency_exchange.html
// static/gov_date_death.html
// static/gov_register_citizen.html
// static/gov_register_property.html
// static/gov_settings.html
// static/gov_shares_exchange.html
// static/gov_taxes.html
// static/health_buy_medicament.html
// static/health_entries_clinic.html
// static/health_facility.html
// static/health_immunization_records.html
// static/health_medical_record.html
// static/health_medication_records.html
// static/health_patient.html
// static/health_procedure.html
// static/health_symptom.html
// static/health_vital_signs.html
// static/history.html
// static/html_elements.html
// static/img/US.svg
// static/img/apps/ava.png
// static/img/apps/business.png
// static/img/apps/elections.jpg
// static/img/apps/euro.jpg
// static/img/apps/forex.jpg
// static/img/apps/forex.png
// static/img/apps/messenger.png
// static/img/apps/money.jpg
// static/img/apps/money.png
// static/img/apps/property.jpg
// static/img/avatar.svg
// static/img/back.svg
// static/img/bg.jpg
// static/img/bg.png
// static/img/bg1.jpg
// static/img/bg10.jpg
// static/img/bg2.jpg
// static/img/bg3.jpg
// static/img/bg4.jpg
// static/img/bg5.jpg
// static/img/bg6.jpg
// static/img/bg7.jpg
// static/img/bg8.jpg
// static/img/bg9.jpg
// static/img/clear.png
// static/img/dummy.png
// static/img/favicon.ico
// static/img/installed.png
// static/img/loading.gif
// static/img/lock-bg.jpg
// static/img/logo.png
// static/img/logo.svg
// static/img/logo_null.svg
// static/img/logo_ok.svg
// static/img/main_loader.gif
// static/img/marker_red.png
// static/img/mb-sample.jpg
// static/img/mockup.png
// static/img/no_map.png
// static/img/noflag.svg
// static/img/profile-bg.jpg
// static/img/radio_icon.png
// static/img/sort_asc.png
// static/img/sort_asc_disabled.png
// static/img/sort_both.png
// static/img/sort_desc.png
// static/img/sort_desc_disabled.png
// static/img/spacer.gif
// static/img/squares.gif
// static/img/user/01.jpg
// static/img/user/02.jpg
// static/img/user/03.jpg
// static/img/user/04.jpg
// static/img/user/05.jpg
// static/img/user/06.jpg
// static/img/user/07.jpg
// static/img/user/08.jpg
// static/img/user/09.jpg
// static/img/user/10.jpg
// static/img/user/11.jpg
// static/img/user/12.jpg
// static/img/user/13.jpg
// static/index.html
// static/install_step_0.html
// static/install_step_1.html
// static/interface.html
// static/js/app.js
// static/js/elliptic.min.js
// static/js/index.js
// static/js/keys.js
// static/js/map.js
// static/js/photoEditor/editor.js
// static/js/triangles.js
// static/lang/flags/flags.png
// static/lang/gb.js
// static/lang/nl.js
// static/languages.html
// static/list_of_tables.html
// static/login.html
// static/menu.html
// static/modal_anonym.html
// static/modal_avatar.html
// static/modal_block_detail.html
// static/modal_map.html
// static/modal_signature.html
// static/new_state.html
// static/new_table.html
// static/page_template.html
// static/pass.html
// static/psw.html
// static/restore_access.html
// static/restore_access_active.html
// static/row_history.html
// static/schema.sql
// static/show_table.html
// static/signatures.html
// static/signatures_list.html
// static/signatures_new.html
// static/smart_request_citizen.html
// static/state_laws.html
// static/state_parameters.html
// static/system_info.html
// static/test.html
// static/testnet.html
// static/testnet_register.html
// static/tx_btncont.html
// static/tx_button.html
// static/tx_form.html
// static/updating_blockchain.html
// static/upgrade.html
// static/wallet_history.html
// static/widgets.html
// DO NOT EDIT!

package static

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
)

// bindataRead reads the given file from disk. It returns an error on failure.
func bindataRead(path, name string) ([]byte, error) {
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset %s at %s: %v", name, path, err)
	}
	return buf, err
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

// staticIdeaCopyrightProfiles_settingsXml reads file data from disk. It returns an error on failure.
func staticIdeaCopyrightProfiles_settingsXml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\.idea\\copyright\\profiles_settings.xml"
	name := "static/.idea/copyright/profiles_settings.xml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticIdeaModulesXml reads file data from disk. It returns an error on failure.
func staticIdeaModulesXml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\.idea\\modules.xml"
	name := "static/.idea/modules.xml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticIdeaStaticIml reads file data from disk. It returns an error on failure.
func staticIdeaStaticIml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\.idea\\static.iml"
	name := "static/.idea/static.iml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticIdeaWorkspaceXml reads file data from disk. It returns an error on failure.
func staticIdeaWorkspaceXml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\.idea\\workspace.xml"
	name := "static/.idea/workspace.xml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// static1block reads file data from disk. It returns an error on failure.
func static1block() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\1block"
	name := "static/1block"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGlobalTpl reads file data from disk. It returns an error on failure.
func staticGlobalTpl() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\Global.tpl"
	name := "static/Global.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticAccountsHtml reads file data from disk. It returns an error on failure.
func staticAccountsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\accounts.html"
	name := "static/accounts.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticAlert_successHtml reads file data from disk. It returns an error on failure.
func staticAlert_successHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\alert_success.html"
	name := "static/alert_success.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticAnonym_money_transferHtml reads file data from disk. It returns an error on failure.
func staticAnonym_money_transferHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\anonym_money_transfer.html"
	name := "static/anonym_money_transfer.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticApp_catalogHtml reads file data from disk. It returns an error on failure.
func staticApp_catalogHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\app_catalog.html"
	name := "static/app_catalog.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticApp_templateHtml reads file data from disk. It returns an error on failure.
func staticApp_templateHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\app_template.html"
	name := "static/app_template.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticBackupHtml reads file data from disk. It returns an error on failure.
func staticBackupHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\backup.html"
	name := "static/backup.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticBasicTpl reads file data from disk. It returns an error on failure.
func staticBasicTpl() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\basic.tpl"
	name := "static/basic.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticBetaHtml reads file data from disk. It returns an error on failure.
func staticBetaHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\beta.html"
	name := "static/beta.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticBlock_explorerHtml reads file data from disk. It returns an error on failure.
func staticBlock_explorerHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\block_explorer.html"
	name := "static/block_explorer.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticBtcHtml reads file data from disk. It returns an error on failure.
func staticBtcHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\btc.html"
	name := "static/btc.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_citizensHtml reads file data from disk. It returns an error on failure.
func staticCb_citizensHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_citizens.html"
	name := "static/cb_citizens.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_citizens_new_userHtml reads file data from disk. It returns an error on failure.
func staticCb_citizens_new_userHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_citizens_new_user.html"
	name := "static/cb_citizens_new_user.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_citizens_requests_foreignersHtml reads file data from disk. It returns an error on failure.
func staticCb_citizens_requests_foreignersHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_citizens_requests_foreigners.html"
	name := "static/cb_citizens_requests_foreigners.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_currency_exchangeHtml reads file data from disk. It returns an error on failure.
func staticCb_currency_exchangeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_currency_exchange.html"
	name := "static/cb_currency_exchange.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_delegateHtml reads file data from disk. It returns an error on failure.
func staticCb_delegateHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_delegate.html"
	name := "static/cb_delegate.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_emission_accountHtml reads file data from disk. It returns an error on failure.
func staticCb_emission_accountHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_emission_account.html"
	name := "static/cb_emission_account.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_emission_fixed_amountHtml reads file data from disk. It returns an error on failure.
func staticCb_emission_fixed_amountHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_emission_fixed_amount.html"
	name := "static/cb_emission_fixed_amount.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_emission_proportionalHtml reads file data from disk. It returns an error on failure.
func staticCb_emission_proportionalHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_emission_proportional.html"
	name := "static/cb_emission_proportional.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_new_representativeHtml reads file data from disk. It returns an error on failure.
func staticCb_new_representativeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_new_representative.html"
	name := "static/cb_new_representative.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_representative_detailsHtml reads file data from disk. It returns an error on failure.
func staticCb_representative_detailsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_representative_details.html"
	name := "static/cb_representative_details.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_representativesHtml reads file data from disk. It returns an error on failure.
func staticCb_representativesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_representatives.html"
	name := "static/cb_representatives.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCb_select_emissionHtml reads file data from disk. It returns an error on failure.
func staticCb_select_emissionHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\cb_select_emission.html"
	name := "static/cb_select_emission.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticChange_node_keyHtml reads file data from disk. It returns an error on failure.
func staticChange_node_keyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\change_node_key.html"
	name := "static/change_node_key.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticChange_state_smart_lawsHtml reads file data from disk. It returns an error on failure.
func staticChange_state_smart_lawsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\change_state_smart_laws.html"
	name := "static/change_state_smart_laws.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCheck_citizen_statusHtml reads file data from disk. It returns an error on failure.
func staticCheck_citizen_statusHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\check_citizen_status.html"
	name := "static/check_citizen_status.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_admission_high_schoolHtml reads file data from disk. It returns an error on failure.
func staticCitizen_admission_high_schoolHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_admission_high_school.html"
	name := "static/citizen_admission_high_school.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_bill_paymentHtml reads file data from disk. It returns an error on failure.
func staticCitizen_bill_paymentHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_bill_payment.html"
	name := "static/citizen_bill_payment.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_divorceHtml reads file data from disk. It returns an error on failure.
func staticCitizen_divorceHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_divorce.html"
	name := "static/citizen_divorce.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_inheritanceHtml reads file data from disk. It returns an error on failure.
func staticCitizen_inheritanceHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_inheritance.html"
	name := "static/citizen_inheritance.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_marriage_contractHtml reads file data from disk. It returns an error on failure.
func staticCitizen_marriage_contractHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_marriage_contract.html"
	name := "static/citizen_marriage_contract.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_marriage_registrationHtml reads file data from disk. It returns an error on failure.
func staticCitizen_marriage_registrationHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_marriage_registration.html"
	name := "static/citizen_marriage_registration.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_money_transferHtml reads file data from disk. It returns an error on failure.
func staticCitizen_money_transferHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_money_transfer.html"
	name := "static/citizen_money_transfer.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_new_companyHtml reads file data from disk. It returns an error on failure.
func staticCitizen_new_companyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_new_company.html"
	name := "static/citizen_new_company.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_political_partyHtml reads file data from disk. It returns an error on failure.
func staticCitizen_political_partyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_political_party.html"
	name := "static/citizen_political_party.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_propertyHtml reads file data from disk. It returns an error on failure.
func staticCitizen_propertyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_property.html"
	name := "static/citizen_property.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCitizen_rule_detailsHtml reads file data from disk. It returns an error on failure.
func staticCitizen_rule_detailsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\citizen_rule_details.html"
	name := "static/citizen_rule_details.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_application_purchaseHtml reads file data from disk. It returns an error on failure.
func staticCompany_application_purchaseHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_application_purchase.html"
	name := "static/company_application_purchase.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_contractHtml reads file data from disk. It returns an error on failure.
func staticCompany_contractHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_contract.html"
	name := "static/company_contract.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_crowdfundingHtml reads file data from disk. It returns an error on failure.
func staticCompany_crowdfundingHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_crowdfunding.html"
	name := "static/company_crowdfunding.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_currency_exchangeHtml reads file data from disk. It returns an error on failure.
func staticCompany_currency_exchangeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_currency_exchange.html"
	name := "static/company_currency_exchange.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_customhouseHtml reads file data from disk. It returns an error on failure.
func staticCompany_customhouseHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_customhouse.html"
	name := "static/company_customhouse.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_new_companyHtml reads file data from disk. It returns an error on failure.
func staticCompany_new_companyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_new_company.html"
	name := "static/company_new_company.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_new_goodHtml reads file data from disk. It returns an error on failure.
func staticCompany_new_goodHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_new_good.html"
	name := "static/company_new_good.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_new_itemHtml reads file data from disk. It returns an error on failure.
func staticCompany_new_itemHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_new_item.html"
	name := "static/company_new_item.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_new_orderHtml reads file data from disk. It returns an error on failure.
func staticCompany_new_orderHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_new_order.html"
	name := "static/company_new_order.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_new_sharesHtml reads file data from disk. It returns an error on failure.
func staticCompany_new_sharesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_new_shares.html"
	name := "static/company_new_shares.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_offer_sellerHtml reads file data from disk. It returns an error on failure.
func staticCompany_offer_sellerHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_offer_seller.html"
	name := "static/company_offer_seller.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_offer_transportHtml reads file data from disk. It returns an error on failure.
func staticCompany_offer_transportHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_offer_transport.html"
	name := "static/company_offer_transport.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_select_transportHtml reads file data from disk. It returns an error on failure.
func staticCompany_select_transportHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_select_transport.html"
	name := "static/company_select_transport.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_shares_exchangeHtml reads file data from disk. It returns an error on failure.
func staticCompany_shares_exchangeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_shares_exchange.html"
	name := "static/company_shares_exchange.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCompany_smart_contractsHtml reads file data from disk. It returns an error on failure.
func staticCompany_smart_contractsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\company_smart_contracts.html"
	name := "static/company_smart_contracts.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticContractsHtml reads file data from disk. It returns an error on failure.
func staticContractsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\contracts.html"
	name := "static/contracts.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCountriesCountriesJson reads file data from disk. It returns an error on failure.
func staticCountriesCountriesJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\countries\\countries.json"
	name := "static/countries/countries.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCountriesFlagsPng reads file data from disk. It returns an error on failure.
func staticCountriesFlagsPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\countries\\flags.png"
	name := "static/countries/flags.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCountriesMmPng reads file data from disk. It returns an error on failure.
func staticCountriesMmPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\countries\\mm.png"
	name := "static/countries/mm.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCountriesNo_citizenshipPng reads file data from disk. It returns an error on failure.
func staticCountriesNo_citizenshipPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\countries\\no_citizenship.png"
	name := "static/countries/no_citizenship.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCountupHtml reads file data from disk. It returns an error on failure.
func staticCountupHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\countup.html"
	name := "static/countup.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticCssStyleCss reads file data from disk. It returns an error on failure.
func staticCssStyleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\css\\style.css"
	name := "static/css/style.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDashboard_anonymHtml reads file data from disk. It returns an error on failure.
func staticDashboard_anonymHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\dashboard_anonym.html"
	name := "static/dashboard_anonym.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDashboard_cbHtml reads file data from disk. It returns an error on failure.
func staticDashboard_cbHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\dashboard_cb.html"
	name := "static/dashboard_cb.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDashboard_companyHtml reads file data from disk. It returns an error on failure.
func staticDashboard_companyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\dashboard_company.html"
	name := "static/dashboard_company.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDashboard_govHtml reads file data from disk. It returns an error on failure.
func staticDashboard_govHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\dashboard_gov.html"
	name := "static/dashboard_gov.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDashboard_healthHtml reads file data from disk. It returns an error on failure.
func staticDashboard_healthHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\dashboard_health.html"
	name := "static/dashboard_health.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDataEntries_doctorJson reads file data from disk. It returns an error on failure.
func staticDataEntries_doctorJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\data\\entries_doctor.json"
	name := "static/data/entries_doctor.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDataImmunizationsJson reads file data from disk. It returns an error on failure.
func staticDataImmunizationsJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\data\\immunizations.json"
	name := "static/data/immunizations.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDataMedicationJson reads file data from disk. It returns an error on failure.
func staticDataMedicationJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\data\\medication.json"
	name := "static/data/medication.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDataPatientsJson reads file data from disk. It returns an error on failure.
func staticDataPatientsJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\data\\patients.json"
	name := "static/data/patients.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticDescriptionTpl reads file data from disk. It returns an error on failure.
func staticDescriptionTpl() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\description.tpl"
	name := "static/description.tpl"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_columnHtml reads file data from disk. It returns an error on failure.
func staticEdit_columnHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_column.html"
	name := "static/edit_column.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_contractHtml reads file data from disk. It returns an error on failure.
func staticEdit_contractHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_contract.html"
	name := "static/edit_contract.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_languageHtml reads file data from disk. It returns an error on failure.
func staticEdit_languageHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_language.html"
	name := "static/edit_language.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_menuHtml reads file data from disk. It returns an error on failure.
func staticEdit_menuHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_menu.html"
	name := "static/edit_menu.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_pageHtml reads file data from disk. It returns an error on failure.
func staticEdit_pageHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_page.html"
	name := "static/edit_page.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_signatureHtml reads file data from disk. It returns an error on failure.
func staticEdit_signatureHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_signature.html"
	name := "static/edit_signature.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_state_parametersHtml reads file data from disk. It returns an error on failure.
func staticEdit_state_parametersHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_state_parameters.html"
	name := "static/edit_state_parameters.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_tableHtml reads file data from disk. It returns an error on failure.
func staticEdit_tableHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_table.html"
	name := "static/edit_table.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticEdit_walletHtml reads file data from disk. It returns an error on failure.
func staticEdit_walletHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\edit_wallet.html"
	name := "static/edit_wallet.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticExport_tplHtml reads file data from disk. It returns an error on failure.
func staticExport_tplHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\export_tpl.html"
	name := "static/export_tpl.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsFontawesomeOtf reads file data from disk. It returns an error on failure.
func staticFontsFontawesomeOtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\FontAwesome.otf"
	name := "static/fonts/FontAwesome.otf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproBoldEot reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproBoldEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Bold.eot"
	name := "static/fonts/PFSquareSansPro-Bold.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproBoldSvg reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproBoldSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Bold.svg"
	name := "static/fonts/PFSquareSansPro-Bold.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproBoldTtf reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproBoldTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Bold.ttf"
	name := "static/fonts/PFSquareSansPro-Bold.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproBoldWoff reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproBoldWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Bold.woff"
	name := "static/fonts/PFSquareSansPro-Bold.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproBoldWoff2 reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproBoldWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Bold.woff2"
	name := "static/fonts/PFSquareSansPro-Bold.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproLightEot reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproLightEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Light.eot"
	name := "static/fonts/PFSquareSansPro-Light.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproLightSvg reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproLightSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Light.svg"
	name := "static/fonts/PFSquareSansPro-Light.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproLightTtf reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproLightTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Light.ttf"
	name := "static/fonts/PFSquareSansPro-Light.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproLightWoff reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproLightWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Light.woff"
	name := "static/fonts/PFSquareSansPro-Light.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproLightWoff2 reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproLightWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Light.woff2"
	name := "static/fonts/PFSquareSansPro-Light.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproMediumEot reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproMediumEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Medium.eot"
	name := "static/fonts/PFSquareSansPro-Medium.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproMediumSvg reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproMediumSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Medium.svg"
	name := "static/fonts/PFSquareSansPro-Medium.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproMediumTtf reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproMediumTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Medium.ttf"
	name := "static/fonts/PFSquareSansPro-Medium.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproMediumWoff reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproMediumWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Medium.woff"
	name := "static/fonts/PFSquareSansPro-Medium.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproMediumWoff2 reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproMediumWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Medium.woff2"
	name := "static/fonts/PFSquareSansPro-Medium.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproRegularEot reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproRegularEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Regular.eot"
	name := "static/fonts/PFSquareSansPro-Regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproRegularSvg reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproRegularSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Regular.svg"
	name := "static/fonts/PFSquareSansPro-Regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproRegularTtf reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproRegularTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Regular.ttf"
	name := "static/fonts/PFSquareSansPro-Regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproRegularWoff reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproRegularWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Regular.woff"
	name := "static/fonts/PFSquareSansPro-Regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsPfsquaresansproRegularWoff2 reads file data from disk. It returns an error on failure.
func staticFontsPfsquaresansproRegularWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\PFSquareSansPro-Regular.woff2"
	name := "static/fonts/PFSquareSansPro-Regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsSimpleLineIconsEot reads file data from disk. It returns an error on failure.
func staticFontsSimpleLineIconsEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\Simple-Line-Icons.eot"
	name := "static/fonts/Simple-Line-Icons.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsSimpleLineIconsSvg reads file data from disk. It returns an error on failure.
func staticFontsSimpleLineIconsSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\Simple-Line-Icons.svg"
	name := "static/fonts/Simple-Line-Icons.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsSimpleLineIconsTtf reads file data from disk. It returns an error on failure.
func staticFontsSimpleLineIconsTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\Simple-Line-Icons.ttf"
	name := "static/fonts/Simple-Line-Icons.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsSimpleLineIconsWoff reads file data from disk. It returns an error on failure.
func staticFontsSimpleLineIconsWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\Simple-Line-Icons.woff"
	name := "static/fonts/Simple-Line-Icons.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsSimpleLineIconsWoff2 reads file data from disk. It returns an error on failure.
func staticFontsSimpleLineIconsWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\Simple-Line-Icons.woff2"
	name := "static/fonts/Simple-Line-Icons.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsFontawesomeWebfontEot reads file data from disk. It returns an error on failure.
func staticFontsFontawesomeWebfontEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\fontawesome-webfont.eot"
	name := "static/fonts/fontawesome-webfont.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsFontawesomeWebfontSvg reads file data from disk. It returns an error on failure.
func staticFontsFontawesomeWebfontSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\fontawesome-webfont.svg"
	name := "static/fonts/fontawesome-webfont.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsFontawesomeWebfontTtf reads file data from disk. It returns an error on failure.
func staticFontsFontawesomeWebfontTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\fontawesome-webfont.ttf"
	name := "static/fonts/fontawesome-webfont.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsFontawesomeWebfontWoff reads file data from disk. It returns an error on failure.
func staticFontsFontawesomeWebfontWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\fontawesome-webfont.woff"
	name := "static/fonts/fontawesome-webfont.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsFontawesomeWebfontWoff2 reads file data from disk. It returns an error on failure.
func staticFontsFontawesomeWebfontWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\fontawesome-webfont.woff2"
	name := "static/fonts/fontawesome-webfont.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsFiletypesRegularEot reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsFiletypesRegularEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-filetypes-regular.eot"
	name := "static/fonts/glyphicons-filetypes-regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsFiletypesRegularSvg reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsFiletypesRegularSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-filetypes-regular.svg"
	name := "static/fonts/glyphicons-filetypes-regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsFiletypesRegularTtf reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsFiletypesRegularTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-filetypes-regular.ttf"
	name := "static/fonts/glyphicons-filetypes-regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsFiletypesRegularWoff reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsFiletypesRegularWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-filetypes-regular.woff"
	name := "static/fonts/glyphicons-filetypes-regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsFiletypesRegularWoff2 reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsFiletypesRegularWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-filetypes-regular.woff2"
	name := "static/fonts/glyphicons-filetypes-regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsHalflingsRegularEot reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsHalflingsRegularEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-halflings-regular.eot"
	name := "static/fonts/glyphicons-halflings-regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsHalflingsRegularSvg reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsHalflingsRegularSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-halflings-regular.svg"
	name := "static/fonts/glyphicons-halflings-regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsHalflingsRegularTtf reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsHalflingsRegularTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-halflings-regular.ttf"
	name := "static/fonts/glyphicons-halflings-regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsHalflingsRegularWoff reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsHalflingsRegularWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-halflings-regular.woff"
	name := "static/fonts/glyphicons-halflings-regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsHalflingsRegularWoff2 reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsHalflingsRegularWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-halflings-regular.woff2"
	name := "static/fonts/glyphicons-halflings-regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsRegularEot reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsRegularEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-regular.eot"
	name := "static/fonts/glyphicons-regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsRegularSvg reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsRegularSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-regular.svg"
	name := "static/fonts/glyphicons-regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsRegularTtf reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsRegularTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-regular.ttf"
	name := "static/fonts/glyphicons-regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsRegularWoff reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsRegularWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-regular.woff"
	name := "static/fonts/glyphicons-regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsRegularWoff2 reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsRegularWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-regular.woff2"
	name := "static/fonts/glyphicons-regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsSocialRegularEot reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsSocialRegularEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-social-regular.eot"
	name := "static/fonts/glyphicons-social-regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsSocialRegularSvg reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsSocialRegularSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-social-regular.svg"
	name := "static/fonts/glyphicons-social-regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsSocialRegularTtf reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsSocialRegularTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-social-regular.ttf"
	name := "static/fonts/glyphicons-social-regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsSocialRegularWoff reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsSocialRegularWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-social-regular.woff"
	name := "static/fonts/glyphicons-social-regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticFontsGlyphiconsSocialRegularWoff2 reads file data from disk. It returns an error on failure.
func staticFontsGlyphiconsSocialRegularWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\fonts\\glyphicons-social-regular.woff2"
	name := "static/fonts/glyphicons-social-regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticForgingHtml reads file data from disk. It returns an error on failure.
func staticForgingHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\forging.html"
	name := "static/forging.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGen_citizenHtml reads file data from disk. It returns an error on failure.
func staticGen_citizenHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gen_citizen.html"
	name := "static/gen_citizen.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGen_keysHtml reads file data from disk. It returns an error on failure.
func staticGen_keysHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gen_keys.html"
	name := "static/gen_keys.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorAdaptersJqueryJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorAdaptersJqueryJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\adapters\\jquery.js"
	name := "static/generator/ckeditor/adapters/jquery.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorBuildConfigJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorBuildConfigJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\build-config.js"
	name := "static/generator/ckeditor/build-config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCkeditorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCkeditorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\ckeditor.js"
	name := "static/generator/ckeditor/ckeditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorConfigJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorConfigJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\config.js"
	name := "static/generator/ckeditor/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorContentCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorContentCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\content.css"
	name := "static/generator/ckeditor/content.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorContentsCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorContentsCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\contents.css"
	name := "static/generator/ckeditor/contents.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCore_bootstrapJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCore_bootstrapJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\_bootstrap.js"
	name := "static/generator/ckeditor/core/_bootstrap.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCkeditorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCkeditorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\ckeditor.js"
	name := "static/generator/ckeditor/core/ckeditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCkeditor_baseJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCkeditor_baseJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\ckeditor_base.js"
	name := "static/generator/ckeditor/core/ckeditor_base.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCkeditor_basicJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCkeditor_basicJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\ckeditor_basic.js"
	name := "static/generator/ckeditor/core/ckeditor_basic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCommandJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCommandJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\command.js"
	name := "static/generator/ckeditor/core/command.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCommanddefinitionJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCommanddefinitionJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\commanddefinition.js"
	name := "static/generator/ckeditor/core/commanddefinition.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreConfigJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreConfigJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\config.js"
	name := "static/generator/ckeditor/core/config.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCreatorsInlineJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCreatorsInlineJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\creators\\inline.js"
	name := "static/generator/ckeditor/core/creators/inline.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreCreatorsThemeduiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreCreatorsThemeduiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\creators\\themedui.js"
	name := "static/generator/ckeditor/core/creators/themedui.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDataprocessorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDataprocessorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dataprocessor.js"
	name := "static/generator/ckeditor/core/dataprocessor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomCommentJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomCommentJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\comment.js"
	name := "static/generator/ckeditor/core/dom/comment.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomDocumentJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomDocumentJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\document.js"
	name := "static/generator/ckeditor/core/dom/document.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomDocumentfragmentJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomDocumentfragmentJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\documentfragment.js"
	name := "static/generator/ckeditor/core/dom/documentfragment.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomDomobjectJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomDomobjectJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\domobject.js"
	name := "static/generator/ckeditor/core/dom/domobject.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomElementJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomElementJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\element.js"
	name := "static/generator/ckeditor/core/dom/element.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomElementpathJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomElementpathJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\elementpath.js"
	name := "static/generator/ckeditor/core/dom/elementpath.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomEventJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomEventJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\event.js"
	name := "static/generator/ckeditor/core/dom/event.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomIteratorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomIteratorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\iterator.js"
	name := "static/generator/ckeditor/core/dom/iterator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomNodeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomNodeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\node.js"
	name := "static/generator/ckeditor/core/dom/node.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomNodelistJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomNodelistJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\nodelist.js"
	name := "static/generator/ckeditor/core/dom/nodelist.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomRangeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomRangeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\range.js"
	name := "static/generator/ckeditor/core/dom/range.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomRangelistJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomRangelistJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\rangelist.js"
	name := "static/generator/ckeditor/core/dom/rangelist.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomTextJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomTextJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\text.js"
	name := "static/generator/ckeditor/core/dom/text.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomWalkerJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomWalkerJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\walker.js"
	name := "static/generator/ckeditor/core/dom/walker.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomWindowJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomWindowJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom\\window.js"
	name := "static/generator/ckeditor/core/dom/window.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDomJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDomJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dom.js"
	name := "static/generator/ckeditor/core/dom.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreDtdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreDtdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\dtd.js"
	name := "static/generator/ckeditor/core/dtd.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreEditableJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreEditableJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\editable.js"
	name := "static/generator/ckeditor/core/editable.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreEditorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreEditorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\editor.js"
	name := "static/generator/ckeditor/core/editor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreEditor_basicJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreEditor_basicJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\editor_basic.js"
	name := "static/generator/ckeditor/core/editor_basic.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreEnvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreEnvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\env.js"
	name := "static/generator/ckeditor/core/env.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreEventJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreEventJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\event.js"
	name := "static/generator/ckeditor/core/event.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreEventinfoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreEventinfoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\eventInfo.js"
	name := "static/generator/ckeditor/core/eventInfo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreFilterJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreFilterJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\filter.js"
	name := "static/generator/ckeditor/core/filter.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreFocusmanagerJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreFocusmanagerJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\focusmanager.js"
	name := "static/generator/ckeditor/core/focusmanager.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmldataprocessorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmldataprocessorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmldataprocessor.js"
	name := "static/generator/ckeditor/core/htmldataprocessor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserBasicwriterJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserBasicwriterJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\basicwriter.js"
	name := "static/generator/ckeditor/core/htmlparser/basicwriter.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserCdataJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserCdataJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\cdata.js"
	name := "static/generator/ckeditor/core/htmlparser/cdata.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserCommentJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserCommentJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\comment.js"
	name := "static/generator/ckeditor/core/htmlparser/comment.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserElementJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserElementJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\element.js"
	name := "static/generator/ckeditor/core/htmlparser/element.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserFilterJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserFilterJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\filter.js"
	name := "static/generator/ckeditor/core/htmlparser/filter.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserFragmentJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserFragmentJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\fragment.js"
	name := "static/generator/ckeditor/core/htmlparser/fragment.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserNodeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserNodeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\node.js"
	name := "static/generator/ckeditor/core/htmlparser/node.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserTextJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserTextJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser\\text.js"
	name := "static/generator/ckeditor/core/htmlparser/text.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreHtmlparserJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreHtmlparserJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\htmlparser.js"
	name := "static/generator/ckeditor/core/htmlparser.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreKeystrokehandlerJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreKeystrokehandlerJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\keystrokehandler.js"
	name := "static/generator/ckeditor/core/keystrokehandler.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreLangJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreLangJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\lang.js"
	name := "static/generator/ckeditor/core/lang.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreLoaderJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreLoaderJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\loader.js"
	name := "static/generator/ckeditor/core/loader.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreLogJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreLogJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\log.js"
	name := "static/generator/ckeditor/core/log.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCorePlugindefinitionJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCorePlugindefinitionJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\plugindefinition.js"
	name := "static/generator/ckeditor/core/plugindefinition.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCorePluginsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCorePluginsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\plugins.js"
	name := "static/generator/ckeditor/core/plugins.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreResourcemanagerJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreResourcemanagerJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\resourcemanager.js"
	name := "static/generator/ckeditor/core/resourcemanager.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreScriptloaderJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreScriptloaderJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\scriptloader.js"
	name := "static/generator/ckeditor/core/scriptloader.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreSelectionJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreSelectionJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\selection.js"
	name := "static/generator/ckeditor/core/selection.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreSkinJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreSkinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\skin.js"
	name := "static/generator/ckeditor/core/skin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreStyleJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreStyleJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\style.js"
	name := "static/generator/ckeditor/core/style.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreTemplateJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreTemplateJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\template.js"
	name := "static/generator/ckeditor/core/template.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreToolsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreToolsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\tools.js"
	name := "static/generator/ckeditor/core/tools.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorCoreUiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorCoreUiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\core\\ui.js"
	name := "static/generator/ckeditor/core/ui.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLang_translationstatusTxt reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLang_translationstatusTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\_translationstatus.txt"
	name := "static/generator/ckeditor/lang/_translationstatus.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\af.js"
	name := "static/generator/ckeditor/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ar.js"
	name := "static/generator/ckeditor/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\az.js"
	name := "static/generator/ckeditor/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\bg.js"
	name := "static/generator/ckeditor/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\bn.js"
	name := "static/generator/ckeditor/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\bs.js"
	name := "static/generator/ckeditor/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ca.js"
	name := "static/generator/ckeditor/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\cs.js"
	name := "static/generator/ckeditor/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\cy.js"
	name := "static/generator/ckeditor/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\da.js"
	name := "static/generator/ckeditor/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\de-ch.js"
	name := "static/generator/ckeditor/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\de.js"
	name := "static/generator/ckeditor/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\el.js"
	name := "static/generator/ckeditor/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\en-au.js"
	name := "static/generator/ckeditor/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\en-ca.js"
	name := "static/generator/ckeditor/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\en-gb.js"
	name := "static/generator/ckeditor/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\en.js"
	name := "static/generator/ckeditor/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\eo.js"
	name := "static/generator/ckeditor/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\es.js"
	name := "static/generator/ckeditor/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\et.js"
	name := "static/generator/ckeditor/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\eu.js"
	name := "static/generator/ckeditor/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\fa.js"
	name := "static/generator/ckeditor/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\fi.js"
	name := "static/generator/ckeditor/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\fo.js"
	name := "static/generator/ckeditor/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\fr.js"
	name := "static/generator/ckeditor/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\gl.js"
	name := "static/generator/ckeditor/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\gu.js"
	name := "static/generator/ckeditor/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\he.js"
	name := "static/generator/ckeditor/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\hi.js"
	name := "static/generator/ckeditor/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\hr.js"
	name := "static/generator/ckeditor/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\hu.js"
	name := "static/generator/ckeditor/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\id.js"
	name := "static/generator/ckeditor/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\is.js"
	name := "static/generator/ckeditor/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\it.js"
	name := "static/generator/ckeditor/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ja.js"
	name := "static/generator/ckeditor/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ka.js"
	name := "static/generator/ckeditor/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\km.js"
	name := "static/generator/ckeditor/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ko.js"
	name := "static/generator/ckeditor/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ku.js"
	name := "static/generator/ckeditor/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\lt.js"
	name := "static/generator/ckeditor/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\lv.js"
	name := "static/generator/ckeditor/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\mk.js"
	name := "static/generator/ckeditor/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\mn.js"
	name := "static/generator/ckeditor/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ms.js"
	name := "static/generator/ckeditor/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\nb.js"
	name := "static/generator/ckeditor/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\nl.js"
	name := "static/generator/ckeditor/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\no.js"
	name := "static/generator/ckeditor/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\oc.js"
	name := "static/generator/ckeditor/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\pl.js"
	name := "static/generator/ckeditor/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangPluginsA11yhelpDialogosA11yhelpJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangPluginsA11yhelpDialogosA11yhelpJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\plugins\\a11yhelp\\dialogos\\a11yhelp.js"
	name := "static/generator/ckeditor/lang/plugins/a11yhelp/dialogos/a11yhelp.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangPluginsA11yhelpDialogosLang_translationstatusTxt reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangPluginsA11yhelpDialogosLang_translationstatusTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\plugins\\a11yhelp\\dialogos\\lang\\_translationstatus.txt"
	name := "static/generator/ckeditor/lang/plugins/a11yhelp/dialogos/lang/_translationstatus.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\pt-br.js"
	name := "static/generator/ckeditor/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\pt.js"
	name := "static/generator/ckeditor/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ro.js"
	name := "static/generator/ckeditor/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ru.js"
	name := "static/generator/ckeditor/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\si.js"
	name := "static/generator/ckeditor/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sk.js"
	name := "static/generator/ckeditor/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sl.js"
	name := "static/generator/ckeditor/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sq.js"
	name := "static/generator/ckeditor/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sr.js"
	name := "static/generator/ckeditor/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSrLatnJs2 reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSrLatnJs2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sr.latn.js"
	name := "static/generator/ckeditor/lang/sr.latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\sv.js"
	name := "static/generator/ckeditor/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\th.js"
	name := "static/generator/ckeditor/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\tr.js"
	name := "static/generator/ckeditor/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\tt.js"
	name := "static/generator/ckeditor/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\ug.js"
	name := "static/generator/ckeditor/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\uk.js"
	name := "static/generator/ckeditor/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\vi.js"
	name := "static/generator/ckeditor/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\zh.js"
	name := "static/generator/ckeditor/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorLangZnChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorLangZnChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\lang\\zn-ch.js"
	name := "static/generator/ckeditor/lang/zn-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsA11yhelpJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsA11yhelpJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\a11yhelp.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLang_translationstatusTxt reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLang_translationstatusTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\_translationstatus.txt"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/_translationstatus.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\dialogs\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsA11yhelpPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsA11yhelpPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\a11yhelp\\plugin.js"
	name := "static/generator/ckeditor/plugins/a11yhelp/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutDialogsAboutJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutDialogsAboutJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\dialogs\\about.js"
	name := "static/generator/ckeditor/plugins/about/dialogs/about.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutDialogsHidpiLogo_ckeditorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutDialogsHidpiLogo_ckeditorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\dialogs\\hidpi\\logo_ckeditor.png"
	name := "static/generator/ckeditor/plugins/about/dialogs/hidpi/logo_ckeditor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutDialogsLogo_ckeditorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutDialogsLogo_ckeditorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\dialogs\\logo_ckeditor.png"
	name := "static/generator/ckeditor/plugins/about/dialogs/logo_ckeditor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutIconsAboutPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutIconsAboutPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\icons\\about.png"
	name := "static/generator/ckeditor/plugins/about/icons/about.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutIconsHidpiAboutPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutIconsHidpiAboutPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\icons\\hidpi\\about.png"
	name := "static/generator/ckeditor/plugins/about/icons/hidpi/about.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/about/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/about/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/about/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/about/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/about/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/about/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/about/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/about/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/about/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/about/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/about/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/about/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/about/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/about/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/about/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/about/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/about/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/about/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/about/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/about/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/about/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/about/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/about/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/about/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/about/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/about/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/about/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/about/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/about/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/about/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/about/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/about/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/about/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/about/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/about/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/about/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/about/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/about/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/about/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/about/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/about/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/about/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/about/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/about/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/about/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/about/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/about/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/about/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/about/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/about/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/about/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/about/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/about/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/about/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/about/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/about/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/about/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/about/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/about/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/about/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/about/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/about/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/about/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/about/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/about/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/about/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/about/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/about/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/about/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsAboutPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsAboutPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\about\\plugin.js"
	name := "static/generator/ckeditor/plugins/about/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsBoldPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsBoldPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\bold.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/bold.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsHidpiBoldPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsHidpiBoldPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\hidpi\\bold.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/hidpi/bold.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsHidpiItalicPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsHidpiItalicPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\hidpi\\italic.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/hidpi/italic.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsHidpiStrikePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsHidpiStrikePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\hidpi\\strike.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/hidpi/strike.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSubscriptPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSubscriptPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\hidpi\\subscript.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/hidpi/subscript.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSuperscriptPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSuperscriptPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\hidpi\\superscript.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/hidpi/superscript.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsHidpiUnderlinePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsHidpiUnderlinePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\hidpi\\underline.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/hidpi/underline.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsItalicPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsItalicPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\italic.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/italic.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsStrikePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsStrikePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\strike.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/strike.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsSubscriptPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsSubscriptPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\subscript.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/subscript.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsSuperscriptPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsSuperscriptPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\superscript.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/superscript.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesIconsUnderlinePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesIconsUnderlinePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\icons\\underline.png"
	name := "static/generator/ckeditor/plugins/basicstyles/icons/underline.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/basicstyles/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBasicstylesPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBasicstylesPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\basicstyles\\plugin.js"
	name := "static/generator/ckeditor/plugins/basicstyles/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiIconsBidiltrPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiIconsBidiltrPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\icons\\bidiltr.png"
	name := "static/generator/ckeditor/plugins/bidi/icons/bidiltr.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiIconsBidirtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiIconsBidirtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\icons\\bidirtl.png"
	name := "static/generator/ckeditor/plugins/bidi/icons/bidirtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiIconsHidpiBidiltrPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiIconsHidpiBidiltrPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\icons\\hidpi\\bidiltr.png"
	name := "static/generator/ckeditor/plugins/bidi/icons/hidpi/bidiltr.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiIconsHidpiBidirtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiIconsHidpiBidirtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\icons\\hidpi\\bidirtl.png"
	name := "static/generator/ckeditor/plugins/bidi/icons/hidpi/bidirtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/bidi/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBidiPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBidiPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\bidi\\plugin.js"
	name := "static/generator/ckeditor/plugins/bidi/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteIconsBlockquotePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteIconsBlockquotePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\icons\\blockquote.png"
	name := "static/generator/ckeditor/plugins/blockquote/icons/blockquote.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteIconsHidpiBlockquotePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteIconsHidpiBlockquotePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\icons\\hidpi\\blockquote.png"
	name := "static/generator/ckeditor/plugins/blockquote/icons/hidpi/blockquote.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquoteLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquoteLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/blockquote/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsBlockquotePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsBlockquotePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\blockquote\\plugin.js"
	name := "static/generator/ckeditor/plugins/blockquote/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/button/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/button/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/button/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/button/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/button/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/button/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/button/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/button/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/button/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/button/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/button/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/button/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/button/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/button/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/button/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/button/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/button/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/button/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/button/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/button/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/button/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/button/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/button/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/button/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/button/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/button/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/button/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/button/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/button/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/button/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/button/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/button/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/button/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/button/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/button/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/button/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/button/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/button/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/button/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/button/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/button/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/button/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/button/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/button/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/button/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/button/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/button/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/button/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsButtonPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsButtonPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\button\\plugin.js"
	name := "static/generator/ckeditor/plugins/button/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\ckawesome\\dialogs\\ckawesome.css"
	name := "static/generator/ckeditor/plugins/ckawesome/dialogs/ckawesome.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\ckawesome\\dialogs\\ckawesome.js"
	name := "static/generator/ckeditor/plugins/ckawesome/dialogs/ckawesome.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCkawesomeIconsCkawesomePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCkawesomeIconsCkawesomePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\ckawesome\\icons\\ckawesome.png"
	name := "static/generator/ckeditor/plugins/ckawesome/icons/ckawesome.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCkawesomePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCkawesomePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\ckawesome\\plugin.js"
	name := "static/generator/ckeditor/plugins/ckawesome/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\ckawesome\\resources\\select2\\select2.full.min.css"
	name := "static/generator/ckeditor/plugins/ckawesome/resources/select2/select2.full.min.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\ckawesome\\resources\\select2\\select2.full.min.js"
	name := "static/generator/ckeditor/plugins/ckawesome/resources/select2/select2.full.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardDevClipboardHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardDevClipboardHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\dev\\clipboard.html"
	name := "static/generator/ckeditor/plugins/clipboard/dev/clipboard.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardDevConsoleJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardDevConsoleJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\dev\\console.js"
	name := "static/generator/ckeditor/plugins/clipboard/dev/console.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardDevDndHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardDevDndHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\dev\\dnd.html"
	name := "static/generator/ckeditor/plugins/clipboard/dev/dnd.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardDialogsPasteJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardDialogsPasteJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\dialogs\\paste.js"
	name := "static/generator/ckeditor/plugins/clipboard/dialogs/paste.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsCopyRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsCopyRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\copy-rtl.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/copy-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsCopyPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsCopyPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\copy.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/copy.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsCutRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsCutRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\cut-rtl.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/cut-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsCutPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsCutPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\cut.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/cut.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\hidpi\\copy-rtl.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/hidpi/copy-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\hidpi\\copy.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/hidpi/copy.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsHidpiCutRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsHidpiCutRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\hidpi\\cut-rtl.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/hidpi/cut-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsHidpiCutPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsHidpiCutPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\hidpi\\cut.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/hidpi/cut.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsHidpiPasteRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsHidpiPasteRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\hidpi\\paste-rtl.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/hidpi/paste-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsHidpiPastePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsHidpiPastePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\hidpi\\paste.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/hidpi/paste.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsPasteRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsPasteRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\paste-rtl.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/paste-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardIconsPastePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardIconsPastePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\icons\\paste.png"
	name := "static/generator/ckeditor/plugins/clipboard/icons/paste.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/clipboard/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsClipboardPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsClipboardPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\clipboard\\plugin.js"
	name := "static/generator/ckeditor/plugins/clipboard/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonIconsBgcolorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonIconsBgcolorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\icons\\bgcolor.png"
	name := "static/generator/ckeditor/plugins/colorbutton/icons/bgcolor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonIconsHidpiBgcolorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonIconsHidpiBgcolorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\icons\\hidpi\\bgcolor.png"
	name := "static/generator/ckeditor/plugins/colorbutton/icons/hidpi/bgcolor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonIconsHidpiTextcolorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonIconsHidpiTextcolorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\icons\\hidpi\\textcolor.png"
	name := "static/generator/ckeditor/plugins/colorbutton/icons/hidpi/textcolor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonIconsTextcolorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonIconsTextcolorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\icons\\textcolor.png"
	name := "static/generator/ckeditor/plugins/colorbutton/icons/textcolor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/colorbutton/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColorbuttonPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColorbuttonPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colorbutton\\plugin.js"
	name := "static/generator/ckeditor/plugins/colorbutton/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogDialogsColordialogCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogDialogsColordialogCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\dialogs\\colordialog.css"
	name := "static/generator/ckeditor/plugins/colordialog/dialogs/colordialog.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogDialogsColordialogJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogDialogsColordialogJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\dialogs\\colordialog.js"
	name := "static/generator/ckeditor/plugins/colordialog/dialogs/colordialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/colordialog/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsColordialogPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsColordialogPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\colordialog\\plugin.js"
	name := "static/generator/ckeditor/plugins/colordialog/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/contextmenu/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsContextmenuPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsContextmenuPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\contextmenu\\plugin.js"
	name := "static/generator/ckeditor/plugins/contextmenu/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingCursorsCursorDisabledSvg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingCursorsCursorDisabledSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\cursors\\cursor-disabled.svg"
	name := "static/generator/ckeditor/plugins/copyformatting/cursors/cursor-disabled.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingCursorsCursorSvg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingCursorsCursorSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\cursors\\cursor.svg"
	name := "static/generator/ckeditor/plugins/copyformatting/cursors/cursor.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingIconsCopyformattingPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingIconsCopyformattingPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\icons\\copyformatting.png"
	name := "static/generator/ckeditor/plugins/copyformatting/icons/copyformatting.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingIconsHidpiCopyformattingPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingIconsHidpiCopyformattingPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\icons\\hidpi\\copyformatting.png"
	name := "static/generator/ckeditor/plugins/copyformatting/icons/hidpi/copyformatting.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/copyformatting/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\plugin.js"
	name := "static/generator/ckeditor/plugins/copyformatting/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsCopyformattingStylesCopyformattingCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsCopyformattingStylesCopyformattingCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\copyformatting\\styles\\copyformatting.css"
	name := "static/generator/ckeditor/plugins/copyformatting/styles/copyformatting.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDialogDialogdefinitionJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDialogDialogdefinitionJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\dialog\\dialogDefinition.js"
	name := "static/generator/ckeditor/plugins/dialog/dialogDefinition.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDialogPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDialogPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\dialog\\plugin.js"
	name := "static/generator/ckeditor/plugins/dialog/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDialogSamplesAssetsMy_dialogJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDialogSamplesAssetsMy_dialogJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\dialog\\samples\\assets\\my_dialog.js"
	name := "static/generator/ckeditor/plugins/dialog/samples/assets/my_dialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDialogSamplesDialogHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDialogSamplesDialogHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\dialog\\samples\\dialog.html"
	name := "static/generator/ckeditor/plugins/dialog/samples/dialog.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDialogadvtabPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDialogadvtabPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\dialogadvtab\\plugin.js"
	name := "static/generator/ckeditor/plugins/dialogadvtab/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDialoguiPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDialoguiPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\dialogui\\plugin.js"
	name := "static/generator/ckeditor/plugins/dialogui/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivDialogsDivJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivDialogsDivJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\dialogs\\div.js"
	name := "static/generator/ckeditor/plugins/div/dialogs/div.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivIconsCreatedivPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivIconsCreatedivPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\icons\\creatediv.png"
	name := "static/generator/ckeditor/plugins/div/icons/creatediv.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivIconsHidpiCreatedivPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivIconsHidpiCreatedivPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\icons\\hidpi\\creatediv.png"
	name := "static/generator/ckeditor/plugins/div/icons/hidpi/creatediv.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/div/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/div/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/div/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/div/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/div/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/div/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/div/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/div/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/div/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/div/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/div/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/div/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/div/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/div/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/div/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/div/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/div/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/div/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/div/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/div/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/div/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/div/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/div/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/div/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/div/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/div/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/div/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/div/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/div/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/div/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/div/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/div/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/div/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/div/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/div/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/div/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/div/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/div/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/div/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/div/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/div/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/div/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/div/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/div/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/div/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/div/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/div/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/div/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/div/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/div/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/div/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/div/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/div/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/div/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/div/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/div/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/div/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/div/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/div/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/div/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/div/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/div/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/div/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/div/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/div/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/div/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/div/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/div/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/div/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsDivPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsDivPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\div\\plugin.js"
	name := "static/generator/ckeditor/plugins/div/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/elementspath/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsElementspathPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsElementspathPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\elementspath\\plugin.js"
	name := "static/generator/ckeditor/plugins/elementspath/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsEnterkeyPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsEnterkeyPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\enterkey\\plugin.js"
	name := "static/generator/ckeditor/plugins/enterkey/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsEnterkeySamplesEnterkeyHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsEnterkeySamplesEnterkeyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\enterkey\\samples\\enterkey.html"
	name := "static/generator/ckeditor/plugins/enterkey/samples/enterkey.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsEntitiesPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsEntitiesPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\entities\\plugin.js"
	name := "static/generator/ckeditor/plugins/entities/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsImagesSpacerGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsImagesSpacerGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\images\\spacer.gif"
	name := "static/generator/ckeditor/plugins/fakeobjects/images/spacer.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFakeobjectsPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFakeobjectsPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fakeobjects\\plugin.js"
	name := "static/generator/ckeditor/plugins/fakeobjects/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFilebrowserPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFilebrowserPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\filebrowser\\plugin.js"
	name := "static/generator/ckeditor/plugins/filebrowser/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindDialogsFindJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindDialogsFindJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\dialogs\\find.js"
	name := "static/generator/ckeditor/plugins/find/dialogs/find.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindIconsFindRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindIconsFindRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\icons\\find-rtl.png"
	name := "static/generator/ckeditor/plugins/find/icons/find-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindIconsFindPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindIconsFindPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\icons\\find.png"
	name := "static/generator/ckeditor/plugins/find/icons/find.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindIconsHidpiFindRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindIconsHidpiFindRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\icons\\hidpi\\find-rtl.png"
	name := "static/generator/ckeditor/plugins/find/icons/hidpi/find-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindIconsHidpiFindPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindIconsHidpiFindPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\icons\\hidpi\\find.png"
	name := "static/generator/ckeditor/plugins/find/icons/hidpi/find.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindIconsHidpiReplacePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindIconsHidpiReplacePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\icons\\hidpi\\replace.png"
	name := "static/generator/ckeditor/plugins/find/icons/hidpi/replace.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindIconsReplacePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindIconsReplacePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\icons\\replace.png"
	name := "static/generator/ckeditor/plugins/find/icons/replace.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/find/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/find/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/find/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/find/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/find/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/find/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/find/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/find/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/find/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/find/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/find/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/find/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/find/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/find/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/find/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/find/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/find/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/find/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/find/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/find/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/find/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/find/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/find/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/find/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/find/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/find/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/find/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/find/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/find/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/find/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/find/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/find/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/find/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/find/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/find/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/find/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/find/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/find/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/find/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/find/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/find/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/find/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/find/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/find/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/find/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/find/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/find/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/find/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/find/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/find/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/find/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/find/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/find/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/find/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/find/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/find/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/find/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/find/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/find/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/find/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/find/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/find/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/find/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/find/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/find/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/find/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/find/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/find/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/find/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFindPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFindPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\find\\plugin.js"
	name := "static/generator/ckeditor/plugins/find/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashDialogsFlashJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashDialogsFlashJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\dialogs\\flash.js"
	name := "static/generator/ckeditor/plugins/flash/dialogs/flash.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashIconsFlashPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashIconsFlashPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\icons\\flash.png"
	name := "static/generator/ckeditor/plugins/flash/icons/flash.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashIconsHidpiFlashPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashIconsHidpiFlashPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\icons\\hidpi\\flash.png"
	name := "static/generator/ckeditor/plugins/flash/icons/hidpi/flash.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashImagesPlaceholderPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashImagesPlaceholderPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\images\\placeholder.png"
	name := "static/generator/ckeditor/plugins/flash/images/placeholder.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/flash/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/flash/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/flash/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/flash/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/flash/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/flash/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/flash/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/flash/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/flash/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/flash/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/flash/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/flash/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/flash/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/flash/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/flash/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/flash/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/flash/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/flash/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/flash/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/flash/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/flash/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/flash/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/flash/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/flash/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/flash/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/flash/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/flash/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/flash/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/flash/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/flash/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/flash/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/flash/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/flash/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/flash/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/flash/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/flash/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/flash/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/flash/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/flash/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/flash/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/flash/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/flash/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/flash/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/flash/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/flash/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/flash/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/flash/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/flash/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/flash/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/flash/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/flash/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/flash/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/flash/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/flash/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/flash/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/flash/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/flash/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/flash/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/flash/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/flash/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFlashPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFlashPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\flash\\plugin.js"
	name := "static/generator/ckeditor/plugins/flash/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFloatingspacePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFloatingspacePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\floatingspace\\plugin.js"
	name := "static/generator/ckeditor/plugins/floatingspace/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFloatpanelPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFloatpanelPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\floatpanel\\plugin.js"
	name := "static/generator/ckeditor/plugins/floatpanel/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/font/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/font/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/font/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/font/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/font/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/font/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/font/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/font/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/font/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/font/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/font/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/font/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/font/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/font/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/font/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/font/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/font/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/font/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/font/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/font/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/font/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/font/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/font/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/font/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/font/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/font/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/font/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/font/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/font/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/font/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/font/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/font/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/font/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/font/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/font/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/font/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/font/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/font/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/font/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/font/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/font/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/font/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/font/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/font/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/font/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/font/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/font/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/font/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/font/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/font/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/font/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/font/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/font/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/font/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/font/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/font/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/font/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/font/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/font/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/font/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/font/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/font/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/font/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/font/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/font/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/font/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/font/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/font/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/font/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\font\\plugin.js"
	name := "static/generator/ckeditor/plugins/font/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeDialogsFontawesomeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeDialogsFontawesomeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\dialogs\\fontawesome.js"
	name := "static/generator/ckeditor/plugins/fontawesome/dialogs/fontawesome.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeDialogsIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeDialogsIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\dialogs\\index.html"
	name := "static/generator/ckeditor/plugins/fontawesome/dialogs/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssFontAwesomeMinCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssFontAwesomeMinCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\css\\font-awesome.min.css"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/css/font-awesome.min.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\css\\index.html"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/css/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeOtf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeOtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\FontAwesome.otf"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/FontAwesome.otf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontEot reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\fontawesome-webfont.eot"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontSvg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\fontawesome-webfont.svg"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontTtf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\fontawesome-webfont.ttf"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\fontawesome-webfont.woff"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff2 reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\fontawesome-webfont.woff2"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\fonts\\index.html"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeFontAwesomeIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeFontAwesomeIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\font-awesome\\index.html"
	name := "static/generator/ckeditor/plugins/fontawesome/font-awesome/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeIconsFontawesomePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeIconsFontawesomePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\icons\\fontawesome.png"
	name := "static/generator/ckeditor/plugins/fontawesome/icons/fontawesome.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeIconsIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeIconsIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\icons\\index.html"
	name := "static/generator/ckeditor/plugins/fontawesome/icons/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomeIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomeIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\index.html"
	name := "static/generator/ckeditor/plugins/fontawesome/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFontawesomePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFontawesomePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\fontawesome\\plugin.js"
	name := "static/generator/ckeditor/plugins/fontawesome/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/format/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/format/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/format/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/format/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/format/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/format/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/format/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/format/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/format/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/format/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/format/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/format/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/format/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/format/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/format/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/format/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/format/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/format/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/format/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/format/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/format/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/format/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/format/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/format/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/format/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/format/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/format/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/format/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/format/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/format/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/format/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/format/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/format/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/format/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/format/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/format/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/format/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/format/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/format/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/format/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/format/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/format/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/format/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/format/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/format/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/format/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/format/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/format/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/format/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/format/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/format/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/format/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/format/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/format/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/format/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/format/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/format/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/format/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/format/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/format/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/format/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/format/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/format/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/format/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/format/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/format/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/format/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/format/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/format/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormatPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormatPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\format\\plugin.js"
	name := "static/generator/ckeditor/plugins/format/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsButtonJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsButtonJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\button.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/button.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsCheckboxJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsCheckboxJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\checkbox.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/checkbox.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsFormJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsFormJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\form.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/form.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsHiddenfieldJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsHiddenfieldJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\hiddenfield.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/hiddenfield.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsRadioJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsRadioJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\radio.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/radio.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsSelectJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsSelectJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\select.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/select.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsTextareaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsTextareaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\textarea.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/textarea.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsDialogsTextfieldJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsDialogsTextfieldJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\dialogs\\textfield.js"
	name := "static/generator/ckeditor/plugins/forms/dialogs/textfield.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsButtonPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsButtonPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\button.png"
	name := "static/generator/ckeditor/plugins/forms/icons/button.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsCheckboxPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsCheckboxPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\checkbox.png"
	name := "static/generator/ckeditor/plugins/forms/icons/checkbox.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsFormPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsFormPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\form.png"
	name := "static/generator/ckeditor/plugins/forms/icons/form.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHiddenfieldPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHiddenfieldPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hiddenfield.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hiddenfield.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiButtonPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiButtonPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\button.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/button.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiCheckboxPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiCheckboxPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\checkbox.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/checkbox.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiFormPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiFormPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\form.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/form.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiHiddenfieldPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiHiddenfieldPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\hiddenfield.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/hiddenfield.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiImagebuttonPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiImagebuttonPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\imagebutton.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/imagebutton.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiRadioPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiRadioPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\radio.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/radio.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiSelectRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiSelectRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\select-rtl.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/select-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiSelectPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiSelectPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\select.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/select.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\textarea-rtl.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/textarea-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\textarea.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/textarea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\textfield-rtl.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/textfield-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\hidpi\\textfield.png"
	name := "static/generator/ckeditor/plugins/forms/icons/hidpi/textfield.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsImagebuttonPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsImagebuttonPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\imagebutton.png"
	name := "static/generator/ckeditor/plugins/forms/icons/imagebutton.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsRadioPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsRadioPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\radio.png"
	name := "static/generator/ckeditor/plugins/forms/icons/radio.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsSelectRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsSelectRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\select-rtl.png"
	name := "static/generator/ckeditor/plugins/forms/icons/select-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsSelectPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsSelectPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\select.png"
	name := "static/generator/ckeditor/plugins/forms/icons/select.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsTextareaRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsTextareaRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\textarea-rtl.png"
	name := "static/generator/ckeditor/plugins/forms/icons/textarea-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsTextareaPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsTextareaPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\textarea.png"
	name := "static/generator/ckeditor/plugins/forms/icons/textarea.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsTextfieldRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsTextfieldRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\textfield-rtl.png"
	name := "static/generator/ckeditor/plugins/forms/icons/textfield-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsIconsTextfieldPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsIconsTextfieldPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\icons\\textfield.png"
	name := "static/generator/ckeditor/plugins/forms/icons/textfield.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsImagesHiddenfieldGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsImagesHiddenfieldGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\images\\hiddenfield.gif"
	name := "static/generator/ckeditor/plugins/forms/images/hiddenfield.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/forms/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/forms/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/forms/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/forms/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/forms/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/forms/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/forms/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/forms/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/forms/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/forms/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/forms/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/forms/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/forms/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/forms/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/forms/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/forms/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/forms/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/forms/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/forms/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/forms/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/forms/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/forms/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/forms/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/forms/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/forms/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/forms/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/forms/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/forms/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/forms/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/forms/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/forms/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/forms/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/forms/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/forms/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/forms/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/forms/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/forms/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/forms/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/forms/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/forms/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/forms/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/forms/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/forms/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/forms/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/forms/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/forms/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/forms/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/forms/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/forms/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/forms/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/forms/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/forms/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/forms/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/forms/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/forms/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/forms/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/forms/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/forms/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/forms/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/forms/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsFormsPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsFormsPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\forms\\plugin.js"
	name := "static/generator/ckeditor/plugins/forms/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssConfigJson reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssConfigJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\config.json"
	name := "static/generator/ckeditor/plugins/glyphicons/css/config.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssCssBootstrapCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssCssBootstrapCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\css\\bootstrap.css"
	name := "static/generator/ckeditor/plugins/glyphicons/css/css/bootstrap.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularEot reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\fonts\\glyphicons-halflings-regular.eot"
	name := "static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularSvg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\fonts\\glyphicons-halflings-regular.svg"
	name := "static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularTtf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\fonts\\glyphicons-halflings-regular.ttf"
	name := "static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\fonts\\glyphicons-halflings-regular.woff"
	name := "static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff2 reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff2() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\fonts\\glyphicons-halflings-regular.woff2"
	name := "static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.woff2"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\js\\bootstrap.js"
	name := "static/generator/ckeditor/plugins/glyphicons/css/js/bootstrap.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapMinJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapMinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\js\\bootstrap.min.js"
	name := "static/generator/ckeditor/plugins/glyphicons/css/js/bootstrap.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsCssStyleCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsCssStyleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\css\\style.css"
	name := "static/generator/ckeditor/plugins/glyphicons/css/style.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsGlyphiconsDialogsGlyphiconsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsGlyphiconsDialogsGlyphiconsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\glyphicons\\dialogs\\glyphicons.js"
	name := "static/generator/ckeditor/plugins/glyphicons/dialogs/glyphicons.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleIconsHidpiHorizontalrulePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleIconsHidpiHorizontalrulePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\icons\\hidpi\\horizontalrule.png"
	name := "static/generator/ckeditor/plugins/horizontalrule/icons/hidpi/horizontalrule.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleIconsHorizontalrulePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleIconsHorizontalrulePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\icons\\horizontalrule.png"
	name := "static/generator/ckeditor/plugins/horizontalrule/icons/horizontalrule.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalruleLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalruleLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHorizontalrulePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHorizontalrulePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\horizontalrule\\plugin.js"
	name := "static/generator/ckeditor/plugins/horizontalrule/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHtmlwriterPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHtmlwriterPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\htmlwriter\\plugin.js"
	name := "static/generator/ckeditor/plugins/htmlwriter/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashFla reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashFla() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\htmlwriter\\samples\\assets\\outputforflash\\outputforflash.fla"
	name := "static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/outputforflash.fla"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashSwf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashSwf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\htmlwriter\\samples\\assets\\outputforflash\\outputforflash.swf"
	name := "static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/outputforflash.swf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashSwfobjectJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashSwfobjectJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\htmlwriter\\samples\\assets\\outputforflash\\swfobject.js"
	name := "static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/swfobject.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputforflashHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputforflashHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\htmlwriter\\samples\\outputforflash.html"
	name := "static/generator/ckeditor/plugins/htmlwriter/samples/outputforflash.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputhtmlHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputhtmlHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\htmlwriter\\samples\\outputhtml.html"
	name := "static/generator/ckeditor/plugins/htmlwriter/samples/outputhtml.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIconsPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIconsPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\icons.png"
	name := "static/generator/ckeditor/plugins/icons.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIcons_hidpiPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIcons_hidpiPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\icons_hidpi.png"
	name := "static/generator/ckeditor/plugins/icons_hidpi.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeDialogsIframeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeDialogsIframeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\dialogs\\iframe.js"
	name := "static/generator/ckeditor/plugins/iframe/dialogs/iframe.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeIconsHidpiIframePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeIconsHidpiIframePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\icons\\hidpi\\iframe.png"
	name := "static/generator/ckeditor/plugins/iframe/icons/hidpi/iframe.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeIconsIframePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeIconsIframePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\icons\\iframe.png"
	name := "static/generator/ckeditor/plugins/iframe/icons/iframe.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeImagesPlaceholderPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeImagesPlaceholderPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\images\\placeholder.png"
	name := "static/generator/ckeditor/plugins/iframe/images/placeholder.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframeLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframeLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/iframe/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIframePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIframePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\iframe\\plugin.js"
	name := "static/generator/ckeditor/plugins/iframe/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageDialogsImageJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageDialogsImageJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\dialogs\\image.js"
	name := "static/generator/ckeditor/plugins/image/dialogs/image.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageIconsHidpiImagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageIconsHidpiImagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\icons\\hidpi\\image.png"
	name := "static/generator/ckeditor/plugins/image/icons/hidpi/image.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageIconsImagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageIconsImagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\icons\\image.png"
	name := "static/generator/ckeditor/plugins/image/icons/image.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageImagesNoimagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageImagesNoimagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\images\\noimage.png"
	name := "static/generator/ckeditor/plugins/image/images/noimage.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/image/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/image/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/image/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/image/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/image/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/image/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/image/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/image/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/image/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/image/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/image/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/image/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/image/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/image/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/image/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/image/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/image/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/image/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/image/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/image/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/image/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/image/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/image/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/image/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/image/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/image/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/image/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/image/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/image/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/image/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/image/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/image/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/image/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/image/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/image/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/image/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/image/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/image/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/image/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/image/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/image/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/image/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/image/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/image/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/image/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/image/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/image/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/image/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/image/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/image/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/image/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/image/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/image/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/image/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/image/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/image/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/image/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/image/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/image/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/image/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/image/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/image/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/image/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/image/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/image/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/image/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/image/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/image/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImageLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImageLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/image/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsImagePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsImagePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\image\\plugin.js"
	name := "static/generator/ckeditor/plugins/image/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentDevIndentHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentDevIndentHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\dev\\indent.html"
	name := "static/generator/ckeditor/plugins/indent/dev/indent.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsHidpiIndentRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsHidpiIndentRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\hidpi\\indent-rtl.png"
	name := "static/generator/ckeditor/plugins/indent/icons/hidpi/indent-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsHidpiIndentPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsHidpiIndentPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\hidpi\\indent.png"
	name := "static/generator/ckeditor/plugins/indent/icons/hidpi/indent.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\hidpi\\outdent-rtl.png"
	name := "static/generator/ckeditor/plugins/indent/icons/hidpi/outdent-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\hidpi\\outdent.png"
	name := "static/generator/ckeditor/plugins/indent/icons/hidpi/outdent.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsIndentRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsIndentRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\indent-rtl.png"
	name := "static/generator/ckeditor/plugins/indent/icons/indent-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsIndentPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsIndentPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\indent.png"
	name := "static/generator/ckeditor/plugins/indent/icons/indent.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsOutdentRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsOutdentRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\outdent-rtl.png"
	name := "static/generator/ckeditor/plugins/indent/icons/outdent-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentIconsOutdentPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentIconsOutdentPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\icons\\outdent.png"
	name := "static/generator/ckeditor/plugins/indent/icons/outdent.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/indent/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/indent/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/indent/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/indent/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/indent/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/indent/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/indent/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/indent/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/indent/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/indent/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/indent/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/indent/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/indent/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/indent/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/indent/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/indent/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/indent/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/indent/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/indent/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/indent/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/indent/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/indent/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/indent/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/indent/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/indent/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/indent/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/indent/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/indent/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/indent/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/indent/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/indent/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/indent/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/indent/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/indent/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/indent/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/indent/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/indent/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/indent/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/indent/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/indent/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/indent/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/indent/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/indent/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/indent/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/indent/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/indent/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/indent/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/indent/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/indent/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/indent/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/indent/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/indent/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/indent/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/indent/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/indent/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/indent/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/indent/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/indent/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/indent/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/indent/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indent\\plugin.js"
	name := "static/generator/ckeditor/plugins/indent/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentblockPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentblockPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indentblock\\plugin.js"
	name := "static/generator/ckeditor/plugins/indentblock/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsIndentlistPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsIndentlistPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\indentlist\\plugin.js"
	name := "static/generator/ckeditor/plugins/indentlist/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyblockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyblockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\hidpi\\justifyblock.png"
	name := "static/generator/ckeditor/plugins/justify/icons/hidpi/justifyblock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifycenterPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifycenterPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\hidpi\\justifycenter.png"
	name := "static/generator/ckeditor/plugins/justify/icons/hidpi/justifycenter.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyleftPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyleftPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\hidpi\\justifyleft.png"
	name := "static/generator/ckeditor/plugins/justify/icons/hidpi/justifyleft.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyrightPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyrightPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\hidpi\\justifyright.png"
	name := "static/generator/ckeditor/plugins/justify/icons/hidpi/justifyright.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsJustifyblockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsJustifyblockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\justifyblock.png"
	name := "static/generator/ckeditor/plugins/justify/icons/justifyblock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsJustifycenterPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsJustifycenterPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\justifycenter.png"
	name := "static/generator/ckeditor/plugins/justify/icons/justifycenter.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsJustifyleftPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsJustifyleftPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\justifyleft.png"
	name := "static/generator/ckeditor/plugins/justify/icons/justifyleft.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyIconsJustifyrightPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyIconsJustifyrightPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\icons\\justifyright.png"
	name := "static/generator/ckeditor/plugins/justify/icons/justifyright.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/justify/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/justify/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/justify/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/justify/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/justify/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/justify/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/justify/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/justify/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/justify/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/justify/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/justify/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/justify/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/justify/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/justify/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/justify/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/justify/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/justify/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/justify/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/justify/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/justify/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/justify/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/justify/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/justify/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/justify/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/justify/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/justify/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/justify/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/justify/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/justify/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/justify/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/justify/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/justify/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/justify/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/justify/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/justify/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/justify/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/justify/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/justify/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/justify/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/justify/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/justify/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/justify/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/justify/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/justify/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/justify/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/justify/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/justify/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/justify/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/justify/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/justify/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/justify/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/justify/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/justify/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/justify/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/justify/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/justify/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/justify/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/justify/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/justify/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/justify/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsJustifyPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsJustifyPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\justify\\plugin.js"
	name := "static/generator/ckeditor/plugins/justify/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageIconsHidpiLanguagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageIconsHidpiLanguagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\icons\\hidpi\\language.png"
	name := "static/generator/ckeditor/plugins/language/icons/hidpi/language.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageIconsLanguagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageIconsLanguagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\icons\\language.png"
	name := "static/generator/ckeditor/plugins/language/icons/language.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/language/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/language/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/language/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/language/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/language/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/language/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/language/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/language/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/language/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/language/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/language/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/language/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/language/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/language/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/language/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/language/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/language/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/language/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/language/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/language/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/language/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/language/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/language/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/language/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/language/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/language/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/language/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/language/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/language/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/language/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/language/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/language/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/language/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/language/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/language/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/language/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/language/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/language/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/language/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/language/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/language/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/language/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/language/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/language/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/language/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/language/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/language/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguageLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguageLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/language/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLanguagePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLanguagePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\language\\plugin.js"
	name := "static/generator/ckeditor/plugins/language/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkDialogsAnchorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkDialogsAnchorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\dialogs\\anchor.js"
	name := "static/generator/ckeditor/plugins/link/dialogs/anchor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkDialogsLinkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkDialogsLinkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\dialogs\\link.js"
	name := "static/generator/ckeditor/plugins/link/dialogs/link.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsAnchorRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsAnchorRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\anchor-rtl.png"
	name := "static/generator/ckeditor/plugins/link/icons/anchor-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsAnchorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsAnchorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\anchor.png"
	name := "static/generator/ckeditor/plugins/link/icons/anchor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\hidpi\\anchor-rtl.png"
	name := "static/generator/ckeditor/plugins/link/icons/hidpi/anchor-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\hidpi\\anchor.png"
	name := "static/generator/ckeditor/plugins/link/icons/hidpi/anchor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsHidpiLinkPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsHidpiLinkPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\hidpi\\link.png"
	name := "static/generator/ckeditor/plugins/link/icons/hidpi/link.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsHidpiUnlinkPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsHidpiUnlinkPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\hidpi\\unlink.png"
	name := "static/generator/ckeditor/plugins/link/icons/hidpi/unlink.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsLinkPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsLinkPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\link.png"
	name := "static/generator/ckeditor/plugins/link/icons/link.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkIconsUnlinkPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkIconsUnlinkPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\icons\\unlink.png"
	name := "static/generator/ckeditor/plugins/link/icons/unlink.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkImagesAnchorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkImagesAnchorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\images\\anchor.png"
	name := "static/generator/ckeditor/plugins/link/images/anchor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkImagesHidpiAnchorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkImagesHidpiAnchorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\images\\hidpi\\anchor.png"
	name := "static/generator/ckeditor/plugins/link/images/hidpi/anchor.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/link/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/link/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/link/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/link/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/link/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/link/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/link/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/link/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/link/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/link/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/link/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/link/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/link/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/link/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/link/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/link/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/link/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/link/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/link/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/link/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/link/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/link/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/link/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/link/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/link/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/link/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/link/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/link/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/link/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/link/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/link/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/link/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/link/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/link/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/link/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/link/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/link/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/link/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/link/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/link/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/link/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/link/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/link/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/link/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/link/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/link/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/link/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/link/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/link/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/link/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/link/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/link/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/link/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/link/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/link/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/link/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/link/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/link/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/link/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/link/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/link/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/link/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/link/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/link/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/link/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/link/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/link/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/link/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/link/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsLinkPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsLinkPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\link\\plugin.js"
	name := "static/generator/ckeditor/plugins/link/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsBulletedlistRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsBulletedlistRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\bulletedlist-rtl.png"
	name := "static/generator/ckeditor/plugins/list/icons/bulletedlist-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsBulletedlistPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsBulletedlistPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\bulletedlist.png"
	name := "static/generator/ckeditor/plugins/list/icons/bulletedlist.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\hidpi\\bulletedlist-rtl.png"
	name := "static/generator/ckeditor/plugins/list/icons/hidpi/bulletedlist-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\hidpi\\bulletedlist.png"
	name := "static/generator/ckeditor/plugins/list/icons/hidpi/bulletedlist.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\hidpi\\numberedlist-rtl.png"
	name := "static/generator/ckeditor/plugins/list/icons/hidpi/numberedlist-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\hidpi\\numberedlist.png"
	name := "static/generator/ckeditor/plugins/list/icons/hidpi/numberedlist.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsNumberedlistRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsNumberedlistRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\numberedlist-rtl.png"
	name := "static/generator/ckeditor/plugins/list/icons/numberedlist-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListIconsNumberedlistPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListIconsNumberedlistPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\icons\\numberedlist.png"
	name := "static/generator/ckeditor/plugins/list/icons/numberedlist.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/list/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/list/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/list/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/list/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/list/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/list/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/list/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/list/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/list/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/list/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/list/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/list/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/list/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/list/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/list/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/list/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/list/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/list/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/list/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/list/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/list/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/list/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/list/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/list/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/list/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/list/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/list/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/list/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/list/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/list/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/list/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/list/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/list/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/list/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/list/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/list/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/list/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/list/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/list/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/list/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/list/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/list/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/list/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/list/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/list/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/list/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/list/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/list/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/list/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/list/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/list/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/list/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/list/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/list/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/list/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/list/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/list/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/list/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/list/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/list/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/list/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/list/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/list/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/list/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/list/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/list/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/list/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/list/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/list/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\list\\plugin.js"
	name := "static/generator/ckeditor/plugins/list/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListblockPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListblockPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\listblock\\plugin.js"
	name := "static/generator/ckeditor/plugins/listblock/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleDialogsListstyleJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleDialogsListstyleJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\dialogs\\liststyle.js"
	name := "static/generator/ckeditor/plugins/liststyle/dialogs/liststyle.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstyleLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstyleLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/liststyle/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsListstylePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsListstylePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\liststyle\\plugin.js"
	name := "static/generator/ckeditor/plugins/liststyle/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineDevMagiclineHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineDevMagiclineHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\dev\\magicline.html"
	name := "static/generator/ckeditor/plugins/magicline/dev/magicline.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\images\\hidpi\\icon-rtl.png"
	name := "static/generator/ckeditor/plugins/magicline/images/hidpi/icon-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\images\\hidpi\\icon.png"
	name := "static/generator/ckeditor/plugins/magicline/images/hidpi/icon.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineImagesIconRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineImagesIconRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\images\\icon-rtl.png"
	name := "static/generator/ckeditor/plugins/magicline/images/icon-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineImagesIconPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineImagesIconPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\images\\icon.png"
	name := "static/generator/ckeditor/plugins/magicline/images/icon.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/magicline/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclinePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclinePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\plugin.js"
	name := "static/generator/ckeditor/plugins/magicline/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMagiclineSamplesMagiclineHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMagiclineSamplesMagiclineHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\magicline\\samples\\magicline.html"
	name := "static/generator/ckeditor/plugins/magicline/samples/magicline.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeIconsHidpiMaximizePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeIconsHidpiMaximizePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\icons\\hidpi\\maximize.png"
	name := "static/generator/ckeditor/plugins/maximize/icons/hidpi/maximize.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeIconsMaximizePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeIconsMaximizePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\icons\\maximize.png"
	name := "static/generator/ckeditor/plugins/maximize/icons/maximize.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizeLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizeLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/maximize/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMaximizePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMaximizePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\maximize\\plugin.js"
	name := "static/generator/ckeditor/plugins/maximize/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMenuPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMenuPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\menu\\plugin.js"
	name := "static/generator/ckeditor/plugins/menu/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsMenubuttonPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsMenubuttonPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\menubutton\\plugin.js"
	name := "static/generator/ckeditor/plugins/menubutton/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpageRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpageRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\icons\\hidpi\\newpage-rtl.png"
	name := "static/generator/ckeditor/plugins/newpage/icons/hidpi/newpage-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\icons\\hidpi\\newpage.png"
	name := "static/generator/ckeditor/plugins/newpage/icons/hidpi/newpage.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageIconsNewpageRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageIconsNewpageRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\icons\\newpage-rtl.png"
	name := "static/generator/ckeditor/plugins/newpage/icons/newpage-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageIconsNewpagePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageIconsNewpagePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\icons\\newpage.png"
	name := "static/generator/ckeditor/plugins/newpage/icons/newpage.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpageLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpageLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/newpage/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsNewpagePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsNewpagePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\newpage\\plugin.js"
	name := "static/generator/ckeditor/plugins/newpage/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\icons\\hidpi\\pagebreak-rtl.png"
	name := "static/generator/ckeditor/plugins/pagebreak/icons/hidpi/pagebreak-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\icons\\hidpi\\pagebreak.png"
	name := "static/generator/ckeditor/plugins/pagebreak/icons/hidpi/pagebreak.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakIconsPagebreakRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakIconsPagebreakRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\icons\\pagebreak-rtl.png"
	name := "static/generator/ckeditor/plugins/pagebreak/icons/pagebreak-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakIconsPagebreakPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakIconsPagebreakPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\icons\\pagebreak.png"
	name := "static/generator/ckeditor/plugins/pagebreak/icons/pagebreak.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakImagesPagebreakGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakImagesPagebreakGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\images\\pagebreak.gif"
	name := "static/generator/ckeditor/plugins/pagebreak/images/pagebreak.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/pagebreak/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPagebreakPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPagebreakPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pagebreak\\plugin.js"
	name := "static/generator/ckeditor/plugins/pagebreak/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPanelPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPanelPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\panel\\plugin.js"
	name := "static/generator/ckeditor/plugins/panel/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPanelbuttonPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPanelbuttonPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\panelbutton\\plugin.js"
	name := "static/generator/ckeditor/plugins/panelbutton/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordFilterDefaultJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordFilterDefaultJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\filter\\default.js"
	name := "static/generator/ckeditor/plugins/pastefromword/filter/default.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\icons\\hidpi\\pastefromword-rtl.png"
	name := "static/generator/ckeditor/plugins/pastefromword/icons/hidpi/pastefromword-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\icons\\hidpi\\pastefromword.png"
	name := "static/generator/ckeditor/plugins/pastefromword/icons/hidpi/pastefromword.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\icons\\pastefromword-rtl.png"
	name := "static/generator/ckeditor/plugins/pastefromword/icons/pastefromword-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\icons\\pastefromword.png"
	name := "static/generator/ckeditor/plugins/pastefromword/icons/pastefromword.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/pastefromword/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastefromwordPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastefromwordPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastefromword\\plugin.js"
	name := "static/generator/ckeditor/plugins/pastefromword/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\icons\\hidpi\\pastetext-rtl.png"
	name := "static/generator/ckeditor/plugins/pastetext/icons/hidpi/pastetext-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\icons\\hidpi\\pastetext.png"
	name := "static/generator/ckeditor/plugins/pastetext/icons/hidpi/pastetext.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextIconsPastetextRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextIconsPastetextRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\icons\\pastetext-rtl.png"
	name := "static/generator/ckeditor/plugins/pastetext/icons/pastetext-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextIconsPastetextPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextIconsPastetextPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\icons\\pastetext.png"
	name := "static/generator/ckeditor/plugins/pastetext/icons/pastetext.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/pastetext/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPastetextPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPastetextPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\pastetext\\plugin.js"
	name := "static/generator/ckeditor/plugins/pastetext/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPopupPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPopupPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\popup\\plugin.js"
	name := "static/generator/ckeditor/plugins/popup/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\icons\\hidpi\\preview-rtl.png"
	name := "static/generator/ckeditor/plugins/preview/icons/hidpi/preview-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\icons\\hidpi\\preview.png"
	name := "static/generator/ckeditor/plugins/preview/icons/hidpi/preview.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewIconsPreviewRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewIconsPreviewRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\icons\\preview-rtl.png"
	name := "static/generator/ckeditor/plugins/preview/icons/preview-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewIconsPreviewPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewIconsPreviewPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\icons\\preview.png"
	name := "static/generator/ckeditor/plugins/preview/icons/preview.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/preview/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/preview/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/preview/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/preview/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/preview/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/preview/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/preview/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/preview/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/preview/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/preview/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/preview/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/preview/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/preview/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/preview/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/preview/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/preview/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/preview/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/preview/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/preview/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/preview/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/preview/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/preview/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/preview/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/preview/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/preview/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/preview/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/preview/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/preview/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/preview/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/preview/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/preview/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/preview/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/preview/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/preview/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/preview/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/preview/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/preview/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/preview/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/preview/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/preview/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/preview/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/preview/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/preview/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/preview/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/preview/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/preview/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/preview/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/preview/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/preview/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/preview/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/preview/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/preview/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/preview/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/preview/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/preview/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/preview/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/preview/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/preview/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/preview/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/preview/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\plugin.js"
	name := "static/generator/ckeditor/plugins/preview/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPreviewPreviewHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPreviewPreviewHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\preview\\preview.html"
	name := "static/generator/ckeditor/plugins/preview/preview.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintIconsHidpiPrintPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintIconsHidpiPrintPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\icons\\hidpi\\print.png"
	name := "static/generator/ckeditor/plugins/print/icons/hidpi/print.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintIconsPrintPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintIconsPrintPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\icons\\print.png"
	name := "static/generator/ckeditor/plugins/print/icons/print.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/print/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/print/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/print/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/print/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/print/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/print/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/print/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/print/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/print/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/print/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/print/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/print/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/print/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/print/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/print/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/print/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/print/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/print/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/print/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/print/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/print/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/print/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/print/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/print/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/print/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/print/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/print/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/print/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/print/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/print/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/print/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/print/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/print/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/print/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/print/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/print/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/print/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/print/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/print/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/print/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/print/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/print/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/print/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/print/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/print/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/print/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/print/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/print/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/print/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/print/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/print/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/print/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/print/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/print/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/print/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/print/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/print/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/print/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/print/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/print/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/print/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/print/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/print/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/print/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/print/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/print/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/print/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/print/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/print/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsPrintPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsPrintPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\print\\plugin.js"
	name := "static/generator/ckeditor/plugins/print/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatIconsHidpiRemoveformatPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatIconsHidpiRemoveformatPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\icons\\hidpi\\removeformat.png"
	name := "static/generator/ckeditor/plugins/removeformat/icons/hidpi/removeformat.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatIconsRemoveformatPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatIconsRemoveformatPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\icons\\removeformat.png"
	name := "static/generator/ckeditor/plugins/removeformat/icons/removeformat.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/removeformat/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRemoveformatPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRemoveformatPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\removeformat\\plugin.js"
	name := "static/generator/ckeditor/plugins/removeformat/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsResizePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsResizePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\resize\\plugin.js"
	name := "static/generator/ckeditor/plugins/resize/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsRichcomboPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsRichcomboPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\richcombo\\plugin.js"
	name := "static/generator/ckeditor/plugins/richcombo/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveIconsHidpiSavePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveIconsHidpiSavePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\icons\\hidpi\\save.png"
	name := "static/generator/ckeditor/plugins/save/icons/hidpi/save.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveIconsSavePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveIconsSavePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\icons\\save.png"
	name := "static/generator/ckeditor/plugins/save/icons/save.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/save/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/save/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/save/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/save/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/save/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/save/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/save/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/save/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/save/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/save/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/save/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/save/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/save/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/save/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/save/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/save/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/save/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/save/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/save/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/save/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/save/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/save/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/save/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/save/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/save/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/save/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/save/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/save/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/save/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/save/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/save/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/save/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/save/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/save/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/save/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/save/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/save/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/save/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/save/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/save/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/save/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/save/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/save/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/save/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/save/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/save/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/save/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/save/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/save/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/save/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/save/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/save/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/save/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/save/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/save/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/save/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/save/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/save/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/save/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/save/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/save/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/save/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/save/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/save/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/save/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/save/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/save/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/save/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSaveLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSaveLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/save/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSavePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSavePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\save\\plugin.js"
	name := "static/generator/ckeditor/plugins/save/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytChangelogMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytChangelogMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\CHANGELOG.md"
	name := "static/generator/ckeditor/plugins/scayt/CHANGELOG.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLicenseMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLicenseMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\LICENSE.md"
	name := "static/generator/ckeditor/plugins/scayt/LICENSE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytReadmeMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytReadmeMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\README.md"
	name := "static/generator/ckeditor/plugins/scayt/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytDialogsOptionsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytDialogsOptionsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\dialogs\\options.js"
	name := "static/generator/ckeditor/plugins/scayt/dialogs/options.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytDialogsToolbarCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytDialogsToolbarCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\dialogs\\toolbar.css"
	name := "static/generator/ckeditor/plugins/scayt/dialogs/toolbar.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytIconsHidpiScaytPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytIconsHidpiScaytPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\icons\\hidpi\\scayt.png"
	name := "static/generator/ckeditor/plugins/scayt/icons/hidpi/scayt.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytIconsScaytPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytIconsScaytPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\icons\\scayt.png"
	name := "static/generator/ckeditor/plugins/scayt/icons/scayt.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/scayt/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\plugin.js"
	name := "static/generator/ckeditor/plugins/scayt/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsScaytSkinsMoonoLisaScaytCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsScaytSkinsMoonoLisaScaytCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\scayt\\skins\\moono-lisa\\scayt.css"
	name := "static/generator/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallIconsHidpiSelectallPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallIconsHidpiSelectallPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\icons\\hidpi\\selectall.png"
	name := "static/generator/ckeditor/plugins/selectall/icons/hidpi/selectall.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallIconsSelectallPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallIconsSelectallPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\icons\\selectall.png"
	name := "static/generator/ckeditor/plugins/selectall/icons/selectall.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/selectall/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSelectallPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSelectallPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\selectall\\plugin.js"
	name := "static/generator/ckeditor/plugins/selectall/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\icons\\hidpi\\showblocks-rtl.png"
	name := "static/generator/ckeditor/plugins/showblocks/icons/hidpi/showblocks-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\icons\\hidpi\\showblocks.png"
	name := "static/generator/ckeditor/plugins/showblocks/icons/hidpi/showblocks.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksIconsShowblocksRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksIconsShowblocksRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\icons\\showblocks-rtl.png"
	name := "static/generator/ckeditor/plugins/showblocks/icons/showblocks-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksIconsShowblocksPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksIconsShowblocksPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\icons\\showblocks.png"
	name := "static/generator/ckeditor/plugins/showblocks/icons/showblocks.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_addressPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_addressPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_address.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_address.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_blockquotePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_blockquotePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_blockquote.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_blockquote.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_divPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_divPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_div.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_div.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_h1Png reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_h1Png() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_h1.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_h1.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_h2Png reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_h2Png() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_h2.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_h2.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_h3Png reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_h3Png() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_h3.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_h3.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_h4Png reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_h4Png() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_h4.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_h4.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_h5Png reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_h5Png() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_h5.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_h5.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_h6Png reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_h6Png() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_h6.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_h6.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_pPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_pPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_p.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_p.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksImagesBlock_prePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksImagesBlock_prePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\images\\block_pre.png"
	name := "static/generator/ckeditor/plugins/showblocks/images/block_pre.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/showblocks/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowblocksPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowblocksPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showblocks\\plugin.js"
	name := "static/generator/ckeditor/plugins/showblocks/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsShowbordersPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsShowbordersPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\showborders\\plugin.js"
	name := "static/generator/ckeditor/plugins/showborders/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyDialogsSmileyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyDialogsSmileyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\dialogs\\smiley.js"
	name := "static/generator/ckeditor/plugins/smiley/dialogs/smiley.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyIconsHidpiSmileyPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyIconsHidpiSmileyPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\icons\\hidpi\\smiley.png"
	name := "static/generator/ckeditor/plugins/smiley/icons/hidpi/smiley.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyIconsSmileyPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyIconsSmileyPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\icons\\smiley.png"
	name := "static/generator/ckeditor/plugins/smiley/icons/smiley.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesAngel_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesAngel_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\angel_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/angel_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesAngel_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesAngel_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\angel_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/angel_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesAngry_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesAngry_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\angry_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/angry_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesAngry_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesAngry_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\angry_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/angry_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesBroken_heartGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesBroken_heartGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\broken_heart.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/broken_heart.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesBroken_heartPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesBroken_heartPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\broken_heart.png"
	name := "static/generator/ckeditor/plugins/smiley/images/broken_heart.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesConfused_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesConfused_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\confused_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/confused_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesConfused_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesConfused_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\confused_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/confused_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesCry_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesCry_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\cry_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/cry_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesCry_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesCry_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\cry_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/cry_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesDevil_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesDevil_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\devil_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/devil_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesDevil_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesDevil_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\devil_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/devil_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesEmbaressed_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesEmbaressed_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\embaressed_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/embaressed_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\embarrassed_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/embarrassed_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\embarrassed_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/embarrassed_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesEnvelopeGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesEnvelopeGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\envelope.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/envelope.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesEnvelopePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesEnvelopePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\envelope.png"
	name := "static/generator/ckeditor/plugins/smiley/images/envelope.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesHeartGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesHeartGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\heart.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/heart.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesHeartPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesHeartPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\heart.png"
	name := "static/generator/ckeditor/plugins/smiley/images/heart.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesKissGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesKissGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\kiss.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/kiss.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesKissPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesKissPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\kiss.png"
	name := "static/generator/ckeditor/plugins/smiley/images/kiss.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesLightbulbGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesLightbulbGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\lightbulb.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/lightbulb.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesLightbulbPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesLightbulbPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\lightbulb.png"
	name := "static/generator/ckeditor/plugins/smiley/images/lightbulb.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesOmg_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesOmg_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\omg_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/omg_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesOmg_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesOmg_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\omg_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/omg_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesRegular_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesRegular_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\regular_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/regular_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesRegular_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesRegular_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\regular_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/regular_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesSad_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesSad_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\sad_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/sad_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesSad_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesSad_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\sad_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/sad_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesShades_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesShades_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\shades_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/shades_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesShades_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesShades_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\shades_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/shades_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesTeeth_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesTeeth_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\teeth_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/teeth_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesTeeth_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesTeeth_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\teeth_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/teeth_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesThumbs_downGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesThumbs_downGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\thumbs_down.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/thumbs_down.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesThumbs_downPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesThumbs_downPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\thumbs_down.png"
	name := "static/generator/ckeditor/plugins/smiley/images/thumbs_down.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesThumbs_upGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesThumbs_upGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\thumbs_up.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/thumbs_up.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesThumbs_upPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesThumbs_upPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\thumbs_up.png"
	name := "static/generator/ckeditor/plugins/smiley/images/thumbs_up.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesTongue_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesTongue_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\tongue_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/tongue_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesTongue_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesTongue_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\tongue_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/tongue_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesTounge_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesTounge_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\tounge_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/tounge_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\whatchutalkingabout_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\whatchutalkingabout_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesWink_smileGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesWink_smileGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\wink_smile.gif"
	name := "static/generator/ckeditor/plugins/smiley/images/wink_smile.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyImagesWink_smilePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyImagesWink_smilePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\images\\wink_smile.png"
	name := "static/generator/ckeditor/plugins/smiley/images/wink_smile.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/smiley/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSmileyPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSmileyPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\smiley\\plugin.js"
	name := "static/generator/ckeditor/plugins/smiley/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourceRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourceRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\icons\\hidpi\\source-rtl.png"
	name := "static/generator/ckeditor/plugins/sourcearea/icons/hidpi/source-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourcePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourcePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\icons\\hidpi\\source.png"
	name := "static/generator/ckeditor/plugins/sourcearea/icons/hidpi/source.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaIconsSourceRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaIconsSourceRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\icons\\source-rtl.png"
	name := "static/generator/ckeditor/plugins/sourcearea/icons/source-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaIconsSourcePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaIconsSourcePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\icons\\source.png"
	name := "static/generator/ckeditor/plugins/sourcearea/icons/source.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/sourcearea/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSourceareaPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSourceareaPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\sourcearea\\plugin.js"
	name := "static/generator/ckeditor/plugins/sourcearea/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLang_translationstatusTxt reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLang_translationstatusTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\_translationstatus.txt"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/_translationstatus.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharDialogsSpecialcharJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharDialogsSpecialcharJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\dialogs\\specialchar.js"
	name := "static/generator/ckeditor/plugins/specialchar/dialogs/specialchar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharIconsHidpiSpecialcharPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharIconsHidpiSpecialcharPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\icons\\hidpi\\specialchar.png"
	name := "static/generator/ckeditor/plugins/specialchar/icons/hidpi/specialchar.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharIconsSpecialcharPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharIconsSpecialcharPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\icons\\specialchar.png"
	name := "static/generator/ckeditor/plugins/specialchar/icons/specialchar.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLang_translationstatusTxt reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLang_translationstatusTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\_translationstatus.txt"
	name := "static/generator/ckeditor/plugins/specialchar/lang/_translationstatus.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/specialchar/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsSpecialcharPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsSpecialcharPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\specialchar\\plugin.js"
	name := "static/generator/ckeditor/plugins/specialchar/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/stylescombo/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsStylescomboPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsStylescomboPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\stylescombo\\plugin.js"
	name := "static/generator/ckeditor/plugins/stylescombo/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTabPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTabPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\tab\\plugin.js"
	name := "static/generator/ckeditor/plugins/tab/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableDialogsTableJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableDialogsTableJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\dialogs\\table.js"
	name := "static/generator/ckeditor/plugins/table/dialogs/table.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableIconsHidpiTablePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableIconsHidpiTablePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\icons\\hidpi\\table.png"
	name := "static/generator/ckeditor/plugins/table/icons/hidpi/table.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableIconsTablePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableIconsTablePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\icons\\table.png"
	name := "static/generator/ckeditor/plugins/table/icons/table.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/table/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/table/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/table/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/table/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/table/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/table/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/table/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/table/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/table/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/table/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/table/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/table/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/table/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/table/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/table/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/table/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/table/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/table/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/table/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/table/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/table/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/table/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/table/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/table/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/table/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/table/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/table/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/table/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/table/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/table/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/table/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/table/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/table/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/table/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/table/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/table/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/table/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/table/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/table/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/table/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/table/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/table/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/table/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/table/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/table/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/table/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/table/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/table/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/table/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/table/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/table/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/table/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/table/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/table/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/table/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/table/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/table/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/table/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/table/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/table/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/table/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/table/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/table/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/table/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/table/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/table/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/table/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/table/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTableLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTableLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/table/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTablePluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTablePluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\table\\plugin.js"
	name := "static/generator/ckeditor/plugins/table/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTabletoolsDialogsTablecellJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTabletoolsDialogsTablecellJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\tabletools\\dialogs\\tableCell.js"
	name := "static/generator/ckeditor/plugins/tabletools/dialogs/tableCell.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTabletoolsPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTabletoolsPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\tabletools\\plugin.js"
	name := "static/generator/ckeditor/plugins/tabletools/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\dialogs\\templates.css"
	name := "static/generator/ckeditor/plugins/templates/dialogs/templates.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\dialogs\\templates.js"
	name := "static/generator/ckeditor/plugins/templates/dialogs/templates.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\icons\\hidpi\\templates-rtl.png"
	name := "static/generator/ckeditor/plugins/templates/icons/hidpi/templates-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\icons\\hidpi\\templates.png"
	name := "static/generator/ckeditor/plugins/templates/icons/hidpi/templates.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesIconsTemplatesRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesIconsTemplatesRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\icons\\templates-rtl.png"
	name := "static/generator/ckeditor/plugins/templates/icons/templates-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesIconsTemplatesPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesIconsTemplatesPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\icons\\templates.png"
	name := "static/generator/ckeditor/plugins/templates/icons/templates.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/templates/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/templates/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/templates/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/templates/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/templates/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/templates/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/templates/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/templates/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/templates/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/templates/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/templates/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/templates/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/templates/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/templates/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/templates/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/templates/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/templates/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/templates/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/templates/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/templates/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/templates/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/templates/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/templates/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/templates/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/templates/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/templates/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/templates/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/templates/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/templates/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/templates/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/templates/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/templates/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/templates/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/templates/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/templates/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/templates/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/templates/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/templates/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/templates/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/templates/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/templates/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/templates/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/templates/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/templates/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/templates/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/templates/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/templates/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/templates/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/templates/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/templates/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/templates/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/templates/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/templates/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/templates/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/templates/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/templates/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/templates/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/templates/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/templates/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/templates/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\plugin.js"
	name := "static/generator/ckeditor/plugins/templates/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesTemplatesDefaultJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesTemplatesDefaultJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\templates\\default.js"
	name := "static/generator/ckeditor/plugins/templates/templates/default.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate1Gif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate1Gif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\templates\\images\\template1.gif"
	name := "static/generator/ckeditor/plugins/templates/templates/images/template1.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate2Gif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate2Gif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\templates\\images\\template2.gif"
	name := "static/generator/ckeditor/plugins/templates/templates/images/template2.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate3Gif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate3Gif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\templates\\templates\\images\\template3.gif"
	name := "static/generator/ckeditor/plugins/templates/templates/images/template3.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/toolbar/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\plugin.js"
	name := "static/generator/ckeditor/plugins/toolbar/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsToolbarSamplesToolbarHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsToolbarSamplesToolbarHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\toolbar\\samples\\toolbar.html"
	name := "static/generator/ckeditor/plugins/toolbar/samples/toolbar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoDevSnapshotHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoDevSnapshotHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\dev\\snapshot.html"
	name := "static/generator/ckeditor/plugins/undo/dev/snapshot.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsHidpiRedoRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsHidpiRedoRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\hidpi\\redo-rtl.png"
	name := "static/generator/ckeditor/plugins/undo/icons/hidpi/redo-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsHidpiRedoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsHidpiRedoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\hidpi\\redo.png"
	name := "static/generator/ckeditor/plugins/undo/icons/hidpi/redo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsHidpiUndoRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsHidpiUndoRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\hidpi\\undo-rtl.png"
	name := "static/generator/ckeditor/plugins/undo/icons/hidpi/undo-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsHidpiUndoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsHidpiUndoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\hidpi\\undo.png"
	name := "static/generator/ckeditor/plugins/undo/icons/hidpi/undo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsRedoRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsRedoRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\redo-rtl.png"
	name := "static/generator/ckeditor/plugins/undo/icons/redo-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsRedoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsRedoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\redo.png"
	name := "static/generator/ckeditor/plugins/undo/icons/redo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsUndoRtlPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsUndoRtlPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\undo-rtl.png"
	name := "static/generator/ckeditor/plugins/undo/icons/undo-rtl.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoIconsUndoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoIconsUndoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\icons\\undo.png"
	name := "static/generator/ckeditor/plugins/undo/icons/undo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/undo/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangAzJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangAzJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\az.js"
	name := "static/generator/ckeditor/plugins/undo/lang/az.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/undo/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/undo/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/undo/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/undo/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/undo/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/undo/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangDeChJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangDeChJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\de-ch.js"
	name := "static/generator/ckeditor/plugins/undo/lang/de-ch.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/undo/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/undo/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/undo/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/undo/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/undo/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/undo/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/undo/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/undo/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/undo/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/undo/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/undo/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/undo/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/undo/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/undo/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/undo/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/undo/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/undo/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/undo/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/undo/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/undo/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/undo/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangIdJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangIdJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\id.js"
	name := "static/generator/ckeditor/plugins/undo/lang/id.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/undo/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/undo/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/undo/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/undo/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/undo/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/undo/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/undo/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/undo/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/undo/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/undo/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangOcJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangOcJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\oc.js"
	name := "static/generator/ckeditor/plugins/undo/lang/oc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/undo/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/undo/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/undo/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\si.js"
	name := "static/generator/ckeditor/plugins/undo/lang/si.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/undo/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/undo/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSqJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSqJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\sq.js"
	name := "static/generator/ckeditor/plugins/undo/lang/sq.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/undo/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/undo/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/undo/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/undo/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/undo/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangTtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangTtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\tt.js"
	name := "static/generator/ckeditor/plugins/undo/lang/tt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/undo/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/undo/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/undo/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/undo/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/undo/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsUndoPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsUndoPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\undo\\plugin.js"
	name := "static/generator/ckeditor/plugins/undo/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWidgetImagesHandlePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWidgetImagesHandlePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\widget\\images\\handle.png"
	name := "static/generator/ckeditor/plugins/widget/images/handle.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLicenseMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLicenseMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\LICENSE.md"
	name := "static/generator/ckeditor/plugins/wsc/LICENSE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscReadmeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscReadmeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\README.js"
	name := "static/generator/ckeditor/plugins/wsc/README.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscReadmeMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscReadmeMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\README.md"
	name := "static/generator/ckeditor/plugins/wsc/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscDialogsCiframeHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscDialogsCiframeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\dialogs\\ciframe.html"
	name := "static/generator/ckeditor/plugins/wsc/dialogs/ciframe.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscDialogsTmpHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscDialogsTmpHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\dialogs\\tmp.html"
	name := "static/generator/ckeditor/plugins/wsc/dialogs/tmp.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscDialogsTmpframesetHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscDialogsTmpframesetHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\dialogs\\tmpFrameset.html"
	name := "static/generator/ckeditor/plugins/wsc/dialogs/tmpFrameset.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscDialogsWscCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscDialogsWscCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\dialogs\\wsc.css"
	name := "static/generator/ckeditor/plugins/wsc/dialogs/wsc.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscDialogsWscJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscDialogsWscJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\dialogs\\wsc.js"
	name := "static/generator/ckeditor/plugins/wsc/dialogs/wsc.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscDialogsWsc_ieJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscDialogsWsc_ieJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\dialogs\\wsc_ie.js"
	name := "static/generator/ckeditor/plugins/wsc/dialogs/wsc_ie.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscIconsHidpiSpellcheckerPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscIconsHidpiSpellcheckerPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\icons\\hidpi\\spellchecker.png"
	name := "static/generator/ckeditor/plugins/wsc/icons/hidpi/spellchecker.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscIconsSpellcheckerPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscIconsSpellcheckerPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\icons\\spellchecker.png"
	name := "static/generator/ckeditor/plugins/wsc/icons/spellchecker.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangAfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangAfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\af.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/af.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangArJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangArJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ar.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ar.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangBgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangBgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\bg.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/bg.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangBnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangBnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\bn.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/bn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangBsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangBsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\bs.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/bs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ca.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangCsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangCsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\cs.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/cs.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangCyJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangCyJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\cy.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/cy.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangDaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangDaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\da.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/da.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangDeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangDeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\de.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/de.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangElJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangElJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\el.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/el.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEnAuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEnAuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\en-au.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/en-au.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEnCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEnCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\en-ca.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/en-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEnGbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEnGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\en-gb.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/en-gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\en.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/en.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\eo.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/eo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\es.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/es.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\et.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/et.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangEuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangEuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\eu.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/eu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangFaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangFaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\fa.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/fa.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangFiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangFiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\fi.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/fi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangFoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangFoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\fo.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/fo.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangFrCaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangFrCaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\fr-ca.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/fr-ca.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangFrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangFrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\fr.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/fr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangGlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangGlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\gl.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/gl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangGuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangGuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\gu.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/gu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangHeJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangHeJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\he.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/he.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangHiJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangHiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\hi.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/hi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangHrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangHrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\hr.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/hr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangHuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangHuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\hu.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/hu.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangIsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangIsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\is.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/is.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangItJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangItJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\it.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/it.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangJaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangJaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ja.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ja.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangKaJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangKaJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ka.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ka.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangKmJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangKmJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\km.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/km.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangKoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangKoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ko.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ko.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangKuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangKuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ku.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ku.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangLtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangLtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\lt.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/lt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangLvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangLvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\lv.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/lv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangMkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangMkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\mk.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/mk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangMnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangMnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\mn.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/mn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangMsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangMsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ms.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ms.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangNbJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangNbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\nb.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/nb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangNlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\nl.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangNoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangNoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\no.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/no.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangPlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangPlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\pl.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/pl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangPtBrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangPtBrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\pt-br.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/pt-br.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangPtJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangPtJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\pt.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/pt.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangRoJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangRoJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ro.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ro.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangRuJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangRuJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ru.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ru.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangSkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangSkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\sk.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/sk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangSlJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangSlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\sl.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/sl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangSrLatnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangSrLatnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\sr-latn.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/sr-latn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangSrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangSrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\sr.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/sr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangSvJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangSvJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\sv.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/sv.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangThJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangThJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\th.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/th.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangTrJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangTrJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\tr.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/tr.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangUgJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangUgJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\ug.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/ug.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangUkJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangUkJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\uk.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/uk.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangViJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangViJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\vi.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/vi.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangZhCnJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangZhCnJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\zh-cn.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/zh-cn.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscLangZhJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscLangZhJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\lang\\zh.js"
	name := "static/generator/ckeditor/plugins/wsc/lang/zh.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\plugin.js"
	name := "static/generator/ckeditor/plugins/wsc/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWscSkinsMoonoLisaWscCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWscSkinsMoonoLisaWscCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wsc\\skins\\moono-lisa\\wsc.css"
	name := "static/generator/ckeditor/plugins/wsc/skins/moono-lisa/wsc.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWysiwygareaPluginJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWysiwygareaPluginJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wysiwygarea\\plugin.js"
	name := "static/generator/ckeditor/plugins/wysiwygarea/plugin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorPluginsWysiwygareaSamplesFullpageHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorPluginsWysiwygareaSamplesFullpageHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\plugins\\wysiwygarea\\samples\\fullpage.html"
	name := "static/generator/ckeditor/plugins/wysiwygarea/samples/fullpage.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAjaxHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAjaxHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\ajax.html"
	name := "static/generator/ckeditor/samples/ajax.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesApiHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesApiHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\api.html"
	name := "static/generator/ckeditor/samples/api.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAppendtoHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAppendtoHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\appendto.html"
	name := "static/generator/ckeditor/samples/appendto.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAssetsInlineallLogoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAssetsInlineallLogoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\assets\\inlineall\\logo.png"
	name := "static/generator/ckeditor/samples/assets/inlineall/logo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAssetsOutputxhtmlOutputxhtmlCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAssetsOutputxhtmlOutputxhtmlCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\assets\\outputxhtml\\outputxhtml.css"
	name := "static/generator/ckeditor/samples/assets/outputxhtml/outputxhtml.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAssetsPosteddataPhp reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAssetsPosteddataPhp() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\assets\\posteddata.php"
	name := "static/generator/ckeditor/samples/assets/posteddata.php"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAssetsSampleCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAssetsSampleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\assets\\sample.css"
	name := "static/generator/ckeditor/samples/assets/sample.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAssetsSampleJpg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAssetsSampleJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\assets\\sample.jpg"
	name := "static/generator/ckeditor/samples/assets/sample.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesAssetsUilanguagesLanguagesJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesAssetsUilanguagesLanguagesJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\assets\\uilanguages\\languages.js"
	name := "static/generator/ckeditor/samples/assets/uilanguages/languages.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesCssSamplesCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesCssSamplesCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\css\\samples.css"
	name := "static/generator/ckeditor/samples/css/samples.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesDatafilteringHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesDatafilteringHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\datafiltering.html"
	name := "static/generator/ckeditor/samples/datafiltering.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesDebugLog reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesDebugLog() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\debug.log"
	name := "static/generator/ckeditor/samples/debug.log"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesDivreplaceHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesDivreplaceHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\divreplace.html"
	name := "static/generator/ckeditor/samples/divreplace.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesImgGithubTopPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesImgGithubTopPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\img\\github-top.png"
	name := "static/generator/ckeditor/samples/img/github-top.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesImgHeaderBgPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesImgHeaderBgPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\img\\header-bg.png"
	name := "static/generator/ckeditor/samples/img/header-bg.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesImgHeaderSeparatorPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesImgHeaderSeparatorPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\img\\header-separator.png"
	name := "static/generator/ckeditor/samples/img/header-separator.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesImgLogoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesImgLogoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\img\\logo.png"
	name := "static/generator/ckeditor/samples/img/logo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesImgNavigationTipPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesImgNavigationTipPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\img\\navigation-tip.png"
	name := "static/generator/ckeditor/samples/img/navigation-tip.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\index.html"
	name := "static/generator/ckeditor/samples/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesInlineallHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesInlineallHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\inlineall.html"
	name := "static/generator/ckeditor/samples/inlineall.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesInlinebycodeHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesInlinebycodeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\inlinebycode.html"
	name := "static/generator/ckeditor/samples/inlinebycode.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesInlinetextareaHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesInlinetextareaHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\inlinetextarea.html"
	name := "static/generator/ckeditor/samples/inlinetextarea.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesJqueryHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesJqueryHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\jquery.html"
	name := "static/generator/ckeditor/samples/jquery.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesJsSampleJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesJsSampleJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\js\\sample.js"
	name := "static/generator/ckeditor/samples/js/sample.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesJsSfJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesJsSfJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\js\\sf.js"
	name := "static/generator/ckeditor/samples/js/sf.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAjaxHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAjaxHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\ajax.html"
	name := "static/generator/ckeditor/samples/old/ajax.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldApiHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldApiHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\api.html"
	name := "static/generator/ckeditor/samples/old/api.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAppendtoHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAppendtoHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\appendto.html"
	name := "static/generator/ckeditor/samples/old/appendto.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAssetsInlineallLogoPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAssetsInlineallLogoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\assets\\inlineall\\logo.png"
	name := "static/generator/ckeditor/samples/old/assets/inlineall/logo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAssetsOutputxhtmlOutputxhtmlCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAssetsOutputxhtmlOutputxhtmlCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\assets\\outputxhtml\\outputxhtml.css"
	name := "static/generator/ckeditor/samples/old/assets/outputxhtml/outputxhtml.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAssetsPosteddataPhp reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAssetsPosteddataPhp() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\assets\\posteddata.php"
	name := "static/generator/ckeditor/samples/old/assets/posteddata.php"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAssetsSampleJpg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAssetsSampleJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\assets\\sample.jpg"
	name := "static/generator/ckeditor/samples/old/assets/sample.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldAssetsUilanguagesLanguagesJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldAssetsUilanguagesLanguagesJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\assets\\uilanguages\\languages.js"
	name := "static/generator/ckeditor/samples/old/assets/uilanguages/languages.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldDatafilteringHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldDatafilteringHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\datafiltering.html"
	name := "static/generator/ckeditor/samples/old/datafiltering.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldDialogAssetsMy_dialogJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldDialogAssetsMy_dialogJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\dialog\\assets\\my_dialog.js"
	name := "static/generator/ckeditor/samples/old/dialog/assets/my_dialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldDialogDialogHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldDialogDialogHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\dialog\\dialog.html"
	name := "static/generator/ckeditor/samples/old/dialog/dialog.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldDivreplaceHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldDivreplaceHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\divreplace.html"
	name := "static/generator/ckeditor/samples/old/divreplace.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldEnterkeyEnterkeyHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldEnterkeyEnterkeyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\enterkey\\enterkey.html"
	name := "static/generator/ckeditor/samples/old/enterkey/enterkey.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashFla reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashFla() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\htmlwriter\\assets\\outputforflash\\outputforflash.fla"
	name := "static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.fla"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashSwf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashSwf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\htmlwriter\\assets\\outputforflash\\outputforflash.swf"
	name := "static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.swf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashSwfobjectJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashSwfobjectJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\htmlwriter\\assets\\outputforflash\\swfobject.js"
	name := "static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/swfobject.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldHtmlwriterOutputforflashHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldHtmlwriterOutputforflashHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\htmlwriter\\outputforflash.html"
	name := "static/generator/ckeditor/samples/old/htmlwriter/outputforflash.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldHtmlwriterOutputhtmlHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldHtmlwriterOutputhtmlHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\htmlwriter\\outputhtml.html"
	name := "static/generator/ckeditor/samples/old/htmlwriter/outputhtml.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\index.html"
	name := "static/generator/ckeditor/samples/old/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldInlineallHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldInlineallHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\inlineall.html"
	name := "static/generator/ckeditor/samples/old/inlineall.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldInlinebycodeHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldInlinebycodeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\inlinebycode.html"
	name := "static/generator/ckeditor/samples/old/inlinebycode.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldInlinetextareaHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldInlinetextareaHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\inlinetextarea.html"
	name := "static/generator/ckeditor/samples/old/inlinetextarea.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldJqueryHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldJqueryHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\jquery.html"
	name := "static/generator/ckeditor/samples/old/jquery.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldMagiclineMagiclineHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldMagiclineMagiclineHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\magicline\\magicline.html"
	name := "static/generator/ckeditor/samples/old/magicline/magicline.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldReadonlyHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldReadonlyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\readonly.html"
	name := "static/generator/ckeditor/samples/old/readonly.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldReplacebyclassHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldReplacebyclassHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\replacebyclass.html"
	name := "static/generator/ckeditor/samples/old/replacebyclass.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldReplacebycodeHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldReplacebycodeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\replacebycode.html"
	name := "static/generator/ckeditor/samples/old/replacebycode.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldSampleCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldSampleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\sample.css"
	name := "static/generator/ckeditor/samples/old/sample.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldSampleJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldSampleJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\sample.js"
	name := "static/generator/ckeditor/samples/old/sample.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldSample_posteddataPhp reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldSample_posteddataPhp() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\sample_posteddata.php"
	name := "static/generator/ckeditor/samples/old/sample_posteddata.php"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldTabindexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldTabindexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\tabindex.html"
	name := "static/generator/ckeditor/samples/old/tabindex.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldToolbarToolbarHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldToolbarToolbarHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\toolbar\\toolbar.html"
	name := "static/generator/ckeditor/samples/old/toolbar/toolbar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldUicolorHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldUicolorHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\uicolor.html"
	name := "static/generator/ckeditor/samples/old/uicolor.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldUilanguagesHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldUilanguagesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\uilanguages.html"
	name := "static/generator/ckeditor/samples/old/uilanguages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldWysiwygareaFullpageHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldWysiwygareaFullpageHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\wysiwygarea\\fullpage.html"
	name := "static/generator/ckeditor/samples/old/wysiwygarea/fullpage.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesOldXhtmlstyleHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesOldXhtmlstyleHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\old\\xhtmlstyle.html"
	name := "static/generator/ckeditor/samples/old/xhtmlstyle.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsDialogAssetsMy_dialogJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsDialogAssetsMy_dialogJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\dialog\\assets\\my_dialog.js"
	name := "static/generator/ckeditor/samples/plugins/dialog/assets/my_dialog.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsDialogDialogHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsDialogDialogHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\dialog\\dialog.html"
	name := "static/generator/ckeditor/samples/plugins/dialog/dialog.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsEnterkeyEnterkeyHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsEnterkeyEnterkeyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\enterkey\\enterkey.html"
	name := "static/generator/ckeditor/samples/plugins/enterkey/enterkey.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashFla reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashFla() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\htmlwriter\\assets\\outputforflash\\outputforflash.fla"
	name := "static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/outputforflash.fla"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashSwf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashSwf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\htmlwriter\\assets\\outputforflash\\outputforflash.swf"
	name := "static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/outputforflash.swf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashSwfobjectJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashSwfobjectJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\htmlwriter\\assets\\outputforflash\\swfobject.js"
	name := "static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/swfobject.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputforflashHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputforflashHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\htmlwriter\\outputforflash.html"
	name := "static/generator/ckeditor/samples/plugins/htmlwriter/outputforflash.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputhtmlHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputhtmlHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\htmlwriter\\outputhtml.html"
	name := "static/generator/ckeditor/samples/plugins/htmlwriter/outputhtml.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsMagiclineMagiclineHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsMagiclineMagiclineHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\magicline\\magicline.html"
	name := "static/generator/ckeditor/samples/plugins/magicline/magicline.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsToolbarToolbarHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsToolbarToolbarHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\toolbar\\toolbar.html"
	name := "static/generator/ckeditor/samples/plugins/toolbar/toolbar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesPluginsWysiwygareaFullpageHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesPluginsWysiwygareaFullpageHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\plugins\\wysiwygarea\\fullpage.html"
	name := "static/generator/ckeditor/samples/plugins/wysiwygarea/fullpage.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesReadonlyHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesReadonlyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\readonly.html"
	name := "static/generator/ckeditor/samples/readonly.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesReplacebyclassHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesReplacebyclassHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\replacebyclass.html"
	name := "static/generator/ckeditor/samples/replacebyclass.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesReplacebycodeHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesReplacebycodeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\replacebycode.html"
	name := "static/generator/ckeditor/samples/replacebycode.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesSampleCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesSampleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\sample.css"
	name := "static/generator/ckeditor/samples/sample.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesSampleJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesSampleJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\sample.js"
	name := "static/generator/ckeditor/samples/sample.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesSample_posteddataPhp reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesSample_posteddataPhp() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\sample_posteddata.php"
	name := "static/generator/ckeditor/samples/sample_posteddata.php"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesTabindexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesTabindexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\tabindex.html"
	name := "static/generator/ckeditor/samples/tabindex.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorBenderJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorBenderJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\bender.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/bender.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorCssFontelloCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorCssFontelloCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\css\\fontello.css"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/css/fontello.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorFontLicenseTxt reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorFontLicenseTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\font\\LICENSE.txt"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/font/LICENSE.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorFontConfigJson reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorFontConfigJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\font\\config.json"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/font/config.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloEot reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloEot() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\font\\fontello.eot"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.eot"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloSvg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\font\\fontello.svg"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloTtf reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloTtf() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\font\\fontello.ttf"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.ttf"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloWoff reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloWoff() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\font\\fontello.woff"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.woff"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorIndexHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\index.html"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorJsAbstracttoolbarmodifierJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorJsAbstracttoolbarmodifierJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\js\\abstracttoolbarmodifier.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/js/abstracttoolbarmodifier.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorJsFulltoolbareditorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorJsFulltoolbareditorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\js\\fulltoolbareditor.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/js/fulltoolbareditor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbarmodifierJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbarmodifierJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\js\\toolbarmodifier.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/js/toolbarmodifier.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbartextmodifierJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbartextmodifierJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\js\\toolbartextmodifier.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/js/toolbartextmodifier.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLessBaseLess reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLessBaseLess() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\less\\base.less"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/less/base.less"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLessToolbarmodifierLess reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLessToolbarmodifierLess() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\less\\toolbarmodifier.less"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/less/toolbarmodifier.less"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorLicense reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorLicense() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\LICENSE"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/LICENSE"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorReadmeMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorReadmeMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\README.md"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\codemirror.css"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\codemirror.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorJavascriptJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorJavascriptJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\javascript.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/javascript.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorNeoCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorNeoCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\neo.css"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/neo.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\show-hint.css"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\lib\\codemirror\\show-hint.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorPackageJson reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorPackageJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\package.json"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/package.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesToolbarconfiguratorTestsOneJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesToolbarconfiguratorTestsOneJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\toolbarconfigurator\\tests\\one.js"
	name := "static/generator/ckeditor/samples/toolbarconfigurator/tests/one.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesUicolorHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesUicolorHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\uicolor.html"
	name := "static/generator/ckeditor/samples/uicolor.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesUilanguagesHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesUilanguagesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\uilanguages.html"
	name := "static/generator/ckeditor/samples/uilanguages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSamplesXhtmlstyleHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSamplesXhtmlstyleHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\samples\\xhtmlstyle.html"
	name := "static/generator/ckeditor/samples/xhtmlstyle.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssDialogCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssDialogCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\dialog.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\dialog_ie.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie7Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie7Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\dialog_ie7.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie7.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\dialog_ie8.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\dialog_iequirks.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_operaCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_operaCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\dialog_opera.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_opera.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssEditorCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssEditorCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\editor.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/editor.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_geckoCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_geckoCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\editor_gecko.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_gecko.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\editor_ie.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie7Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie7Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\editor_ie7.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie7.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\editor_ie8.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\.temp\\css\\editor_iequirks.css"
	name := "static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDevIcons16Svg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDevIcons16Svg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dev\\icons16.svg"
	name := "static/generator/ckeditor/skins/bootstrapck/dev/icons16.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDevIcons32Svg reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDevIcons32Svg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dev\\icons32.svg"
	name := "static/generator/ckeditor/skins/bootstrapck/dev/icons32.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDevLocationsJson reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDevLocationsJson() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dev\\locations.json"
	name := "static/generator/ckeditor/skins/bootstrapck/dev/locations.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDialogCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDialogCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dialog.css"
	name := "static/generator/ckeditor/skins/bootstrapck/dialog.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDialog_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDialog_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dialog_ie.css"
	name := "static/generator/ckeditor/skins/bootstrapck/dialog_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDialog_ie7Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDialog_ie7Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dialog_ie7.css"
	name := "static/generator/ckeditor/skins/bootstrapck/dialog_ie7.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDialog_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDialog_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dialog_ie8.css"
	name := "static/generator/ckeditor/skins/bootstrapck/dialog_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDialog_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDialog_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dialog_iequirks.css"
	name := "static/generator/ckeditor/skins/bootstrapck/dialog_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckDialog_operaCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckDialog_operaCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\dialog_opera.css"
	name := "static/generator/ckeditor/skins/bootstrapck/dialog_opera.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckEditorCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckEditorCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\editor.css"
	name := "static/generator/ckeditor/skins/bootstrapck/editor.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckEditor_geckoCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckEditor_geckoCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\editor_gecko.css"
	name := "static/generator/ckeditor/skins/bootstrapck/editor_gecko.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckEditor_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckEditor_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\editor_ie.css"
	name := "static/generator/ckeditor/skins/bootstrapck/editor_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckEditor_ie7Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckEditor_ie7Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\editor_ie7.css"
	name := "static/generator/ckeditor/skins/bootstrapck/editor_ie7.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckEditor_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckEditor_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\editor_ie8.css"
	name := "static/generator/ckeditor/skins/bootstrapck/editor_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckEditor_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckEditor_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\editor_iequirks.css"
	name := "static/generator/ckeditor/skins/bootstrapck/editor_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckIconsPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckIconsPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\icons.png"
	name := "static/generator/ckeditor/skins/bootstrapck/icons.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckIcons_hidpiPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckIcons_hidpiPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\icons_hidpi.png"
	name := "static/generator/ckeditor/skins/bootstrapck/icons_hidpi.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesArrowPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesArrowPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\arrow.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/arrow.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesClosePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesClosePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\close.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/close.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesHidpiClosePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesHidpiClosePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\hidpi\\close.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/hidpi/close.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockOpenPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockOpenPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\hidpi\\lock-open.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/hidpi/lock-open.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\hidpi\\lock.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/hidpi/lock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesHidpiRefreshPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesHidpiRefreshPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\hidpi\\refresh.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/hidpi/refresh.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesLockOpenPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesLockOpenPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\lock-open.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/lock-open.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesLockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesLockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\lock.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/lock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckImagesRefreshPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckImagesRefreshPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\images\\refresh.png"
	name := "static/generator/ckeditor/skins/bootstrapck/images/refresh.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckReadmeMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckReadmeMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\readme.md"
	name := "static/generator/ckeditor/skins/bootstrapck/readme.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckSampleBootstrapckSampleHtml reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckSampleBootstrapckSampleHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\sample\\bootstrapck-sample.html"
	name := "static/generator/ckeditor/skins/bootstrapck/sample/bootstrapck-sample.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckSampleCssBootstrapckSampleCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckSampleCssBootstrapckSampleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\sample\\css\\bootstrapck-sample.css"
	name := "static/generator/ckeditor/skins/bootstrapck/sample/css/bootstrapck-sample.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckSampleJsAnalyticsJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckSampleJsAnalyticsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\sample\\js\\analytics.js"
	name := "static/generator/ckeditor/skins/bootstrapck/sample/js/analytics.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckSampleJsJquery1110MinJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckSampleJsJquery1110MinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\sample\\js\\jquery-1.11.0.min.js"
	name := "static/generator/ckeditor/skins/bootstrapck/sample/js/jquery-1.11.0.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificGeckoEditor_geckoScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificGeckoEditor_geckoScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\gecko\\editor_gecko.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/gecko/editor_gecko.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeDialog_ieScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeDialog_ieScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\ie\\dialog_ie.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie/dialog_ie.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeEditor_ieScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeEditor_ieScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\ie\\editor_ie.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie/editor_ie.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Dialog_ie7Scss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Dialog_ie7Scss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\ie7\\dialog_ie7.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie7/dialog_ie7.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Editor_ie7Scss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Editor_ie7Scss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\ie7\\editor_ie7.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie7/editor_ie7.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Dialog_ie8Scss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Dialog_ie8Scss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\ie8\\dialog_ie8.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie8/dialog_ie8.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Editor_ie8Scss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Editor_ie8Scss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\ie8\\editor_ie8.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie8/editor_ie8.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksDialog_iequirksScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksDialog_iequirksScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\iequirks\\dialog_iequirks.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/iequirks/dialog_iequirks.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksEditor_iequirksScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksEditor_iequirksScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\iequirks\\editor_iequirks.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/iequirks/editor_iequirks.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificOperaDialog_operaScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificOperaDialog_operaScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\browser-specific\\opera\\dialog_opera.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/opera/dialog_opera.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_colorpanelScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_colorpanelScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_colorpanel.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_colorpanel.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_elementspathScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_elementspathScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_elementspath.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_elementspath.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_mainuiScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_mainuiScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_mainui.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_mainui.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_menuScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_menuScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_menu.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_menu.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_panelScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_panelScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_panel.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_panel.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_presetsScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_presetsScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_presets.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_presets.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_resetScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_resetScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_reset.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_reset.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_richcomboScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_richcomboScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_richcombo.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_richcombo.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponents_toolbarScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponents_toolbarScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\_toolbar.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/_toolbar.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssComponentsEditorScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssComponentsEditorScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\components\\editor.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/components/editor.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssConfig_colorsScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssConfig_colorsScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\config\\_colors.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/config/_colors.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssConfig_configScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssConfig_configScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\config\\_config.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/config/_config.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssConfig_defaultsScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssConfig_defaultsScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\config\\_defaults.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/config/_defaults.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckScssDialogDialogScss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckScssDialogDialogScss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\scss\\dialog\\dialog.scss"
	name := "static/generator/ckeditor/skins/bootstrapck/scss/dialog/dialog.scss"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsBootstrapckSkinJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsBootstrapckSkinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\bootstrapck\\skin.js"
	name := "static/generator/ckeditor/skins/bootstrapck/skin.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoDialogCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoDialogCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\dialog.css"
	name := "static/generator/ckeditor/skins/moono/dialog.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoDialog_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoDialog_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\dialog_ie.css"
	name := "static/generator/ckeditor/skins/moono/dialog_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoDialog_ie7Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoDialog_ie7Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\dialog_ie7.css"
	name := "static/generator/ckeditor/skins/moono/dialog_ie7.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoDialog_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoDialog_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\dialog_ie8.css"
	name := "static/generator/ckeditor/skins/moono/dialog_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoDialog_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoDialog_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\dialog_iequirks.css"
	name := "static/generator/ckeditor/skins/moono/dialog_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoDialog_operaCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoDialog_operaCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\dialog_opera.css"
	name := "static/generator/ckeditor/skins/moono/dialog_opera.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoEditorCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoEditorCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\editor.css"
	name := "static/generator/ckeditor/skins/moono/editor.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoEditor_geckoCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoEditor_geckoCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\editor_gecko.css"
	name := "static/generator/ckeditor/skins/moono/editor_gecko.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoEditor_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoEditor_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\editor_ie.css"
	name := "static/generator/ckeditor/skins/moono/editor_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoEditor_ie7Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoEditor_ie7Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\editor_ie7.css"
	name := "static/generator/ckeditor/skins/moono/editor_ie7.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoEditor_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoEditor_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\editor_ie8.css"
	name := "static/generator/ckeditor/skins/moono/editor_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoEditor_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoEditor_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\editor_iequirks.css"
	name := "static/generator/ckeditor/skins/moono/editor_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoIconsPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoIconsPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\icons.png"
	name := "static/generator/ckeditor/skins/moono/icons.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoIcons_hidpiPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoIcons_hidpiPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\icons_hidpi.png"
	name := "static/generator/ckeditor/skins/moono/icons_hidpi.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesArrowPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesArrowPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\arrow.png"
	name := "static/generator/ckeditor/skins/moono/images/arrow.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesClosePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesClosePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\close.png"
	name := "static/generator/ckeditor/skins/moono/images/close.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesHidpiClosePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesHidpiClosePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\hidpi\\close.png"
	name := "static/generator/ckeditor/skins/moono/images/hidpi/close.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesHidpiLockOpenPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesHidpiLockOpenPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\hidpi\\lock-open.png"
	name := "static/generator/ckeditor/skins/moono/images/hidpi/lock-open.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesHidpiLockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesHidpiLockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\hidpi\\lock.png"
	name := "static/generator/ckeditor/skins/moono/images/hidpi/lock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesHidpiRefreshPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesHidpiRefreshPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\hidpi\\refresh.png"
	name := "static/generator/ckeditor/skins/moono/images/hidpi/refresh.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesLockOpenPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesLockOpenPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\lock-open.png"
	name := "static/generator/ckeditor/skins/moono/images/lock-open.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesLockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesLockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\lock.png"
	name := "static/generator/ckeditor/skins/moono/images/lock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoImagesRefreshPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoImagesRefreshPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\images\\refresh.png"
	name := "static/generator/ckeditor/skins/moono/images/refresh.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoReadmeMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoReadmeMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono\\readme.md"
	name := "static/generator/ckeditor/skins/moono/readme.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaDialogCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaDialogCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\dialog.css"
	name := "static/generator/ckeditor/skins/moono-lisa/dialog.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaDialog_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaDialog_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\dialog_ie.css"
	name := "static/generator/ckeditor/skins/moono-lisa/dialog_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaDialog_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaDialog_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\dialog_ie8.css"
	name := "static/generator/ckeditor/skins/moono-lisa/dialog_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaDialog_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaDialog_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\dialog_iequirks.css"
	name := "static/generator/ckeditor/skins/moono-lisa/dialog_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaEditorCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaEditorCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\editor.css"
	name := "static/generator/ckeditor/skins/moono-lisa/editor.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaEditor_geckoCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaEditor_geckoCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\editor_gecko.css"
	name := "static/generator/ckeditor/skins/moono-lisa/editor_gecko.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaEditor_ieCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaEditor_ieCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\editor_ie.css"
	name := "static/generator/ckeditor/skins/moono-lisa/editor_ie.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaEditor_ie8Css reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaEditor_ie8Css() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\editor_ie8.css"
	name := "static/generator/ckeditor/skins/moono-lisa/editor_ie8.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaEditor_iequirksCss reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaEditor_iequirksCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\editor_iequirks.css"
	name := "static/generator/ckeditor/skins/moono-lisa/editor_iequirks.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaIconsPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaIconsPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\icons.png"
	name := "static/generator/ckeditor/skins/moono-lisa/icons.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaIcons_hidpiPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaIcons_hidpiPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\icons_hidpi.png"
	name := "static/generator/ckeditor/skins/moono-lisa/icons_hidpi.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesArrowPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesArrowPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\arrow.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/arrow.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesClosePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesClosePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\close.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/close.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiClosePng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiClosePng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\hidpi\\close.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/hidpi/close.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockOpenPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockOpenPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\hidpi\\lock-open.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/hidpi/lock-open.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\hidpi\\lock.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/hidpi/lock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiRefreshPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiRefreshPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\hidpi\\refresh.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/hidpi/refresh.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesLockOpenPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesLockOpenPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\lock-open.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/lock-open.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesLockPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesLockPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\lock.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/lock.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesRefreshPng reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesRefreshPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\refresh.png"
	name := "static/generator/ckeditor/skins/moono-lisa/images/refresh.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaImagesSpinnerGif reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaImagesSpinnerGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\images\\spinner.gif"
	name := "static/generator/ckeditor/skins/moono-lisa/images/spinner.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorSkinsMoonoLisaReadmeMd reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorSkinsMoonoLisaReadmeMd() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\skins\\moono-lisa\\readme.md"
	name := "static/generator/ckeditor/skins/moono-lisa/readme.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorCkeditorStylesJs reads file data from disk. It returns an error on failure.
func staticGeneratorCkeditorStylesJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\ckeditor\\styles.js"
	name := "static/generator/ckeditor/styles.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsCodeGeneratorJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsCodeGeneratorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\code-generator.js"
	name := "static/generator/js/code-generator.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsGrammarTxt reads file data from disk. It returns an error on failure.
func staticGeneratorJsGrammarTxt() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\grammar.txt"
	name := "static/generator/js/grammar.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsJqueryUiJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsJqueryUiJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\jquery-ui.js"
	name := "static/generator/js/jquery-ui.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsJqueryUi_origJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsJqueryUi_origJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\jquery-ui_orig.js"
	name := "static/generator/js/jquery-ui_orig.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsJqueryUiTouchPunchMinJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsJqueryUiTouchPunchMinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\jquery.ui.touch-punch.min.js"
	name := "static/generator/js/jquery.ui.touch-punch.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsLibsJquery321MinJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsLibsJquery321MinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\libs\\jquery-3.2.1.min.js"
	name := "static/generator/js/libs/jquery-3.2.1.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsLibsJsClassJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsLibsJsClassJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\libs\\js-class.js"
	name := "static/generator/js/libs/js-class.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsLibsPeg0100Js reads file data from disk. It returns an error on failure.
func staticGeneratorJsLibsPeg0100Js() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\libs\\peg-0.10.0.js"
	name := "static/generator/js/libs/peg-0.10.0.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsMainJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsMainJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\main.js"
	name := "static/generator/js/main.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsParserHtml reads file data from disk. It returns an error on failure.
func staticGeneratorJsParserHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\parser.html"
	name := "static/generator/js/parser.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsParserJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsParserJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\parser.js"
	name := "static/generator/js/parser.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsScriptsJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsScriptsJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\scripts.js"
	name := "static/generator/js/scripts.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorJsScripts_origJs reads file data from disk. It returns an error on failure.
func staticGeneratorJsScripts_origJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\js\\scripts_orig.js"
	name := "static/generator/js/scripts_orig.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorStyleCss reads file data from disk. It returns an error on failure.
func staticGeneratorStyleCss() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator\\style.css"
	name := "static/generator/style.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGeneratorHtml reads file data from disk. It returns an error on failure.
func staticGeneratorHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator.html"
	name := "static/generator.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGenerator_origHtml reads file data from disk. It returns an error on failure.
func staticGenerator_origHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\generator_orig.html"
	name := "static/generator_orig.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_birth_statementHtml reads file data from disk. It returns an error on failure.
func staticGov_birth_statementHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_birth_statement.html"
	name := "static/gov_birth_statement.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_citizensHtml reads file data from disk. It returns an error on failure.
func staticGov_citizensHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_citizens.html"
	name := "static/gov_citizens.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_create_budgetHtml reads file data from disk. It returns an error on failure.
func staticGov_create_budgetHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_create_budget.html"
	name := "static/gov_create_budget.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_currency_exchangeHtml reads file data from disk. It returns an error on failure.
func staticGov_currency_exchangeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_currency_exchange.html"
	name := "static/gov_currency_exchange.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_date_deathHtml reads file data from disk. It returns an error on failure.
func staticGov_date_deathHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_date_death.html"
	name := "static/gov_date_death.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_register_citizenHtml reads file data from disk. It returns an error on failure.
func staticGov_register_citizenHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_register_citizen.html"
	name := "static/gov_register_citizen.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_register_propertyHtml reads file data from disk. It returns an error on failure.
func staticGov_register_propertyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_register_property.html"
	name := "static/gov_register_property.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_settingsHtml reads file data from disk. It returns an error on failure.
func staticGov_settingsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_settings.html"
	name := "static/gov_settings.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_shares_exchangeHtml reads file data from disk. It returns an error on failure.
func staticGov_shares_exchangeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_shares_exchange.html"
	name := "static/gov_shares_exchange.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticGov_taxesHtml reads file data from disk. It returns an error on failure.
func staticGov_taxesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\gov_taxes.html"
	name := "static/gov_taxes.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_buy_medicamentHtml reads file data from disk. It returns an error on failure.
func staticHealth_buy_medicamentHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_buy_medicament.html"
	name := "static/health_buy_medicament.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_entries_clinicHtml reads file data from disk. It returns an error on failure.
func staticHealth_entries_clinicHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_entries_clinic.html"
	name := "static/health_entries_clinic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_facilityHtml reads file data from disk. It returns an error on failure.
func staticHealth_facilityHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_facility.html"
	name := "static/health_facility.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_immunization_recordsHtml reads file data from disk. It returns an error on failure.
func staticHealth_immunization_recordsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_immunization_records.html"
	name := "static/health_immunization_records.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_medical_recordHtml reads file data from disk. It returns an error on failure.
func staticHealth_medical_recordHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_medical_record.html"
	name := "static/health_medical_record.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_medication_recordsHtml reads file data from disk. It returns an error on failure.
func staticHealth_medication_recordsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_medication_records.html"
	name := "static/health_medication_records.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_patientHtml reads file data from disk. It returns an error on failure.
func staticHealth_patientHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_patient.html"
	name := "static/health_patient.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_procedureHtml reads file data from disk. It returns an error on failure.
func staticHealth_procedureHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_procedure.html"
	name := "static/health_procedure.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_symptomHtml reads file data from disk. It returns an error on failure.
func staticHealth_symptomHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_symptom.html"
	name := "static/health_symptom.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHealth_vital_signsHtml reads file data from disk. It returns an error on failure.
func staticHealth_vital_signsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\health_vital_signs.html"
	name := "static/health_vital_signs.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHistoryHtml reads file data from disk. It returns an error on failure.
func staticHistoryHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\history.html"
	name := "static/history.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticHtml_elementsHtml reads file data from disk. It returns an error on failure.
func staticHtml_elementsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\html_elements.html"
	name := "static/html_elements.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUsSvg reads file data from disk. It returns an error on failure.
func staticImgUsSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\US.svg"
	name := "static/img/US.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsAvaPng reads file data from disk. It returns an error on failure.
func staticImgAppsAvaPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\ava.png"
	name := "static/img/apps/ava.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsBusinessPng reads file data from disk. It returns an error on failure.
func staticImgAppsBusinessPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\business.png"
	name := "static/img/apps/business.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsElectionsJpg reads file data from disk. It returns an error on failure.
func staticImgAppsElectionsJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\elections.jpg"
	name := "static/img/apps/elections.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsEuroJpg reads file data from disk. It returns an error on failure.
func staticImgAppsEuroJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\euro.jpg"
	name := "static/img/apps/euro.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsForexJpg reads file data from disk. It returns an error on failure.
func staticImgAppsForexJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\forex.jpg"
	name := "static/img/apps/forex.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsForexPng reads file data from disk. It returns an error on failure.
func staticImgAppsForexPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\forex.png"
	name := "static/img/apps/forex.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsMessengerPng reads file data from disk. It returns an error on failure.
func staticImgAppsMessengerPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\messenger.png"
	name := "static/img/apps/messenger.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsMoneyJpg reads file data from disk. It returns an error on failure.
func staticImgAppsMoneyJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\money.jpg"
	name := "static/img/apps/money.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsMoneyPng reads file data from disk. It returns an error on failure.
func staticImgAppsMoneyPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\money.png"
	name := "static/img/apps/money.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAppsPropertyJpg reads file data from disk. It returns an error on failure.
func staticImgAppsPropertyJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\apps\\property.jpg"
	name := "static/img/apps/property.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgAvatarSvg reads file data from disk. It returns an error on failure.
func staticImgAvatarSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\avatar.svg"
	name := "static/img/avatar.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBackSvg reads file data from disk. It returns an error on failure.
func staticImgBackSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\back.svg"
	name := "static/img/back.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBgJpg reads file data from disk. It returns an error on failure.
func staticImgBgJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg.jpg"
	name := "static/img/bg.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBgPng reads file data from disk. It returns an error on failure.
func staticImgBgPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg.png"
	name := "static/img/bg.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg1Jpg reads file data from disk. It returns an error on failure.
func staticImgBg1Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg1.jpg"
	name := "static/img/bg1.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg10Jpg reads file data from disk. It returns an error on failure.
func staticImgBg10Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg10.jpg"
	name := "static/img/bg10.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg2Jpg reads file data from disk. It returns an error on failure.
func staticImgBg2Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg2.jpg"
	name := "static/img/bg2.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg3Jpg reads file data from disk. It returns an error on failure.
func staticImgBg3Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg3.jpg"
	name := "static/img/bg3.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg4Jpg reads file data from disk. It returns an error on failure.
func staticImgBg4Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg4.jpg"
	name := "static/img/bg4.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg5Jpg reads file data from disk. It returns an error on failure.
func staticImgBg5Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg5.jpg"
	name := "static/img/bg5.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg6Jpg reads file data from disk. It returns an error on failure.
func staticImgBg6Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg6.jpg"
	name := "static/img/bg6.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg7Jpg reads file data from disk. It returns an error on failure.
func staticImgBg7Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg7.jpg"
	name := "static/img/bg7.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg8Jpg reads file data from disk. It returns an error on failure.
func staticImgBg8Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg8.jpg"
	name := "static/img/bg8.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgBg9Jpg reads file data from disk. It returns an error on failure.
func staticImgBg9Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\bg9.jpg"
	name := "static/img/bg9.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgClearPng reads file data from disk. It returns an error on failure.
func staticImgClearPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\clear.png"
	name := "static/img/clear.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgDummyPng reads file data from disk. It returns an error on failure.
func staticImgDummyPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\dummy.png"
	name := "static/img/dummy.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgFaviconIco reads file data from disk. It returns an error on failure.
func staticImgFaviconIco() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\favicon.ico"
	name := "static/img/favicon.ico"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgInstalledPng reads file data from disk. It returns an error on failure.
func staticImgInstalledPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\installed.png"
	name := "static/img/installed.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgLoadingGif reads file data from disk. It returns an error on failure.
func staticImgLoadingGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\loading.gif"
	name := "static/img/loading.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgLockBgJpg reads file data from disk. It returns an error on failure.
func staticImgLockBgJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\lock-bg.jpg"
	name := "static/img/lock-bg.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgLogoPng reads file data from disk. It returns an error on failure.
func staticImgLogoPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\logo.png"
	name := "static/img/logo.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgLogoSvg reads file data from disk. It returns an error on failure.
func staticImgLogoSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\logo.svg"
	name := "static/img/logo.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgLogo_nullSvg reads file data from disk. It returns an error on failure.
func staticImgLogo_nullSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\logo_null.svg"
	name := "static/img/logo_null.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgLogo_okSvg reads file data from disk. It returns an error on failure.
func staticImgLogo_okSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\logo_ok.svg"
	name := "static/img/logo_ok.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgMain_loaderGif reads file data from disk. It returns an error on failure.
func staticImgMain_loaderGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\main_loader.gif"
	name := "static/img/main_loader.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgMarker_redPng reads file data from disk. It returns an error on failure.
func staticImgMarker_redPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\marker_red.png"
	name := "static/img/marker_red.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgMbSampleJpg reads file data from disk. It returns an error on failure.
func staticImgMbSampleJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\mb-sample.jpg"
	name := "static/img/mb-sample.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgMockupPng reads file data from disk. It returns an error on failure.
func staticImgMockupPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\mockup.png"
	name := "static/img/mockup.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgNo_mapPng reads file data from disk. It returns an error on failure.
func staticImgNo_mapPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\no_map.png"
	name := "static/img/no_map.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgNoflagSvg reads file data from disk. It returns an error on failure.
func staticImgNoflagSvg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\noflag.svg"
	name := "static/img/noflag.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgProfileBgJpg reads file data from disk. It returns an error on failure.
func staticImgProfileBgJpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\profile-bg.jpg"
	name := "static/img/profile-bg.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgRadio_iconPng reads file data from disk. It returns an error on failure.
func staticImgRadio_iconPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\radio_icon.png"
	name := "static/img/radio_icon.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSort_ascPng reads file data from disk. It returns an error on failure.
func staticImgSort_ascPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\sort_asc.png"
	name := "static/img/sort_asc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSort_asc_disabledPng reads file data from disk. It returns an error on failure.
func staticImgSort_asc_disabledPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\sort_asc_disabled.png"
	name := "static/img/sort_asc_disabled.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSort_bothPng reads file data from disk. It returns an error on failure.
func staticImgSort_bothPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\sort_both.png"
	name := "static/img/sort_both.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSort_descPng reads file data from disk. It returns an error on failure.
func staticImgSort_descPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\sort_desc.png"
	name := "static/img/sort_desc.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSort_desc_disabledPng reads file data from disk. It returns an error on failure.
func staticImgSort_desc_disabledPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\sort_desc_disabled.png"
	name := "static/img/sort_desc_disabled.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSpacerGif reads file data from disk. It returns an error on failure.
func staticImgSpacerGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\spacer.gif"
	name := "static/img/spacer.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgSquaresGif reads file data from disk. It returns an error on failure.
func staticImgSquaresGif() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\squares.gif"
	name := "static/img/squares.gif"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser01Jpg reads file data from disk. It returns an error on failure.
func staticImgUser01Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\01.jpg"
	name := "static/img/user/01.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser02Jpg reads file data from disk. It returns an error on failure.
func staticImgUser02Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\02.jpg"
	name := "static/img/user/02.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser03Jpg reads file data from disk. It returns an error on failure.
func staticImgUser03Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\03.jpg"
	name := "static/img/user/03.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser04Jpg reads file data from disk. It returns an error on failure.
func staticImgUser04Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\04.jpg"
	name := "static/img/user/04.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser05Jpg reads file data from disk. It returns an error on failure.
func staticImgUser05Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\05.jpg"
	name := "static/img/user/05.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser06Jpg reads file data from disk. It returns an error on failure.
func staticImgUser06Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\06.jpg"
	name := "static/img/user/06.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser07Jpg reads file data from disk. It returns an error on failure.
func staticImgUser07Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\07.jpg"
	name := "static/img/user/07.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser08Jpg reads file data from disk. It returns an error on failure.
func staticImgUser08Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\08.jpg"
	name := "static/img/user/08.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser09Jpg reads file data from disk. It returns an error on failure.
func staticImgUser09Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\09.jpg"
	name := "static/img/user/09.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser10Jpg reads file data from disk. It returns an error on failure.
func staticImgUser10Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\10.jpg"
	name := "static/img/user/10.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser11Jpg reads file data from disk. It returns an error on failure.
func staticImgUser11Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\11.jpg"
	name := "static/img/user/11.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser12Jpg reads file data from disk. It returns an error on failure.
func staticImgUser12Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\12.jpg"
	name := "static/img/user/12.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticImgUser13Jpg reads file data from disk. It returns an error on failure.
func staticImgUser13Jpg() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\img\\user\\13.jpg"
	name := "static/img/user/13.jpg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticIndexHtml reads file data from disk. It returns an error on failure.
func staticIndexHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\index.html"
	name := "static/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticInstall_step_0Html reads file data from disk. It returns an error on failure.
func staticInstall_step_0Html() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\install_step_0.html"
	name := "static/install_step_0.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticInstall_step_1Html reads file data from disk. It returns an error on failure.
func staticInstall_step_1Html() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\install_step_1.html"
	name := "static/install_step_1.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticInterfaceHtml reads file data from disk. It returns an error on failure.
func staticInterfaceHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\interface.html"
	name := "static/interface.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsAppJs reads file data from disk. It returns an error on failure.
func staticJsAppJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\app.js"
	name := "static/js/app.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsEllipticMinJs reads file data from disk. It returns an error on failure.
func staticJsEllipticMinJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\elliptic.min.js"
	name := "static/js/elliptic.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsIndexJs reads file data from disk. It returns an error on failure.
func staticJsIndexJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\index.js"
	name := "static/js/index.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsKeysJs reads file data from disk. It returns an error on failure.
func staticJsKeysJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\keys.js"
	name := "static/js/keys.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsMapJs reads file data from disk. It returns an error on failure.
func staticJsMapJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\map.js"
	name := "static/js/map.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsPhotoeditorEditorJs reads file data from disk. It returns an error on failure.
func staticJsPhotoeditorEditorJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\photoEditor\\editor.js"
	name := "static/js/photoEditor/editor.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticJsTrianglesJs reads file data from disk. It returns an error on failure.
func staticJsTrianglesJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\js\\triangles.js"
	name := "static/js/triangles.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticLangFlagsFlagsPng reads file data from disk. It returns an error on failure.
func staticLangFlagsFlagsPng() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\lang\\flags\\flags.png"
	name := "static/lang/flags/flags.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticLangGbJs reads file data from disk. It returns an error on failure.
func staticLangGbJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\lang\\gb.js"
	name := "static/lang/gb.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticLangNlJs reads file data from disk. It returns an error on failure.
func staticLangNlJs() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\lang\\nl.js"
	name := "static/lang/nl.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticLanguagesHtml reads file data from disk. It returns an error on failure.
func staticLanguagesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\languages.html"
	name := "static/languages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticList_of_tablesHtml reads file data from disk. It returns an error on failure.
func staticList_of_tablesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\list_of_tables.html"
	name := "static/list_of_tables.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticLoginHtml reads file data from disk. It returns an error on failure.
func staticLoginHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\login.html"
	name := "static/login.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticMenuHtml reads file data from disk. It returns an error on failure.
func staticMenuHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\menu.html"
	name := "static/menu.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticModal_anonymHtml reads file data from disk. It returns an error on failure.
func staticModal_anonymHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\modal_anonym.html"
	name := "static/modal_anonym.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticModal_avatarHtml reads file data from disk. It returns an error on failure.
func staticModal_avatarHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\modal_avatar.html"
	name := "static/modal_avatar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticModal_block_detailHtml reads file data from disk. It returns an error on failure.
func staticModal_block_detailHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\modal_block_detail.html"
	name := "static/modal_block_detail.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticModal_mapHtml reads file data from disk. It returns an error on failure.
func staticModal_mapHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\modal_map.html"
	name := "static/modal_map.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticModal_signatureHtml reads file data from disk. It returns an error on failure.
func staticModal_signatureHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\modal_signature.html"
	name := "static/modal_signature.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticNew_stateHtml reads file data from disk. It returns an error on failure.
func staticNew_stateHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\new_state.html"
	name := "static/new_state.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticNew_tableHtml reads file data from disk. It returns an error on failure.
func staticNew_tableHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\new_table.html"
	name := "static/new_table.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticPage_templateHtml reads file data from disk. It returns an error on failure.
func staticPage_templateHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\page_template.html"
	name := "static/page_template.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticPassHtml reads file data from disk. It returns an error on failure.
func staticPassHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\pass.html"
	name := "static/pass.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticPswHtml reads file data from disk. It returns an error on failure.
func staticPswHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\psw.html"
	name := "static/psw.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticRestore_accessHtml reads file data from disk. It returns an error on failure.
func staticRestore_accessHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\restore_access.html"
	name := "static/restore_access.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticRestore_access_activeHtml reads file data from disk. It returns an error on failure.
func staticRestore_access_activeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\restore_access_active.html"
	name := "static/restore_access_active.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticRow_historyHtml reads file data from disk. It returns an error on failure.
func staticRow_historyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\row_history.html"
	name := "static/row_history.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticSchemaSql reads file data from disk. It returns an error on failure.
func staticSchemaSql() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\schema.sql"
	name := "static/schema.sql"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticShow_tableHtml reads file data from disk. It returns an error on failure.
func staticShow_tableHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\show_table.html"
	name := "static/show_table.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticSignaturesHtml reads file data from disk. It returns an error on failure.
func staticSignaturesHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\signatures.html"
	name := "static/signatures.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticSignatures_listHtml reads file data from disk. It returns an error on failure.
func staticSignatures_listHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\signatures_list.html"
	name := "static/signatures_list.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticSignatures_newHtml reads file data from disk. It returns an error on failure.
func staticSignatures_newHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\signatures_new.html"
	name := "static/signatures_new.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticSmart_request_citizenHtml reads file data from disk. It returns an error on failure.
func staticSmart_request_citizenHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\smart_request_citizen.html"
	name := "static/smart_request_citizen.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticState_lawsHtml reads file data from disk. It returns an error on failure.
func staticState_lawsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\state_laws.html"
	name := "static/state_laws.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticState_parametersHtml reads file data from disk. It returns an error on failure.
func staticState_parametersHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\state_parameters.html"
	name := "static/state_parameters.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticSystem_infoHtml reads file data from disk. It returns an error on failure.
func staticSystem_infoHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\system_info.html"
	name := "static/system_info.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticTestHtml reads file data from disk. It returns an error on failure.
func staticTestHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\test.html"
	name := "static/test.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticTestnetHtml reads file data from disk. It returns an error on failure.
func staticTestnetHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\testnet.html"
	name := "static/testnet.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticTestnet_registerHtml reads file data from disk. It returns an error on failure.
func staticTestnet_registerHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\testnet_register.html"
	name := "static/testnet_register.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticTx_btncontHtml reads file data from disk. It returns an error on failure.
func staticTx_btncontHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\tx_btncont.html"
	name := "static/tx_btncont.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticTx_buttonHtml reads file data from disk. It returns an error on failure.
func staticTx_buttonHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\tx_button.html"
	name := "static/tx_button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticTx_formHtml reads file data from disk. It returns an error on failure.
func staticTx_formHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\tx_form.html"
	name := "static/tx_form.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticUpdating_blockchainHtml reads file data from disk. It returns an error on failure.
func staticUpdating_blockchainHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\updating_blockchain.html"
	name := "static/updating_blockchain.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticUpgradeHtml reads file data from disk. It returns an error on failure.
func staticUpgradeHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\upgrade.html"
	name := "static/upgrade.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticWallet_historyHtml reads file data from disk. It returns an error on failure.
func staticWallet_historyHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\wallet_history.html"
	name := "static/wallet_history.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// staticWidgetsHtml reads file data from disk. It returns an error on failure.
func staticWidgetsHtml() (*asset, error) {
	path := "c:\\MyGo\\src\\github.com\\EGaaS\\go-egaas-mvp\\static\\widgets.html"
	name := "static/widgets.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/.idea/copyright/profiles_settings.xml": staticIdeaCopyrightProfiles_settingsXml,
	"static/.idea/modules.xml": staticIdeaModulesXml,
	"static/.idea/static.iml": staticIdeaStaticIml,
	"static/.idea/workspace.xml": staticIdeaWorkspaceXml,
	"static/1block": static1block,
	"static/Global.tpl": staticGlobalTpl,
	"static/accounts.html": staticAccountsHtml,
	"static/alert_success.html": staticAlert_successHtml,
	"static/anonym_money_transfer.html": staticAnonym_money_transferHtml,
	"static/app_catalog.html": staticApp_catalogHtml,
	"static/app_template.html": staticApp_templateHtml,
	"static/backup.html": staticBackupHtml,
	"static/basic.tpl": staticBasicTpl,
	"static/beta.html": staticBetaHtml,
	"static/block_explorer.html": staticBlock_explorerHtml,
	"static/btc.html": staticBtcHtml,
	"static/cb_citizens.html": staticCb_citizensHtml,
	"static/cb_citizens_new_user.html": staticCb_citizens_new_userHtml,
	"static/cb_citizens_requests_foreigners.html": staticCb_citizens_requests_foreignersHtml,
	"static/cb_currency_exchange.html": staticCb_currency_exchangeHtml,
	"static/cb_delegate.html": staticCb_delegateHtml,
	"static/cb_emission_account.html": staticCb_emission_accountHtml,
	"static/cb_emission_fixed_amount.html": staticCb_emission_fixed_amountHtml,
	"static/cb_emission_proportional.html": staticCb_emission_proportionalHtml,
	"static/cb_new_representative.html": staticCb_new_representativeHtml,
	"static/cb_representative_details.html": staticCb_representative_detailsHtml,
	"static/cb_representatives.html": staticCb_representativesHtml,
	"static/cb_select_emission.html": staticCb_select_emissionHtml,
	"static/change_node_key.html": staticChange_node_keyHtml,
	"static/change_state_smart_laws.html": staticChange_state_smart_lawsHtml,
	"static/check_citizen_status.html": staticCheck_citizen_statusHtml,
	"static/citizen_admission_high_school.html": staticCitizen_admission_high_schoolHtml,
	"static/citizen_bill_payment.html": staticCitizen_bill_paymentHtml,
	"static/citizen_divorce.html": staticCitizen_divorceHtml,
	"static/citizen_inheritance.html": staticCitizen_inheritanceHtml,
	"static/citizen_marriage_contract.html": staticCitizen_marriage_contractHtml,
	"static/citizen_marriage_registration.html": staticCitizen_marriage_registrationHtml,
	"static/citizen_money_transfer.html": staticCitizen_money_transferHtml,
	"static/citizen_new_company.html": staticCitizen_new_companyHtml,
	"static/citizen_political_party.html": staticCitizen_political_partyHtml,
	"static/citizen_property.html": staticCitizen_propertyHtml,
	"static/citizen_rule_details.html": staticCitizen_rule_detailsHtml,
	"static/company_application_purchase.html": staticCompany_application_purchaseHtml,
	"static/company_contract.html": staticCompany_contractHtml,
	"static/company_crowdfunding.html": staticCompany_crowdfundingHtml,
	"static/company_currency_exchange.html": staticCompany_currency_exchangeHtml,
	"static/company_customhouse.html": staticCompany_customhouseHtml,
	"static/company_new_company.html": staticCompany_new_companyHtml,
	"static/company_new_good.html": staticCompany_new_goodHtml,
	"static/company_new_item.html": staticCompany_new_itemHtml,
	"static/company_new_order.html": staticCompany_new_orderHtml,
	"static/company_new_shares.html": staticCompany_new_sharesHtml,
	"static/company_offer_seller.html": staticCompany_offer_sellerHtml,
	"static/company_offer_transport.html": staticCompany_offer_transportHtml,
	"static/company_select_transport.html": staticCompany_select_transportHtml,
	"static/company_shares_exchange.html": staticCompany_shares_exchangeHtml,
	"static/company_smart_contracts.html": staticCompany_smart_contractsHtml,
	"static/contracts.html": staticContractsHtml,
	"static/countries/countries.json": staticCountriesCountriesJson,
	"static/countries/flags.png": staticCountriesFlagsPng,
	"static/countries/mm.png": staticCountriesMmPng,
	"static/countries/no_citizenship.png": staticCountriesNo_citizenshipPng,
	"static/countup.html": staticCountupHtml,
	"static/css/style.css": staticCssStyleCss,
	"static/dashboard_anonym.html": staticDashboard_anonymHtml,
	"static/dashboard_cb.html": staticDashboard_cbHtml,
	"static/dashboard_company.html": staticDashboard_companyHtml,
	"static/dashboard_gov.html": staticDashboard_govHtml,
	"static/dashboard_health.html": staticDashboard_healthHtml,
	"static/data/entries_doctor.json": staticDataEntries_doctorJson,
	"static/data/immunizations.json": staticDataImmunizationsJson,
	"static/data/medication.json": staticDataMedicationJson,
	"static/data/patients.json": staticDataPatientsJson,
	"static/description.tpl": staticDescriptionTpl,
	"static/edit_column.html": staticEdit_columnHtml,
	"static/edit_contract.html": staticEdit_contractHtml,
	"static/edit_language.html": staticEdit_languageHtml,
	"static/edit_menu.html": staticEdit_menuHtml,
	"static/edit_page.html": staticEdit_pageHtml,
	"static/edit_signature.html": staticEdit_signatureHtml,
	"static/edit_state_parameters.html": staticEdit_state_parametersHtml,
	"static/edit_table.html": staticEdit_tableHtml,
	"static/edit_wallet.html": staticEdit_walletHtml,
	"static/export_tpl.html": staticExport_tplHtml,
	"static/fonts/FontAwesome.otf": staticFontsFontawesomeOtf,
	"static/fonts/PFSquareSansPro-Bold.eot": staticFontsPfsquaresansproBoldEot,
	"static/fonts/PFSquareSansPro-Bold.svg": staticFontsPfsquaresansproBoldSvg,
	"static/fonts/PFSquareSansPro-Bold.ttf": staticFontsPfsquaresansproBoldTtf,
	"static/fonts/PFSquareSansPro-Bold.woff": staticFontsPfsquaresansproBoldWoff,
	"static/fonts/PFSquareSansPro-Bold.woff2": staticFontsPfsquaresansproBoldWoff2,
	"static/fonts/PFSquareSansPro-Light.eot": staticFontsPfsquaresansproLightEot,
	"static/fonts/PFSquareSansPro-Light.svg": staticFontsPfsquaresansproLightSvg,
	"static/fonts/PFSquareSansPro-Light.ttf": staticFontsPfsquaresansproLightTtf,
	"static/fonts/PFSquareSansPro-Light.woff": staticFontsPfsquaresansproLightWoff,
	"static/fonts/PFSquareSansPro-Light.woff2": staticFontsPfsquaresansproLightWoff2,
	"static/fonts/PFSquareSansPro-Medium.eot": staticFontsPfsquaresansproMediumEot,
	"static/fonts/PFSquareSansPro-Medium.svg": staticFontsPfsquaresansproMediumSvg,
	"static/fonts/PFSquareSansPro-Medium.ttf": staticFontsPfsquaresansproMediumTtf,
	"static/fonts/PFSquareSansPro-Medium.woff": staticFontsPfsquaresansproMediumWoff,
	"static/fonts/PFSquareSansPro-Medium.woff2": staticFontsPfsquaresansproMediumWoff2,
	"static/fonts/PFSquareSansPro-Regular.eot": staticFontsPfsquaresansproRegularEot,
	"static/fonts/PFSquareSansPro-Regular.svg": staticFontsPfsquaresansproRegularSvg,
	"static/fonts/PFSquareSansPro-Regular.ttf": staticFontsPfsquaresansproRegularTtf,
	"static/fonts/PFSquareSansPro-Regular.woff": staticFontsPfsquaresansproRegularWoff,
	"static/fonts/PFSquareSansPro-Regular.woff2": staticFontsPfsquaresansproRegularWoff2,
	"static/fonts/Simple-Line-Icons.eot": staticFontsSimpleLineIconsEot,
	"static/fonts/Simple-Line-Icons.svg": staticFontsSimpleLineIconsSvg,
	"static/fonts/Simple-Line-Icons.ttf": staticFontsSimpleLineIconsTtf,
	"static/fonts/Simple-Line-Icons.woff": staticFontsSimpleLineIconsWoff,
	"static/fonts/Simple-Line-Icons.woff2": staticFontsSimpleLineIconsWoff2,
	"static/fonts/fontawesome-webfont.eot": staticFontsFontawesomeWebfontEot,
	"static/fonts/fontawesome-webfont.svg": staticFontsFontawesomeWebfontSvg,
	"static/fonts/fontawesome-webfont.ttf": staticFontsFontawesomeWebfontTtf,
	"static/fonts/fontawesome-webfont.woff": staticFontsFontawesomeWebfontWoff,
	"static/fonts/fontawesome-webfont.woff2": staticFontsFontawesomeWebfontWoff2,
	"static/fonts/glyphicons-filetypes-regular.eot": staticFontsGlyphiconsFiletypesRegularEot,
	"static/fonts/glyphicons-filetypes-regular.svg": staticFontsGlyphiconsFiletypesRegularSvg,
	"static/fonts/glyphicons-filetypes-regular.ttf": staticFontsGlyphiconsFiletypesRegularTtf,
	"static/fonts/glyphicons-filetypes-regular.woff": staticFontsGlyphiconsFiletypesRegularWoff,
	"static/fonts/glyphicons-filetypes-regular.woff2": staticFontsGlyphiconsFiletypesRegularWoff2,
	"static/fonts/glyphicons-halflings-regular.eot": staticFontsGlyphiconsHalflingsRegularEot,
	"static/fonts/glyphicons-halflings-regular.svg": staticFontsGlyphiconsHalflingsRegularSvg,
	"static/fonts/glyphicons-halflings-regular.ttf": staticFontsGlyphiconsHalflingsRegularTtf,
	"static/fonts/glyphicons-halflings-regular.woff": staticFontsGlyphiconsHalflingsRegularWoff,
	"static/fonts/glyphicons-halflings-regular.woff2": staticFontsGlyphiconsHalflingsRegularWoff2,
	"static/fonts/glyphicons-regular.eot": staticFontsGlyphiconsRegularEot,
	"static/fonts/glyphicons-regular.svg": staticFontsGlyphiconsRegularSvg,
	"static/fonts/glyphicons-regular.ttf": staticFontsGlyphiconsRegularTtf,
	"static/fonts/glyphicons-regular.woff": staticFontsGlyphiconsRegularWoff,
	"static/fonts/glyphicons-regular.woff2": staticFontsGlyphiconsRegularWoff2,
	"static/fonts/glyphicons-social-regular.eot": staticFontsGlyphiconsSocialRegularEot,
	"static/fonts/glyphicons-social-regular.svg": staticFontsGlyphiconsSocialRegularSvg,
	"static/fonts/glyphicons-social-regular.ttf": staticFontsGlyphiconsSocialRegularTtf,
	"static/fonts/glyphicons-social-regular.woff": staticFontsGlyphiconsSocialRegularWoff,
	"static/fonts/glyphicons-social-regular.woff2": staticFontsGlyphiconsSocialRegularWoff2,
	"static/forging.html": staticForgingHtml,
	"static/gen_citizen.html": staticGen_citizenHtml,
	"static/gen_keys.html": staticGen_keysHtml,
	"static/generator/ckeditor/adapters/jquery.js": staticGeneratorCkeditorAdaptersJqueryJs,
	"static/generator/ckeditor/build-config.js": staticGeneratorCkeditorBuildConfigJs,
	"static/generator/ckeditor/ckeditor.js": staticGeneratorCkeditorCkeditorJs,
	"static/generator/ckeditor/config.js": staticGeneratorCkeditorConfigJs,
	"static/generator/ckeditor/content.css": staticGeneratorCkeditorContentCss,
	"static/generator/ckeditor/contents.css": staticGeneratorCkeditorContentsCss,
	"static/generator/ckeditor/core/_bootstrap.js": staticGeneratorCkeditorCore_bootstrapJs,
	"static/generator/ckeditor/core/ckeditor.js": staticGeneratorCkeditorCoreCkeditorJs,
	"static/generator/ckeditor/core/ckeditor_base.js": staticGeneratorCkeditorCoreCkeditor_baseJs,
	"static/generator/ckeditor/core/ckeditor_basic.js": staticGeneratorCkeditorCoreCkeditor_basicJs,
	"static/generator/ckeditor/core/command.js": staticGeneratorCkeditorCoreCommandJs,
	"static/generator/ckeditor/core/commanddefinition.js": staticGeneratorCkeditorCoreCommanddefinitionJs,
	"static/generator/ckeditor/core/config.js": staticGeneratorCkeditorCoreConfigJs,
	"static/generator/ckeditor/core/creators/inline.js": staticGeneratorCkeditorCoreCreatorsInlineJs,
	"static/generator/ckeditor/core/creators/themedui.js": staticGeneratorCkeditorCoreCreatorsThemeduiJs,
	"static/generator/ckeditor/core/dataprocessor.js": staticGeneratorCkeditorCoreDataprocessorJs,
	"static/generator/ckeditor/core/dom/comment.js": staticGeneratorCkeditorCoreDomCommentJs,
	"static/generator/ckeditor/core/dom/document.js": staticGeneratorCkeditorCoreDomDocumentJs,
	"static/generator/ckeditor/core/dom/documentfragment.js": staticGeneratorCkeditorCoreDomDocumentfragmentJs,
	"static/generator/ckeditor/core/dom/domobject.js": staticGeneratorCkeditorCoreDomDomobjectJs,
	"static/generator/ckeditor/core/dom/element.js": staticGeneratorCkeditorCoreDomElementJs,
	"static/generator/ckeditor/core/dom/elementpath.js": staticGeneratorCkeditorCoreDomElementpathJs,
	"static/generator/ckeditor/core/dom/event.js": staticGeneratorCkeditorCoreDomEventJs,
	"static/generator/ckeditor/core/dom/iterator.js": staticGeneratorCkeditorCoreDomIteratorJs,
	"static/generator/ckeditor/core/dom/node.js": staticGeneratorCkeditorCoreDomNodeJs,
	"static/generator/ckeditor/core/dom/nodelist.js": staticGeneratorCkeditorCoreDomNodelistJs,
	"static/generator/ckeditor/core/dom/range.js": staticGeneratorCkeditorCoreDomRangeJs,
	"static/generator/ckeditor/core/dom/rangelist.js": staticGeneratorCkeditorCoreDomRangelistJs,
	"static/generator/ckeditor/core/dom/text.js": staticGeneratorCkeditorCoreDomTextJs,
	"static/generator/ckeditor/core/dom/walker.js": staticGeneratorCkeditorCoreDomWalkerJs,
	"static/generator/ckeditor/core/dom/window.js": staticGeneratorCkeditorCoreDomWindowJs,
	"static/generator/ckeditor/core/dom.js": staticGeneratorCkeditorCoreDomJs,
	"static/generator/ckeditor/core/dtd.js": staticGeneratorCkeditorCoreDtdJs,
	"static/generator/ckeditor/core/editable.js": staticGeneratorCkeditorCoreEditableJs,
	"static/generator/ckeditor/core/editor.js": staticGeneratorCkeditorCoreEditorJs,
	"static/generator/ckeditor/core/editor_basic.js": staticGeneratorCkeditorCoreEditor_basicJs,
	"static/generator/ckeditor/core/env.js": staticGeneratorCkeditorCoreEnvJs,
	"static/generator/ckeditor/core/event.js": staticGeneratorCkeditorCoreEventJs,
	"static/generator/ckeditor/core/eventInfo.js": staticGeneratorCkeditorCoreEventinfoJs,
	"static/generator/ckeditor/core/filter.js": staticGeneratorCkeditorCoreFilterJs,
	"static/generator/ckeditor/core/focusmanager.js": staticGeneratorCkeditorCoreFocusmanagerJs,
	"static/generator/ckeditor/core/htmldataprocessor.js": staticGeneratorCkeditorCoreHtmldataprocessorJs,
	"static/generator/ckeditor/core/htmlparser/basicwriter.js": staticGeneratorCkeditorCoreHtmlparserBasicwriterJs,
	"static/generator/ckeditor/core/htmlparser/cdata.js": staticGeneratorCkeditorCoreHtmlparserCdataJs,
	"static/generator/ckeditor/core/htmlparser/comment.js": staticGeneratorCkeditorCoreHtmlparserCommentJs,
	"static/generator/ckeditor/core/htmlparser/element.js": staticGeneratorCkeditorCoreHtmlparserElementJs,
	"static/generator/ckeditor/core/htmlparser/filter.js": staticGeneratorCkeditorCoreHtmlparserFilterJs,
	"static/generator/ckeditor/core/htmlparser/fragment.js": staticGeneratorCkeditorCoreHtmlparserFragmentJs,
	"static/generator/ckeditor/core/htmlparser/node.js": staticGeneratorCkeditorCoreHtmlparserNodeJs,
	"static/generator/ckeditor/core/htmlparser/text.js": staticGeneratorCkeditorCoreHtmlparserTextJs,
	"static/generator/ckeditor/core/htmlparser.js": staticGeneratorCkeditorCoreHtmlparserJs,
	"static/generator/ckeditor/core/keystrokehandler.js": staticGeneratorCkeditorCoreKeystrokehandlerJs,
	"static/generator/ckeditor/core/lang.js": staticGeneratorCkeditorCoreLangJs,
	"static/generator/ckeditor/core/loader.js": staticGeneratorCkeditorCoreLoaderJs,
	"static/generator/ckeditor/core/log.js": staticGeneratorCkeditorCoreLogJs,
	"static/generator/ckeditor/core/plugindefinition.js": staticGeneratorCkeditorCorePlugindefinitionJs,
	"static/generator/ckeditor/core/plugins.js": staticGeneratorCkeditorCorePluginsJs,
	"static/generator/ckeditor/core/resourcemanager.js": staticGeneratorCkeditorCoreResourcemanagerJs,
	"static/generator/ckeditor/core/scriptloader.js": staticGeneratorCkeditorCoreScriptloaderJs,
	"static/generator/ckeditor/core/selection.js": staticGeneratorCkeditorCoreSelectionJs,
	"static/generator/ckeditor/core/skin.js": staticGeneratorCkeditorCoreSkinJs,
	"static/generator/ckeditor/core/style.js": staticGeneratorCkeditorCoreStyleJs,
	"static/generator/ckeditor/core/template.js": staticGeneratorCkeditorCoreTemplateJs,
	"static/generator/ckeditor/core/tools.js": staticGeneratorCkeditorCoreToolsJs,
	"static/generator/ckeditor/core/ui.js": staticGeneratorCkeditorCoreUiJs,
	"static/generator/ckeditor/lang/_translationstatus.txt": staticGeneratorCkeditorLang_translationstatusTxt,
	"static/generator/ckeditor/lang/af.js": staticGeneratorCkeditorLangAfJs,
	"static/generator/ckeditor/lang/ar.js": staticGeneratorCkeditorLangArJs,
	"static/generator/ckeditor/lang/az.js": staticGeneratorCkeditorLangAzJs,
	"static/generator/ckeditor/lang/bg.js": staticGeneratorCkeditorLangBgJs,
	"static/generator/ckeditor/lang/bn.js": staticGeneratorCkeditorLangBnJs,
	"static/generator/ckeditor/lang/bs.js": staticGeneratorCkeditorLangBsJs,
	"static/generator/ckeditor/lang/ca.js": staticGeneratorCkeditorLangCaJs,
	"static/generator/ckeditor/lang/cs.js": staticGeneratorCkeditorLangCsJs,
	"static/generator/ckeditor/lang/cy.js": staticGeneratorCkeditorLangCyJs,
	"static/generator/ckeditor/lang/da.js": staticGeneratorCkeditorLangDaJs,
	"static/generator/ckeditor/lang/de-ch.js": staticGeneratorCkeditorLangDeChJs,
	"static/generator/ckeditor/lang/de.js": staticGeneratorCkeditorLangDeJs,
	"static/generator/ckeditor/lang/el.js": staticGeneratorCkeditorLangElJs,
	"static/generator/ckeditor/lang/en-au.js": staticGeneratorCkeditorLangEnAuJs,
	"static/generator/ckeditor/lang/en-ca.js": staticGeneratorCkeditorLangEnCaJs,
	"static/generator/ckeditor/lang/en-gb.js": staticGeneratorCkeditorLangEnGbJs,
	"static/generator/ckeditor/lang/en.js": staticGeneratorCkeditorLangEnJs,
	"static/generator/ckeditor/lang/eo.js": staticGeneratorCkeditorLangEoJs,
	"static/generator/ckeditor/lang/es.js": staticGeneratorCkeditorLangEsJs,
	"static/generator/ckeditor/lang/et.js": staticGeneratorCkeditorLangEtJs,
	"static/generator/ckeditor/lang/eu.js": staticGeneratorCkeditorLangEuJs,
	"static/generator/ckeditor/lang/fa.js": staticGeneratorCkeditorLangFaJs,
	"static/generator/ckeditor/lang/fi.js": staticGeneratorCkeditorLangFiJs,
	"static/generator/ckeditor/lang/fo.js": staticGeneratorCkeditorLangFoJs,
	"static/generator/ckeditor/lang/fr-ca.js": staticGeneratorCkeditorLangFrCaJs,
	"static/generator/ckeditor/lang/fr.js": staticGeneratorCkeditorLangFrJs,
	"static/generator/ckeditor/lang/gl.js": staticGeneratorCkeditorLangGlJs,
	"static/generator/ckeditor/lang/gu.js": staticGeneratorCkeditorLangGuJs,
	"static/generator/ckeditor/lang/he.js": staticGeneratorCkeditorLangHeJs,
	"static/generator/ckeditor/lang/hi.js": staticGeneratorCkeditorLangHiJs,
	"static/generator/ckeditor/lang/hr.js": staticGeneratorCkeditorLangHrJs,
	"static/generator/ckeditor/lang/hu.js": staticGeneratorCkeditorLangHuJs,
	"static/generator/ckeditor/lang/id.js": staticGeneratorCkeditorLangIdJs,
	"static/generator/ckeditor/lang/is.js": staticGeneratorCkeditorLangIsJs,
	"static/generator/ckeditor/lang/it.js": staticGeneratorCkeditorLangItJs,
	"static/generator/ckeditor/lang/ja.js": staticGeneratorCkeditorLangJaJs,
	"static/generator/ckeditor/lang/ka.js": staticGeneratorCkeditorLangKaJs,
	"static/generator/ckeditor/lang/km.js": staticGeneratorCkeditorLangKmJs,
	"static/generator/ckeditor/lang/ko.js": staticGeneratorCkeditorLangKoJs,
	"static/generator/ckeditor/lang/ku.js": staticGeneratorCkeditorLangKuJs,
	"static/generator/ckeditor/lang/lt.js": staticGeneratorCkeditorLangLtJs,
	"static/generator/ckeditor/lang/lv.js": staticGeneratorCkeditorLangLvJs,
	"static/generator/ckeditor/lang/mk.js": staticGeneratorCkeditorLangMkJs,
	"static/generator/ckeditor/lang/mn.js": staticGeneratorCkeditorLangMnJs,
	"static/generator/ckeditor/lang/ms.js": staticGeneratorCkeditorLangMsJs,
	"static/generator/ckeditor/lang/nb.js": staticGeneratorCkeditorLangNbJs,
	"static/generator/ckeditor/lang/nl.js": staticGeneratorCkeditorLangNlJs,
	"static/generator/ckeditor/lang/no.js": staticGeneratorCkeditorLangNoJs,
	"static/generator/ckeditor/lang/oc.js": staticGeneratorCkeditorLangOcJs,
	"static/generator/ckeditor/lang/pl.js": staticGeneratorCkeditorLangPlJs,
	"static/generator/ckeditor/lang/plugins/a11yhelp/dialogos/a11yhelp.js": staticGeneratorCkeditorLangPluginsA11yhelpDialogosA11yhelpJs,
	"static/generator/ckeditor/lang/plugins/a11yhelp/dialogos/lang/_translationstatus.txt": staticGeneratorCkeditorLangPluginsA11yhelpDialogosLang_translationstatusTxt,
	"static/generator/ckeditor/lang/pt-br.js": staticGeneratorCkeditorLangPtBrJs,
	"static/generator/ckeditor/lang/pt.js": staticGeneratorCkeditorLangPtJs,
	"static/generator/ckeditor/lang/ro.js": staticGeneratorCkeditorLangRoJs,
	"static/generator/ckeditor/lang/ru.js": staticGeneratorCkeditorLangRuJs,
	"static/generator/ckeditor/lang/si.js": staticGeneratorCkeditorLangSiJs,
	"static/generator/ckeditor/lang/sk.js": staticGeneratorCkeditorLangSkJs,
	"static/generator/ckeditor/lang/sl.js": staticGeneratorCkeditorLangSlJs,
	"static/generator/ckeditor/lang/sq.js": staticGeneratorCkeditorLangSqJs,
	"static/generator/ckeditor/lang/sr-latn.js": staticGeneratorCkeditorLangSrLatnJs,
	"static/generator/ckeditor/lang/sr.js": staticGeneratorCkeditorLangSrJs,
	"static/generator/ckeditor/lang/sr.latn.js": staticGeneratorCkeditorLangSrLatnJs2,
	"static/generator/ckeditor/lang/sv.js": staticGeneratorCkeditorLangSvJs,
	"static/generator/ckeditor/lang/th.js": staticGeneratorCkeditorLangThJs,
	"static/generator/ckeditor/lang/tr.js": staticGeneratorCkeditorLangTrJs,
	"static/generator/ckeditor/lang/tt.js": staticGeneratorCkeditorLangTtJs,
	"static/generator/ckeditor/lang/ug.js": staticGeneratorCkeditorLangUgJs,
	"static/generator/ckeditor/lang/uk.js": staticGeneratorCkeditorLangUkJs,
	"static/generator/ckeditor/lang/vi.js": staticGeneratorCkeditorLangViJs,
	"static/generator/ckeditor/lang/zh-cn.js": staticGeneratorCkeditorLangZhCnJs,
	"static/generator/ckeditor/lang/zh.js": staticGeneratorCkeditorLangZhJs,
	"static/generator/ckeditor/lang/zn-ch.js": staticGeneratorCkeditorLangZnChJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js": staticGeneratorCkeditorPluginsA11yhelpDialogsA11yhelpJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/_translationstatus.txt": staticGeneratorCkeditorPluginsA11yhelpDialogsLang_translationstatusTxt,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/af.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangAfJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ar.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangArJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/az.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangAzJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/bg.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangBgJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ca.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangCaJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/cs.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangCsJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/cy.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangCyJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/da.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangDaJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/de-ch.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeChJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/de.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/el.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangElJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/en-gb.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnGbJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/en.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/eo.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangEoJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/es.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangEsJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/et.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangEtJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/eu.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangEuJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fa.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangFaJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fi.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangFiJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fo.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangFoJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fr-ca.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrCaJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/fr.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/gl.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangGlJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/gu.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangGuJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/he.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangHeJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hi.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangHiJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hr.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangHrJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/hu.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangHuJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/id.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangIdJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/it.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangItJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ja.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangJaJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/km.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangKmJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ko.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangKoJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ku.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangKuJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/lt.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangLtJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/lv.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangLvJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/mk.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangMkJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/mn.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangMnJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/nb.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangNbJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/nl.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangNlJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/no.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangNoJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/oc.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangOcJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pl.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangPlJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pt-br.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtBrJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/pt.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ro.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangRoJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ru.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangRuJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/si.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSiJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sk.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSkJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sl.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSlJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sq.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSqJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sr-latn.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrLatnJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sr.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/sv.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangSvJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/th.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangThJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/tr.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangTrJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/tt.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangTtJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/ug.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangUgJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/uk.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangUkJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/vi.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangViJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/zh-cn.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhCnJs,
	"static/generator/ckeditor/plugins/a11yhelp/dialogs/lang/zh.js": staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhJs,
	"static/generator/ckeditor/plugins/a11yhelp/plugin.js": staticGeneratorCkeditorPluginsA11yhelpPluginJs,
	"static/generator/ckeditor/plugins/about/dialogs/about.js": staticGeneratorCkeditorPluginsAboutDialogsAboutJs,
	"static/generator/ckeditor/plugins/about/dialogs/hidpi/logo_ckeditor.png": staticGeneratorCkeditorPluginsAboutDialogsHidpiLogo_ckeditorPng,
	"static/generator/ckeditor/plugins/about/dialogs/logo_ckeditor.png": staticGeneratorCkeditorPluginsAboutDialogsLogo_ckeditorPng,
	"static/generator/ckeditor/plugins/about/icons/about.png": staticGeneratorCkeditorPluginsAboutIconsAboutPng,
	"static/generator/ckeditor/plugins/about/icons/hidpi/about.png": staticGeneratorCkeditorPluginsAboutIconsHidpiAboutPng,
	"static/generator/ckeditor/plugins/about/lang/af.js": staticGeneratorCkeditorPluginsAboutLangAfJs,
	"static/generator/ckeditor/plugins/about/lang/ar.js": staticGeneratorCkeditorPluginsAboutLangArJs,
	"static/generator/ckeditor/plugins/about/lang/az.js": staticGeneratorCkeditorPluginsAboutLangAzJs,
	"static/generator/ckeditor/plugins/about/lang/bg.js": staticGeneratorCkeditorPluginsAboutLangBgJs,
	"static/generator/ckeditor/plugins/about/lang/bn.js": staticGeneratorCkeditorPluginsAboutLangBnJs,
	"static/generator/ckeditor/plugins/about/lang/bs.js": staticGeneratorCkeditorPluginsAboutLangBsJs,
	"static/generator/ckeditor/plugins/about/lang/ca.js": staticGeneratorCkeditorPluginsAboutLangCaJs,
	"static/generator/ckeditor/plugins/about/lang/cs.js": staticGeneratorCkeditorPluginsAboutLangCsJs,
	"static/generator/ckeditor/plugins/about/lang/cy.js": staticGeneratorCkeditorPluginsAboutLangCyJs,
	"static/generator/ckeditor/plugins/about/lang/da.js": staticGeneratorCkeditorPluginsAboutLangDaJs,
	"static/generator/ckeditor/plugins/about/lang/de-ch.js": staticGeneratorCkeditorPluginsAboutLangDeChJs,
	"static/generator/ckeditor/plugins/about/lang/de.js": staticGeneratorCkeditorPluginsAboutLangDeJs,
	"static/generator/ckeditor/plugins/about/lang/el.js": staticGeneratorCkeditorPluginsAboutLangElJs,
	"static/generator/ckeditor/plugins/about/lang/en-au.js": staticGeneratorCkeditorPluginsAboutLangEnAuJs,
	"static/generator/ckeditor/plugins/about/lang/en-ca.js": staticGeneratorCkeditorPluginsAboutLangEnCaJs,
	"static/generator/ckeditor/plugins/about/lang/en-gb.js": staticGeneratorCkeditorPluginsAboutLangEnGbJs,
	"static/generator/ckeditor/plugins/about/lang/en.js": staticGeneratorCkeditorPluginsAboutLangEnJs,
	"static/generator/ckeditor/plugins/about/lang/eo.js": staticGeneratorCkeditorPluginsAboutLangEoJs,
	"static/generator/ckeditor/plugins/about/lang/es.js": staticGeneratorCkeditorPluginsAboutLangEsJs,
	"static/generator/ckeditor/plugins/about/lang/et.js": staticGeneratorCkeditorPluginsAboutLangEtJs,
	"static/generator/ckeditor/plugins/about/lang/eu.js": staticGeneratorCkeditorPluginsAboutLangEuJs,
	"static/generator/ckeditor/plugins/about/lang/fa.js": staticGeneratorCkeditorPluginsAboutLangFaJs,
	"static/generator/ckeditor/plugins/about/lang/fi.js": staticGeneratorCkeditorPluginsAboutLangFiJs,
	"static/generator/ckeditor/plugins/about/lang/fo.js": staticGeneratorCkeditorPluginsAboutLangFoJs,
	"static/generator/ckeditor/plugins/about/lang/fr-ca.js": staticGeneratorCkeditorPluginsAboutLangFrCaJs,
	"static/generator/ckeditor/plugins/about/lang/fr.js": staticGeneratorCkeditorPluginsAboutLangFrJs,
	"static/generator/ckeditor/plugins/about/lang/gl.js": staticGeneratorCkeditorPluginsAboutLangGlJs,
	"static/generator/ckeditor/plugins/about/lang/gu.js": staticGeneratorCkeditorPluginsAboutLangGuJs,
	"static/generator/ckeditor/plugins/about/lang/he.js": staticGeneratorCkeditorPluginsAboutLangHeJs,
	"static/generator/ckeditor/plugins/about/lang/hi.js": staticGeneratorCkeditorPluginsAboutLangHiJs,
	"static/generator/ckeditor/plugins/about/lang/hr.js": staticGeneratorCkeditorPluginsAboutLangHrJs,
	"static/generator/ckeditor/plugins/about/lang/hu.js": staticGeneratorCkeditorPluginsAboutLangHuJs,
	"static/generator/ckeditor/plugins/about/lang/id.js": staticGeneratorCkeditorPluginsAboutLangIdJs,
	"static/generator/ckeditor/plugins/about/lang/is.js": staticGeneratorCkeditorPluginsAboutLangIsJs,
	"static/generator/ckeditor/plugins/about/lang/it.js": staticGeneratorCkeditorPluginsAboutLangItJs,
	"static/generator/ckeditor/plugins/about/lang/ja.js": staticGeneratorCkeditorPluginsAboutLangJaJs,
	"static/generator/ckeditor/plugins/about/lang/ka.js": staticGeneratorCkeditorPluginsAboutLangKaJs,
	"static/generator/ckeditor/plugins/about/lang/km.js": staticGeneratorCkeditorPluginsAboutLangKmJs,
	"static/generator/ckeditor/plugins/about/lang/ko.js": staticGeneratorCkeditorPluginsAboutLangKoJs,
	"static/generator/ckeditor/plugins/about/lang/ku.js": staticGeneratorCkeditorPluginsAboutLangKuJs,
	"static/generator/ckeditor/plugins/about/lang/lt.js": staticGeneratorCkeditorPluginsAboutLangLtJs,
	"static/generator/ckeditor/plugins/about/lang/lv.js": staticGeneratorCkeditorPluginsAboutLangLvJs,
	"static/generator/ckeditor/plugins/about/lang/mk.js": staticGeneratorCkeditorPluginsAboutLangMkJs,
	"static/generator/ckeditor/plugins/about/lang/mn.js": staticGeneratorCkeditorPluginsAboutLangMnJs,
	"static/generator/ckeditor/plugins/about/lang/ms.js": staticGeneratorCkeditorPluginsAboutLangMsJs,
	"static/generator/ckeditor/plugins/about/lang/nb.js": staticGeneratorCkeditorPluginsAboutLangNbJs,
	"static/generator/ckeditor/plugins/about/lang/nl.js": staticGeneratorCkeditorPluginsAboutLangNlJs,
	"static/generator/ckeditor/plugins/about/lang/no.js": staticGeneratorCkeditorPluginsAboutLangNoJs,
	"static/generator/ckeditor/plugins/about/lang/oc.js": staticGeneratorCkeditorPluginsAboutLangOcJs,
	"static/generator/ckeditor/plugins/about/lang/pl.js": staticGeneratorCkeditorPluginsAboutLangPlJs,
	"static/generator/ckeditor/plugins/about/lang/pt-br.js": staticGeneratorCkeditorPluginsAboutLangPtBrJs,
	"static/generator/ckeditor/plugins/about/lang/pt.js": staticGeneratorCkeditorPluginsAboutLangPtJs,
	"static/generator/ckeditor/plugins/about/lang/ro.js": staticGeneratorCkeditorPluginsAboutLangRoJs,
	"static/generator/ckeditor/plugins/about/lang/ru.js": staticGeneratorCkeditorPluginsAboutLangRuJs,
	"static/generator/ckeditor/plugins/about/lang/si.js": staticGeneratorCkeditorPluginsAboutLangSiJs,
	"static/generator/ckeditor/plugins/about/lang/sk.js": staticGeneratorCkeditorPluginsAboutLangSkJs,
	"static/generator/ckeditor/plugins/about/lang/sl.js": staticGeneratorCkeditorPluginsAboutLangSlJs,
	"static/generator/ckeditor/plugins/about/lang/sq.js": staticGeneratorCkeditorPluginsAboutLangSqJs,
	"static/generator/ckeditor/plugins/about/lang/sr-latn.js": staticGeneratorCkeditorPluginsAboutLangSrLatnJs,
	"static/generator/ckeditor/plugins/about/lang/sr.js": staticGeneratorCkeditorPluginsAboutLangSrJs,
	"static/generator/ckeditor/plugins/about/lang/sv.js": staticGeneratorCkeditorPluginsAboutLangSvJs,
	"static/generator/ckeditor/plugins/about/lang/th.js": staticGeneratorCkeditorPluginsAboutLangThJs,
	"static/generator/ckeditor/plugins/about/lang/tr.js": staticGeneratorCkeditorPluginsAboutLangTrJs,
	"static/generator/ckeditor/plugins/about/lang/tt.js": staticGeneratorCkeditorPluginsAboutLangTtJs,
	"static/generator/ckeditor/plugins/about/lang/ug.js": staticGeneratorCkeditorPluginsAboutLangUgJs,
	"static/generator/ckeditor/plugins/about/lang/uk.js": staticGeneratorCkeditorPluginsAboutLangUkJs,
	"static/generator/ckeditor/plugins/about/lang/vi.js": staticGeneratorCkeditorPluginsAboutLangViJs,
	"static/generator/ckeditor/plugins/about/lang/zh-cn.js": staticGeneratorCkeditorPluginsAboutLangZhCnJs,
	"static/generator/ckeditor/plugins/about/lang/zh.js": staticGeneratorCkeditorPluginsAboutLangZhJs,
	"static/generator/ckeditor/plugins/about/plugin.js": staticGeneratorCkeditorPluginsAboutPluginJs,
	"static/generator/ckeditor/plugins/basicstyles/icons/bold.png": staticGeneratorCkeditorPluginsBasicstylesIconsBoldPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/hidpi/bold.png": staticGeneratorCkeditorPluginsBasicstylesIconsHidpiBoldPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/hidpi/italic.png": staticGeneratorCkeditorPluginsBasicstylesIconsHidpiItalicPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/hidpi/strike.png": staticGeneratorCkeditorPluginsBasicstylesIconsHidpiStrikePng,
	"static/generator/ckeditor/plugins/basicstyles/icons/hidpi/subscript.png": staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSubscriptPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/hidpi/superscript.png": staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSuperscriptPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/hidpi/underline.png": staticGeneratorCkeditorPluginsBasicstylesIconsHidpiUnderlinePng,
	"static/generator/ckeditor/plugins/basicstyles/icons/italic.png": staticGeneratorCkeditorPluginsBasicstylesIconsItalicPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/strike.png": staticGeneratorCkeditorPluginsBasicstylesIconsStrikePng,
	"static/generator/ckeditor/plugins/basicstyles/icons/subscript.png": staticGeneratorCkeditorPluginsBasicstylesIconsSubscriptPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/superscript.png": staticGeneratorCkeditorPluginsBasicstylesIconsSuperscriptPng,
	"static/generator/ckeditor/plugins/basicstyles/icons/underline.png": staticGeneratorCkeditorPluginsBasicstylesIconsUnderlinePng,
	"static/generator/ckeditor/plugins/basicstyles/lang/af.js": staticGeneratorCkeditorPluginsBasicstylesLangAfJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ar.js": staticGeneratorCkeditorPluginsBasicstylesLangArJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/az.js": staticGeneratorCkeditorPluginsBasicstylesLangAzJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/bg.js": staticGeneratorCkeditorPluginsBasicstylesLangBgJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/bn.js": staticGeneratorCkeditorPluginsBasicstylesLangBnJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/bs.js": staticGeneratorCkeditorPluginsBasicstylesLangBsJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ca.js": staticGeneratorCkeditorPluginsBasicstylesLangCaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/cs.js": staticGeneratorCkeditorPluginsBasicstylesLangCsJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/cy.js": staticGeneratorCkeditorPluginsBasicstylesLangCyJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/da.js": staticGeneratorCkeditorPluginsBasicstylesLangDaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/de-ch.js": staticGeneratorCkeditorPluginsBasicstylesLangDeChJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/de.js": staticGeneratorCkeditorPluginsBasicstylesLangDeJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/el.js": staticGeneratorCkeditorPluginsBasicstylesLangElJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/en-au.js": staticGeneratorCkeditorPluginsBasicstylesLangEnAuJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/en-ca.js": staticGeneratorCkeditorPluginsBasicstylesLangEnCaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/en-gb.js": staticGeneratorCkeditorPluginsBasicstylesLangEnGbJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/en.js": staticGeneratorCkeditorPluginsBasicstylesLangEnJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/eo.js": staticGeneratorCkeditorPluginsBasicstylesLangEoJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/es.js": staticGeneratorCkeditorPluginsBasicstylesLangEsJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/et.js": staticGeneratorCkeditorPluginsBasicstylesLangEtJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/eu.js": staticGeneratorCkeditorPluginsBasicstylesLangEuJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/fa.js": staticGeneratorCkeditorPluginsBasicstylesLangFaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/fi.js": staticGeneratorCkeditorPluginsBasicstylesLangFiJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/fo.js": staticGeneratorCkeditorPluginsBasicstylesLangFoJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/fr-ca.js": staticGeneratorCkeditorPluginsBasicstylesLangFrCaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/fr.js": staticGeneratorCkeditorPluginsBasicstylesLangFrJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/gl.js": staticGeneratorCkeditorPluginsBasicstylesLangGlJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/gu.js": staticGeneratorCkeditorPluginsBasicstylesLangGuJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/he.js": staticGeneratorCkeditorPluginsBasicstylesLangHeJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/hi.js": staticGeneratorCkeditorPluginsBasicstylesLangHiJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/hr.js": staticGeneratorCkeditorPluginsBasicstylesLangHrJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/hu.js": staticGeneratorCkeditorPluginsBasicstylesLangHuJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/id.js": staticGeneratorCkeditorPluginsBasicstylesLangIdJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/is.js": staticGeneratorCkeditorPluginsBasicstylesLangIsJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/it.js": staticGeneratorCkeditorPluginsBasicstylesLangItJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ja.js": staticGeneratorCkeditorPluginsBasicstylesLangJaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ka.js": staticGeneratorCkeditorPluginsBasicstylesLangKaJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/km.js": staticGeneratorCkeditorPluginsBasicstylesLangKmJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ko.js": staticGeneratorCkeditorPluginsBasicstylesLangKoJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ku.js": staticGeneratorCkeditorPluginsBasicstylesLangKuJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/lt.js": staticGeneratorCkeditorPluginsBasicstylesLangLtJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/lv.js": staticGeneratorCkeditorPluginsBasicstylesLangLvJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/mk.js": staticGeneratorCkeditorPluginsBasicstylesLangMkJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/mn.js": staticGeneratorCkeditorPluginsBasicstylesLangMnJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ms.js": staticGeneratorCkeditorPluginsBasicstylesLangMsJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/nb.js": staticGeneratorCkeditorPluginsBasicstylesLangNbJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/nl.js": staticGeneratorCkeditorPluginsBasicstylesLangNlJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/no.js": staticGeneratorCkeditorPluginsBasicstylesLangNoJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/oc.js": staticGeneratorCkeditorPluginsBasicstylesLangOcJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/pl.js": staticGeneratorCkeditorPluginsBasicstylesLangPlJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/pt-br.js": staticGeneratorCkeditorPluginsBasicstylesLangPtBrJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/pt.js": staticGeneratorCkeditorPluginsBasicstylesLangPtJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ro.js": staticGeneratorCkeditorPluginsBasicstylesLangRoJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ru.js": staticGeneratorCkeditorPluginsBasicstylesLangRuJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/si.js": staticGeneratorCkeditorPluginsBasicstylesLangSiJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/sk.js": staticGeneratorCkeditorPluginsBasicstylesLangSkJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/sl.js": staticGeneratorCkeditorPluginsBasicstylesLangSlJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/sq.js": staticGeneratorCkeditorPluginsBasicstylesLangSqJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/sr-latn.js": staticGeneratorCkeditorPluginsBasicstylesLangSrLatnJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/sr.js": staticGeneratorCkeditorPluginsBasicstylesLangSrJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/sv.js": staticGeneratorCkeditorPluginsBasicstylesLangSvJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/th.js": staticGeneratorCkeditorPluginsBasicstylesLangThJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/tr.js": staticGeneratorCkeditorPluginsBasicstylesLangTrJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/tt.js": staticGeneratorCkeditorPluginsBasicstylesLangTtJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/ug.js": staticGeneratorCkeditorPluginsBasicstylesLangUgJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/uk.js": staticGeneratorCkeditorPluginsBasicstylesLangUkJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/vi.js": staticGeneratorCkeditorPluginsBasicstylesLangViJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/zh-cn.js": staticGeneratorCkeditorPluginsBasicstylesLangZhCnJs,
	"static/generator/ckeditor/plugins/basicstyles/lang/zh.js": staticGeneratorCkeditorPluginsBasicstylesLangZhJs,
	"static/generator/ckeditor/plugins/basicstyles/plugin.js": staticGeneratorCkeditorPluginsBasicstylesPluginJs,
	"static/generator/ckeditor/plugins/bidi/icons/bidiltr.png": staticGeneratorCkeditorPluginsBidiIconsBidiltrPng,
	"static/generator/ckeditor/plugins/bidi/icons/bidirtl.png": staticGeneratorCkeditorPluginsBidiIconsBidirtlPng,
	"static/generator/ckeditor/plugins/bidi/icons/hidpi/bidiltr.png": staticGeneratorCkeditorPluginsBidiIconsHidpiBidiltrPng,
	"static/generator/ckeditor/plugins/bidi/icons/hidpi/bidirtl.png": staticGeneratorCkeditorPluginsBidiIconsHidpiBidirtlPng,
	"static/generator/ckeditor/plugins/bidi/lang/af.js": staticGeneratorCkeditorPluginsBidiLangAfJs,
	"static/generator/ckeditor/plugins/bidi/lang/ar.js": staticGeneratorCkeditorPluginsBidiLangArJs,
	"static/generator/ckeditor/plugins/bidi/lang/az.js": staticGeneratorCkeditorPluginsBidiLangAzJs,
	"static/generator/ckeditor/plugins/bidi/lang/bg.js": staticGeneratorCkeditorPluginsBidiLangBgJs,
	"static/generator/ckeditor/plugins/bidi/lang/bn.js": staticGeneratorCkeditorPluginsBidiLangBnJs,
	"static/generator/ckeditor/plugins/bidi/lang/bs.js": staticGeneratorCkeditorPluginsBidiLangBsJs,
	"static/generator/ckeditor/plugins/bidi/lang/ca.js": staticGeneratorCkeditorPluginsBidiLangCaJs,
	"static/generator/ckeditor/plugins/bidi/lang/cs.js": staticGeneratorCkeditorPluginsBidiLangCsJs,
	"static/generator/ckeditor/plugins/bidi/lang/cy.js": staticGeneratorCkeditorPluginsBidiLangCyJs,
	"static/generator/ckeditor/plugins/bidi/lang/da.js": staticGeneratorCkeditorPluginsBidiLangDaJs,
	"static/generator/ckeditor/plugins/bidi/lang/de-ch.js": staticGeneratorCkeditorPluginsBidiLangDeChJs,
	"static/generator/ckeditor/plugins/bidi/lang/de.js": staticGeneratorCkeditorPluginsBidiLangDeJs,
	"static/generator/ckeditor/plugins/bidi/lang/el.js": staticGeneratorCkeditorPluginsBidiLangElJs,
	"static/generator/ckeditor/plugins/bidi/lang/en-au.js": staticGeneratorCkeditorPluginsBidiLangEnAuJs,
	"static/generator/ckeditor/plugins/bidi/lang/en-ca.js": staticGeneratorCkeditorPluginsBidiLangEnCaJs,
	"static/generator/ckeditor/plugins/bidi/lang/en-gb.js": staticGeneratorCkeditorPluginsBidiLangEnGbJs,
	"static/generator/ckeditor/plugins/bidi/lang/en.js": staticGeneratorCkeditorPluginsBidiLangEnJs,
	"static/generator/ckeditor/plugins/bidi/lang/eo.js": staticGeneratorCkeditorPluginsBidiLangEoJs,
	"static/generator/ckeditor/plugins/bidi/lang/es.js": staticGeneratorCkeditorPluginsBidiLangEsJs,
	"static/generator/ckeditor/plugins/bidi/lang/et.js": staticGeneratorCkeditorPluginsBidiLangEtJs,
	"static/generator/ckeditor/plugins/bidi/lang/eu.js": staticGeneratorCkeditorPluginsBidiLangEuJs,
	"static/generator/ckeditor/plugins/bidi/lang/fa.js": staticGeneratorCkeditorPluginsBidiLangFaJs,
	"static/generator/ckeditor/plugins/bidi/lang/fi.js": staticGeneratorCkeditorPluginsBidiLangFiJs,
	"static/generator/ckeditor/plugins/bidi/lang/fo.js": staticGeneratorCkeditorPluginsBidiLangFoJs,
	"static/generator/ckeditor/plugins/bidi/lang/fr-ca.js": staticGeneratorCkeditorPluginsBidiLangFrCaJs,
	"static/generator/ckeditor/plugins/bidi/lang/fr.js": staticGeneratorCkeditorPluginsBidiLangFrJs,
	"static/generator/ckeditor/plugins/bidi/lang/gl.js": staticGeneratorCkeditorPluginsBidiLangGlJs,
	"static/generator/ckeditor/plugins/bidi/lang/gu.js": staticGeneratorCkeditorPluginsBidiLangGuJs,
	"static/generator/ckeditor/plugins/bidi/lang/he.js": staticGeneratorCkeditorPluginsBidiLangHeJs,
	"static/generator/ckeditor/plugins/bidi/lang/hi.js": staticGeneratorCkeditorPluginsBidiLangHiJs,
	"static/generator/ckeditor/plugins/bidi/lang/hr.js": staticGeneratorCkeditorPluginsBidiLangHrJs,
	"static/generator/ckeditor/plugins/bidi/lang/hu.js": staticGeneratorCkeditorPluginsBidiLangHuJs,
	"static/generator/ckeditor/plugins/bidi/lang/id.js": staticGeneratorCkeditorPluginsBidiLangIdJs,
	"static/generator/ckeditor/plugins/bidi/lang/is.js": staticGeneratorCkeditorPluginsBidiLangIsJs,
	"static/generator/ckeditor/plugins/bidi/lang/it.js": staticGeneratorCkeditorPluginsBidiLangItJs,
	"static/generator/ckeditor/plugins/bidi/lang/ja.js": staticGeneratorCkeditorPluginsBidiLangJaJs,
	"static/generator/ckeditor/plugins/bidi/lang/ka.js": staticGeneratorCkeditorPluginsBidiLangKaJs,
	"static/generator/ckeditor/plugins/bidi/lang/km.js": staticGeneratorCkeditorPluginsBidiLangKmJs,
	"static/generator/ckeditor/plugins/bidi/lang/ko.js": staticGeneratorCkeditorPluginsBidiLangKoJs,
	"static/generator/ckeditor/plugins/bidi/lang/ku.js": staticGeneratorCkeditorPluginsBidiLangKuJs,
	"static/generator/ckeditor/plugins/bidi/lang/lt.js": staticGeneratorCkeditorPluginsBidiLangLtJs,
	"static/generator/ckeditor/plugins/bidi/lang/lv.js": staticGeneratorCkeditorPluginsBidiLangLvJs,
	"static/generator/ckeditor/plugins/bidi/lang/mk.js": staticGeneratorCkeditorPluginsBidiLangMkJs,
	"static/generator/ckeditor/plugins/bidi/lang/mn.js": staticGeneratorCkeditorPluginsBidiLangMnJs,
	"static/generator/ckeditor/plugins/bidi/lang/ms.js": staticGeneratorCkeditorPluginsBidiLangMsJs,
	"static/generator/ckeditor/plugins/bidi/lang/nb.js": staticGeneratorCkeditorPluginsBidiLangNbJs,
	"static/generator/ckeditor/plugins/bidi/lang/nl.js": staticGeneratorCkeditorPluginsBidiLangNlJs,
	"static/generator/ckeditor/plugins/bidi/lang/no.js": staticGeneratorCkeditorPluginsBidiLangNoJs,
	"static/generator/ckeditor/plugins/bidi/lang/oc.js": staticGeneratorCkeditorPluginsBidiLangOcJs,
	"static/generator/ckeditor/plugins/bidi/lang/pl.js": staticGeneratorCkeditorPluginsBidiLangPlJs,
	"static/generator/ckeditor/plugins/bidi/lang/pt-br.js": staticGeneratorCkeditorPluginsBidiLangPtBrJs,
	"static/generator/ckeditor/plugins/bidi/lang/pt.js": staticGeneratorCkeditorPluginsBidiLangPtJs,
	"static/generator/ckeditor/plugins/bidi/lang/ro.js": staticGeneratorCkeditorPluginsBidiLangRoJs,
	"static/generator/ckeditor/plugins/bidi/lang/ru.js": staticGeneratorCkeditorPluginsBidiLangRuJs,
	"static/generator/ckeditor/plugins/bidi/lang/si.js": staticGeneratorCkeditorPluginsBidiLangSiJs,
	"static/generator/ckeditor/plugins/bidi/lang/sk.js": staticGeneratorCkeditorPluginsBidiLangSkJs,
	"static/generator/ckeditor/plugins/bidi/lang/sl.js": staticGeneratorCkeditorPluginsBidiLangSlJs,
	"static/generator/ckeditor/plugins/bidi/lang/sq.js": staticGeneratorCkeditorPluginsBidiLangSqJs,
	"static/generator/ckeditor/plugins/bidi/lang/sr-latn.js": staticGeneratorCkeditorPluginsBidiLangSrLatnJs,
	"static/generator/ckeditor/plugins/bidi/lang/sr.js": staticGeneratorCkeditorPluginsBidiLangSrJs,
	"static/generator/ckeditor/plugins/bidi/lang/sv.js": staticGeneratorCkeditorPluginsBidiLangSvJs,
	"static/generator/ckeditor/plugins/bidi/lang/th.js": staticGeneratorCkeditorPluginsBidiLangThJs,
	"static/generator/ckeditor/plugins/bidi/lang/tr.js": staticGeneratorCkeditorPluginsBidiLangTrJs,
	"static/generator/ckeditor/plugins/bidi/lang/tt.js": staticGeneratorCkeditorPluginsBidiLangTtJs,
	"static/generator/ckeditor/plugins/bidi/lang/ug.js": staticGeneratorCkeditorPluginsBidiLangUgJs,
	"static/generator/ckeditor/plugins/bidi/lang/uk.js": staticGeneratorCkeditorPluginsBidiLangUkJs,
	"static/generator/ckeditor/plugins/bidi/lang/vi.js": staticGeneratorCkeditorPluginsBidiLangViJs,
	"static/generator/ckeditor/plugins/bidi/lang/zh-cn.js": staticGeneratorCkeditorPluginsBidiLangZhCnJs,
	"static/generator/ckeditor/plugins/bidi/lang/zh.js": staticGeneratorCkeditorPluginsBidiLangZhJs,
	"static/generator/ckeditor/plugins/bidi/plugin.js": staticGeneratorCkeditorPluginsBidiPluginJs,
	"static/generator/ckeditor/plugins/blockquote/icons/blockquote.png": staticGeneratorCkeditorPluginsBlockquoteIconsBlockquotePng,
	"static/generator/ckeditor/plugins/blockquote/icons/hidpi/blockquote.png": staticGeneratorCkeditorPluginsBlockquoteIconsHidpiBlockquotePng,
	"static/generator/ckeditor/plugins/blockquote/lang/af.js": staticGeneratorCkeditorPluginsBlockquoteLangAfJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ar.js": staticGeneratorCkeditorPluginsBlockquoteLangArJs,
	"static/generator/ckeditor/plugins/blockquote/lang/az.js": staticGeneratorCkeditorPluginsBlockquoteLangAzJs,
	"static/generator/ckeditor/plugins/blockquote/lang/bg.js": staticGeneratorCkeditorPluginsBlockquoteLangBgJs,
	"static/generator/ckeditor/plugins/blockquote/lang/bn.js": staticGeneratorCkeditorPluginsBlockquoteLangBnJs,
	"static/generator/ckeditor/plugins/blockquote/lang/bs.js": staticGeneratorCkeditorPluginsBlockquoteLangBsJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ca.js": staticGeneratorCkeditorPluginsBlockquoteLangCaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/cs.js": staticGeneratorCkeditorPluginsBlockquoteLangCsJs,
	"static/generator/ckeditor/plugins/blockquote/lang/cy.js": staticGeneratorCkeditorPluginsBlockquoteLangCyJs,
	"static/generator/ckeditor/plugins/blockquote/lang/da.js": staticGeneratorCkeditorPluginsBlockquoteLangDaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/de-ch.js": staticGeneratorCkeditorPluginsBlockquoteLangDeChJs,
	"static/generator/ckeditor/plugins/blockquote/lang/de.js": staticGeneratorCkeditorPluginsBlockquoteLangDeJs,
	"static/generator/ckeditor/plugins/blockquote/lang/el.js": staticGeneratorCkeditorPluginsBlockquoteLangElJs,
	"static/generator/ckeditor/plugins/blockquote/lang/en-au.js": staticGeneratorCkeditorPluginsBlockquoteLangEnAuJs,
	"static/generator/ckeditor/plugins/blockquote/lang/en-ca.js": staticGeneratorCkeditorPluginsBlockquoteLangEnCaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/en-gb.js": staticGeneratorCkeditorPluginsBlockquoteLangEnGbJs,
	"static/generator/ckeditor/plugins/blockquote/lang/en.js": staticGeneratorCkeditorPluginsBlockquoteLangEnJs,
	"static/generator/ckeditor/plugins/blockquote/lang/eo.js": staticGeneratorCkeditorPluginsBlockquoteLangEoJs,
	"static/generator/ckeditor/plugins/blockquote/lang/es.js": staticGeneratorCkeditorPluginsBlockquoteLangEsJs,
	"static/generator/ckeditor/plugins/blockquote/lang/et.js": staticGeneratorCkeditorPluginsBlockquoteLangEtJs,
	"static/generator/ckeditor/plugins/blockquote/lang/eu.js": staticGeneratorCkeditorPluginsBlockquoteLangEuJs,
	"static/generator/ckeditor/plugins/blockquote/lang/fa.js": staticGeneratorCkeditorPluginsBlockquoteLangFaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/fi.js": staticGeneratorCkeditorPluginsBlockquoteLangFiJs,
	"static/generator/ckeditor/plugins/blockquote/lang/fo.js": staticGeneratorCkeditorPluginsBlockquoteLangFoJs,
	"static/generator/ckeditor/plugins/blockquote/lang/fr-ca.js": staticGeneratorCkeditorPluginsBlockquoteLangFrCaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/fr.js": staticGeneratorCkeditorPluginsBlockquoteLangFrJs,
	"static/generator/ckeditor/plugins/blockquote/lang/gl.js": staticGeneratorCkeditorPluginsBlockquoteLangGlJs,
	"static/generator/ckeditor/plugins/blockquote/lang/gu.js": staticGeneratorCkeditorPluginsBlockquoteLangGuJs,
	"static/generator/ckeditor/plugins/blockquote/lang/he.js": staticGeneratorCkeditorPluginsBlockquoteLangHeJs,
	"static/generator/ckeditor/plugins/blockquote/lang/hi.js": staticGeneratorCkeditorPluginsBlockquoteLangHiJs,
	"static/generator/ckeditor/plugins/blockquote/lang/hr.js": staticGeneratorCkeditorPluginsBlockquoteLangHrJs,
	"static/generator/ckeditor/plugins/blockquote/lang/hu.js": staticGeneratorCkeditorPluginsBlockquoteLangHuJs,
	"static/generator/ckeditor/plugins/blockquote/lang/id.js": staticGeneratorCkeditorPluginsBlockquoteLangIdJs,
	"static/generator/ckeditor/plugins/blockquote/lang/is.js": staticGeneratorCkeditorPluginsBlockquoteLangIsJs,
	"static/generator/ckeditor/plugins/blockquote/lang/it.js": staticGeneratorCkeditorPluginsBlockquoteLangItJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ja.js": staticGeneratorCkeditorPluginsBlockquoteLangJaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ka.js": staticGeneratorCkeditorPluginsBlockquoteLangKaJs,
	"static/generator/ckeditor/plugins/blockquote/lang/km.js": staticGeneratorCkeditorPluginsBlockquoteLangKmJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ko.js": staticGeneratorCkeditorPluginsBlockquoteLangKoJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ku.js": staticGeneratorCkeditorPluginsBlockquoteLangKuJs,
	"static/generator/ckeditor/plugins/blockquote/lang/lt.js": staticGeneratorCkeditorPluginsBlockquoteLangLtJs,
	"static/generator/ckeditor/plugins/blockquote/lang/lv.js": staticGeneratorCkeditorPluginsBlockquoteLangLvJs,
	"static/generator/ckeditor/plugins/blockquote/lang/mk.js": staticGeneratorCkeditorPluginsBlockquoteLangMkJs,
	"static/generator/ckeditor/plugins/blockquote/lang/mn.js": staticGeneratorCkeditorPluginsBlockquoteLangMnJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ms.js": staticGeneratorCkeditorPluginsBlockquoteLangMsJs,
	"static/generator/ckeditor/plugins/blockquote/lang/nb.js": staticGeneratorCkeditorPluginsBlockquoteLangNbJs,
	"static/generator/ckeditor/plugins/blockquote/lang/nl.js": staticGeneratorCkeditorPluginsBlockquoteLangNlJs,
	"static/generator/ckeditor/plugins/blockquote/lang/no.js": staticGeneratorCkeditorPluginsBlockquoteLangNoJs,
	"static/generator/ckeditor/plugins/blockquote/lang/oc.js": staticGeneratorCkeditorPluginsBlockquoteLangOcJs,
	"static/generator/ckeditor/plugins/blockquote/lang/pl.js": staticGeneratorCkeditorPluginsBlockquoteLangPlJs,
	"static/generator/ckeditor/plugins/blockquote/lang/pt-br.js": staticGeneratorCkeditorPluginsBlockquoteLangPtBrJs,
	"static/generator/ckeditor/plugins/blockquote/lang/pt.js": staticGeneratorCkeditorPluginsBlockquoteLangPtJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ro.js": staticGeneratorCkeditorPluginsBlockquoteLangRoJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ru.js": staticGeneratorCkeditorPluginsBlockquoteLangRuJs,
	"static/generator/ckeditor/plugins/blockquote/lang/si.js": staticGeneratorCkeditorPluginsBlockquoteLangSiJs,
	"static/generator/ckeditor/plugins/blockquote/lang/sk.js": staticGeneratorCkeditorPluginsBlockquoteLangSkJs,
	"static/generator/ckeditor/plugins/blockquote/lang/sl.js": staticGeneratorCkeditorPluginsBlockquoteLangSlJs,
	"static/generator/ckeditor/plugins/blockquote/lang/sq.js": staticGeneratorCkeditorPluginsBlockquoteLangSqJs,
	"static/generator/ckeditor/plugins/blockquote/lang/sr-latn.js": staticGeneratorCkeditorPluginsBlockquoteLangSrLatnJs,
	"static/generator/ckeditor/plugins/blockquote/lang/sr.js": staticGeneratorCkeditorPluginsBlockquoteLangSrJs,
	"static/generator/ckeditor/plugins/blockquote/lang/sv.js": staticGeneratorCkeditorPluginsBlockquoteLangSvJs,
	"static/generator/ckeditor/plugins/blockquote/lang/th.js": staticGeneratorCkeditorPluginsBlockquoteLangThJs,
	"static/generator/ckeditor/plugins/blockquote/lang/tr.js": staticGeneratorCkeditorPluginsBlockquoteLangTrJs,
	"static/generator/ckeditor/plugins/blockquote/lang/tt.js": staticGeneratorCkeditorPluginsBlockquoteLangTtJs,
	"static/generator/ckeditor/plugins/blockquote/lang/ug.js": staticGeneratorCkeditorPluginsBlockquoteLangUgJs,
	"static/generator/ckeditor/plugins/blockquote/lang/uk.js": staticGeneratorCkeditorPluginsBlockquoteLangUkJs,
	"static/generator/ckeditor/plugins/blockquote/lang/vi.js": staticGeneratorCkeditorPluginsBlockquoteLangViJs,
	"static/generator/ckeditor/plugins/blockquote/lang/zh-cn.js": staticGeneratorCkeditorPluginsBlockquoteLangZhCnJs,
	"static/generator/ckeditor/plugins/blockquote/lang/zh.js": staticGeneratorCkeditorPluginsBlockquoteLangZhJs,
	"static/generator/ckeditor/plugins/blockquote/plugin.js": staticGeneratorCkeditorPluginsBlockquotePluginJs,
	"static/generator/ckeditor/plugins/button/lang/af.js": staticGeneratorCkeditorPluginsButtonLangAfJs,
	"static/generator/ckeditor/plugins/button/lang/ar.js": staticGeneratorCkeditorPluginsButtonLangArJs,
	"static/generator/ckeditor/plugins/button/lang/az.js": staticGeneratorCkeditorPluginsButtonLangAzJs,
	"static/generator/ckeditor/plugins/button/lang/bg.js": staticGeneratorCkeditorPluginsButtonLangBgJs,
	"static/generator/ckeditor/plugins/button/lang/ca.js": staticGeneratorCkeditorPluginsButtonLangCaJs,
	"static/generator/ckeditor/plugins/button/lang/cs.js": staticGeneratorCkeditorPluginsButtonLangCsJs,
	"static/generator/ckeditor/plugins/button/lang/da.js": staticGeneratorCkeditorPluginsButtonLangDaJs,
	"static/generator/ckeditor/plugins/button/lang/de-ch.js": staticGeneratorCkeditorPluginsButtonLangDeChJs,
	"static/generator/ckeditor/plugins/button/lang/de.js": staticGeneratorCkeditorPluginsButtonLangDeJs,
	"static/generator/ckeditor/plugins/button/lang/el.js": staticGeneratorCkeditorPluginsButtonLangElJs,
	"static/generator/ckeditor/plugins/button/lang/en-gb.js": staticGeneratorCkeditorPluginsButtonLangEnGbJs,
	"static/generator/ckeditor/plugins/button/lang/en.js": staticGeneratorCkeditorPluginsButtonLangEnJs,
	"static/generator/ckeditor/plugins/button/lang/eo.js": staticGeneratorCkeditorPluginsButtonLangEoJs,
	"static/generator/ckeditor/plugins/button/lang/es.js": staticGeneratorCkeditorPluginsButtonLangEsJs,
	"static/generator/ckeditor/plugins/button/lang/eu.js": staticGeneratorCkeditorPluginsButtonLangEuJs,
	"static/generator/ckeditor/plugins/button/lang/fa.js": staticGeneratorCkeditorPluginsButtonLangFaJs,
	"static/generator/ckeditor/plugins/button/lang/fi.js": staticGeneratorCkeditorPluginsButtonLangFiJs,
	"static/generator/ckeditor/plugins/button/lang/fr.js": staticGeneratorCkeditorPluginsButtonLangFrJs,
	"static/generator/ckeditor/plugins/button/lang/gl.js": staticGeneratorCkeditorPluginsButtonLangGlJs,
	"static/generator/ckeditor/plugins/button/lang/he.js": staticGeneratorCkeditorPluginsButtonLangHeJs,
	"static/generator/ckeditor/plugins/button/lang/hu.js": staticGeneratorCkeditorPluginsButtonLangHuJs,
	"static/generator/ckeditor/plugins/button/lang/id.js": staticGeneratorCkeditorPluginsButtonLangIdJs,
	"static/generator/ckeditor/plugins/button/lang/it.js": staticGeneratorCkeditorPluginsButtonLangItJs,
	"static/generator/ckeditor/plugins/button/lang/ja.js": staticGeneratorCkeditorPluginsButtonLangJaJs,
	"static/generator/ckeditor/plugins/button/lang/km.js": staticGeneratorCkeditorPluginsButtonLangKmJs,
	"static/generator/ckeditor/plugins/button/lang/ko.js": staticGeneratorCkeditorPluginsButtonLangKoJs,
	"static/generator/ckeditor/plugins/button/lang/ku.js": staticGeneratorCkeditorPluginsButtonLangKuJs,
	"static/generator/ckeditor/plugins/button/lang/lt.js": staticGeneratorCkeditorPluginsButtonLangLtJs,
	"static/generator/ckeditor/plugins/button/lang/nb.js": staticGeneratorCkeditorPluginsButtonLangNbJs,
	"static/generator/ckeditor/plugins/button/lang/nl.js": staticGeneratorCkeditorPluginsButtonLangNlJs,
	"static/generator/ckeditor/plugins/button/lang/no.js": staticGeneratorCkeditorPluginsButtonLangNoJs,
	"static/generator/ckeditor/plugins/button/lang/oc.js": staticGeneratorCkeditorPluginsButtonLangOcJs,
	"static/generator/ckeditor/plugins/button/lang/pl.js": staticGeneratorCkeditorPluginsButtonLangPlJs,
	"static/generator/ckeditor/plugins/button/lang/pt-br.js": staticGeneratorCkeditorPluginsButtonLangPtBrJs,
	"static/generator/ckeditor/plugins/button/lang/pt.js": staticGeneratorCkeditorPluginsButtonLangPtJs,
	"static/generator/ckeditor/plugins/button/lang/ro.js": staticGeneratorCkeditorPluginsButtonLangRoJs,
	"static/generator/ckeditor/plugins/button/lang/ru.js": staticGeneratorCkeditorPluginsButtonLangRuJs,
	"static/generator/ckeditor/plugins/button/lang/sk.js": staticGeneratorCkeditorPluginsButtonLangSkJs,
	"static/generator/ckeditor/plugins/button/lang/sl.js": staticGeneratorCkeditorPluginsButtonLangSlJs,
	"static/generator/ckeditor/plugins/button/lang/sq.js": staticGeneratorCkeditorPluginsButtonLangSqJs,
	"static/generator/ckeditor/plugins/button/lang/sv.js": staticGeneratorCkeditorPluginsButtonLangSvJs,
	"static/generator/ckeditor/plugins/button/lang/tr.js": staticGeneratorCkeditorPluginsButtonLangTrJs,
	"static/generator/ckeditor/plugins/button/lang/tt.js": staticGeneratorCkeditorPluginsButtonLangTtJs,
	"static/generator/ckeditor/plugins/button/lang/ug.js": staticGeneratorCkeditorPluginsButtonLangUgJs,
	"static/generator/ckeditor/plugins/button/lang/uk.js": staticGeneratorCkeditorPluginsButtonLangUkJs,
	"static/generator/ckeditor/plugins/button/lang/vi.js": staticGeneratorCkeditorPluginsButtonLangViJs,
	"static/generator/ckeditor/plugins/button/lang/zh-cn.js": staticGeneratorCkeditorPluginsButtonLangZhCnJs,
	"static/generator/ckeditor/plugins/button/lang/zh.js": staticGeneratorCkeditorPluginsButtonLangZhJs,
	"static/generator/ckeditor/plugins/button/plugin.js": staticGeneratorCkeditorPluginsButtonPluginJs,
	"static/generator/ckeditor/plugins/ckawesome/dialogs/ckawesome.css": staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeCss,
	"static/generator/ckeditor/plugins/ckawesome/dialogs/ckawesome.js": staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeJs,
	"static/generator/ckeditor/plugins/ckawesome/icons/ckawesome.png": staticGeneratorCkeditorPluginsCkawesomeIconsCkawesomePng,
	"static/generator/ckeditor/plugins/ckawesome/plugin.js": staticGeneratorCkeditorPluginsCkawesomePluginJs,
	"static/generator/ckeditor/plugins/ckawesome/resources/select2/select2.full.min.css": staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinCss,
	"static/generator/ckeditor/plugins/ckawesome/resources/select2/select2.full.min.js": staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinJs,
	"static/generator/ckeditor/plugins/clipboard/dev/clipboard.html": staticGeneratorCkeditorPluginsClipboardDevClipboardHtml,
	"static/generator/ckeditor/plugins/clipboard/dev/console.js": staticGeneratorCkeditorPluginsClipboardDevConsoleJs,
	"static/generator/ckeditor/plugins/clipboard/dev/dnd.html": staticGeneratorCkeditorPluginsClipboardDevDndHtml,
	"static/generator/ckeditor/plugins/clipboard/dialogs/paste.js": staticGeneratorCkeditorPluginsClipboardDialogsPasteJs,
	"static/generator/ckeditor/plugins/clipboard/icons/copy-rtl.png": staticGeneratorCkeditorPluginsClipboardIconsCopyRtlPng,
	"static/generator/ckeditor/plugins/clipboard/icons/copy.png": staticGeneratorCkeditorPluginsClipboardIconsCopyPng,
	"static/generator/ckeditor/plugins/clipboard/icons/cut-rtl.png": staticGeneratorCkeditorPluginsClipboardIconsCutRtlPng,
	"static/generator/ckeditor/plugins/clipboard/icons/cut.png": staticGeneratorCkeditorPluginsClipboardIconsCutPng,
	"static/generator/ckeditor/plugins/clipboard/icons/hidpi/copy-rtl.png": staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyRtlPng,
	"static/generator/ckeditor/plugins/clipboard/icons/hidpi/copy.png": staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyPng,
	"static/generator/ckeditor/plugins/clipboard/icons/hidpi/cut-rtl.png": staticGeneratorCkeditorPluginsClipboardIconsHidpiCutRtlPng,
	"static/generator/ckeditor/plugins/clipboard/icons/hidpi/cut.png": staticGeneratorCkeditorPluginsClipboardIconsHidpiCutPng,
	"static/generator/ckeditor/plugins/clipboard/icons/hidpi/paste-rtl.png": staticGeneratorCkeditorPluginsClipboardIconsHidpiPasteRtlPng,
	"static/generator/ckeditor/plugins/clipboard/icons/hidpi/paste.png": staticGeneratorCkeditorPluginsClipboardIconsHidpiPastePng,
	"static/generator/ckeditor/plugins/clipboard/icons/paste-rtl.png": staticGeneratorCkeditorPluginsClipboardIconsPasteRtlPng,
	"static/generator/ckeditor/plugins/clipboard/icons/paste.png": staticGeneratorCkeditorPluginsClipboardIconsPastePng,
	"static/generator/ckeditor/plugins/clipboard/lang/af.js": staticGeneratorCkeditorPluginsClipboardLangAfJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ar.js": staticGeneratorCkeditorPluginsClipboardLangArJs,
	"static/generator/ckeditor/plugins/clipboard/lang/az.js": staticGeneratorCkeditorPluginsClipboardLangAzJs,
	"static/generator/ckeditor/plugins/clipboard/lang/bg.js": staticGeneratorCkeditorPluginsClipboardLangBgJs,
	"static/generator/ckeditor/plugins/clipboard/lang/bn.js": staticGeneratorCkeditorPluginsClipboardLangBnJs,
	"static/generator/ckeditor/plugins/clipboard/lang/bs.js": staticGeneratorCkeditorPluginsClipboardLangBsJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ca.js": staticGeneratorCkeditorPluginsClipboardLangCaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/cs.js": staticGeneratorCkeditorPluginsClipboardLangCsJs,
	"static/generator/ckeditor/plugins/clipboard/lang/cy.js": staticGeneratorCkeditorPluginsClipboardLangCyJs,
	"static/generator/ckeditor/plugins/clipboard/lang/da.js": staticGeneratorCkeditorPluginsClipboardLangDaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/de-ch.js": staticGeneratorCkeditorPluginsClipboardLangDeChJs,
	"static/generator/ckeditor/plugins/clipboard/lang/de.js": staticGeneratorCkeditorPluginsClipboardLangDeJs,
	"static/generator/ckeditor/plugins/clipboard/lang/el.js": staticGeneratorCkeditorPluginsClipboardLangElJs,
	"static/generator/ckeditor/plugins/clipboard/lang/en-au.js": staticGeneratorCkeditorPluginsClipboardLangEnAuJs,
	"static/generator/ckeditor/plugins/clipboard/lang/en-ca.js": staticGeneratorCkeditorPluginsClipboardLangEnCaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/en-gb.js": staticGeneratorCkeditorPluginsClipboardLangEnGbJs,
	"static/generator/ckeditor/plugins/clipboard/lang/en.js": staticGeneratorCkeditorPluginsClipboardLangEnJs,
	"static/generator/ckeditor/plugins/clipboard/lang/eo.js": staticGeneratorCkeditorPluginsClipboardLangEoJs,
	"static/generator/ckeditor/plugins/clipboard/lang/es.js": staticGeneratorCkeditorPluginsClipboardLangEsJs,
	"static/generator/ckeditor/plugins/clipboard/lang/et.js": staticGeneratorCkeditorPluginsClipboardLangEtJs,
	"static/generator/ckeditor/plugins/clipboard/lang/eu.js": staticGeneratorCkeditorPluginsClipboardLangEuJs,
	"static/generator/ckeditor/plugins/clipboard/lang/fa.js": staticGeneratorCkeditorPluginsClipboardLangFaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/fi.js": staticGeneratorCkeditorPluginsClipboardLangFiJs,
	"static/generator/ckeditor/plugins/clipboard/lang/fo.js": staticGeneratorCkeditorPluginsClipboardLangFoJs,
	"static/generator/ckeditor/plugins/clipboard/lang/fr-ca.js": staticGeneratorCkeditorPluginsClipboardLangFrCaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/fr.js": staticGeneratorCkeditorPluginsClipboardLangFrJs,
	"static/generator/ckeditor/plugins/clipboard/lang/gl.js": staticGeneratorCkeditorPluginsClipboardLangGlJs,
	"static/generator/ckeditor/plugins/clipboard/lang/gu.js": staticGeneratorCkeditorPluginsClipboardLangGuJs,
	"static/generator/ckeditor/plugins/clipboard/lang/he.js": staticGeneratorCkeditorPluginsClipboardLangHeJs,
	"static/generator/ckeditor/plugins/clipboard/lang/hi.js": staticGeneratorCkeditorPluginsClipboardLangHiJs,
	"static/generator/ckeditor/plugins/clipboard/lang/hr.js": staticGeneratorCkeditorPluginsClipboardLangHrJs,
	"static/generator/ckeditor/plugins/clipboard/lang/hu.js": staticGeneratorCkeditorPluginsClipboardLangHuJs,
	"static/generator/ckeditor/plugins/clipboard/lang/id.js": staticGeneratorCkeditorPluginsClipboardLangIdJs,
	"static/generator/ckeditor/plugins/clipboard/lang/is.js": staticGeneratorCkeditorPluginsClipboardLangIsJs,
	"static/generator/ckeditor/plugins/clipboard/lang/it.js": staticGeneratorCkeditorPluginsClipboardLangItJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ja.js": staticGeneratorCkeditorPluginsClipboardLangJaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ka.js": staticGeneratorCkeditorPluginsClipboardLangKaJs,
	"static/generator/ckeditor/plugins/clipboard/lang/km.js": staticGeneratorCkeditorPluginsClipboardLangKmJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ko.js": staticGeneratorCkeditorPluginsClipboardLangKoJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ku.js": staticGeneratorCkeditorPluginsClipboardLangKuJs,
	"static/generator/ckeditor/plugins/clipboard/lang/lt.js": staticGeneratorCkeditorPluginsClipboardLangLtJs,
	"static/generator/ckeditor/plugins/clipboard/lang/lv.js": staticGeneratorCkeditorPluginsClipboardLangLvJs,
	"static/generator/ckeditor/plugins/clipboard/lang/mk.js": staticGeneratorCkeditorPluginsClipboardLangMkJs,
	"static/generator/ckeditor/plugins/clipboard/lang/mn.js": staticGeneratorCkeditorPluginsClipboardLangMnJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ms.js": staticGeneratorCkeditorPluginsClipboardLangMsJs,
	"static/generator/ckeditor/plugins/clipboard/lang/nb.js": staticGeneratorCkeditorPluginsClipboardLangNbJs,
	"static/generator/ckeditor/plugins/clipboard/lang/nl.js": staticGeneratorCkeditorPluginsClipboardLangNlJs,
	"static/generator/ckeditor/plugins/clipboard/lang/no.js": staticGeneratorCkeditorPluginsClipboardLangNoJs,
	"static/generator/ckeditor/plugins/clipboard/lang/oc.js": staticGeneratorCkeditorPluginsClipboardLangOcJs,
	"static/generator/ckeditor/plugins/clipboard/lang/pl.js": staticGeneratorCkeditorPluginsClipboardLangPlJs,
	"static/generator/ckeditor/plugins/clipboard/lang/pt-br.js": staticGeneratorCkeditorPluginsClipboardLangPtBrJs,
	"static/generator/ckeditor/plugins/clipboard/lang/pt.js": staticGeneratorCkeditorPluginsClipboardLangPtJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ro.js": staticGeneratorCkeditorPluginsClipboardLangRoJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ru.js": staticGeneratorCkeditorPluginsClipboardLangRuJs,
	"static/generator/ckeditor/plugins/clipboard/lang/si.js": staticGeneratorCkeditorPluginsClipboardLangSiJs,
	"static/generator/ckeditor/plugins/clipboard/lang/sk.js": staticGeneratorCkeditorPluginsClipboardLangSkJs,
	"static/generator/ckeditor/plugins/clipboard/lang/sl.js": staticGeneratorCkeditorPluginsClipboardLangSlJs,
	"static/generator/ckeditor/plugins/clipboard/lang/sq.js": staticGeneratorCkeditorPluginsClipboardLangSqJs,
	"static/generator/ckeditor/plugins/clipboard/lang/sr-latn.js": staticGeneratorCkeditorPluginsClipboardLangSrLatnJs,
	"static/generator/ckeditor/plugins/clipboard/lang/sr.js": staticGeneratorCkeditorPluginsClipboardLangSrJs,
	"static/generator/ckeditor/plugins/clipboard/lang/sv.js": staticGeneratorCkeditorPluginsClipboardLangSvJs,
	"static/generator/ckeditor/plugins/clipboard/lang/th.js": staticGeneratorCkeditorPluginsClipboardLangThJs,
	"static/generator/ckeditor/plugins/clipboard/lang/tr.js": staticGeneratorCkeditorPluginsClipboardLangTrJs,
	"static/generator/ckeditor/plugins/clipboard/lang/tt.js": staticGeneratorCkeditorPluginsClipboardLangTtJs,
	"static/generator/ckeditor/plugins/clipboard/lang/ug.js": staticGeneratorCkeditorPluginsClipboardLangUgJs,
	"static/generator/ckeditor/plugins/clipboard/lang/uk.js": staticGeneratorCkeditorPluginsClipboardLangUkJs,
	"static/generator/ckeditor/plugins/clipboard/lang/vi.js": staticGeneratorCkeditorPluginsClipboardLangViJs,
	"static/generator/ckeditor/plugins/clipboard/lang/zh-cn.js": staticGeneratorCkeditorPluginsClipboardLangZhCnJs,
	"static/generator/ckeditor/plugins/clipboard/lang/zh.js": staticGeneratorCkeditorPluginsClipboardLangZhJs,
	"static/generator/ckeditor/plugins/clipboard/plugin.js": staticGeneratorCkeditorPluginsClipboardPluginJs,
	"static/generator/ckeditor/plugins/colorbutton/icons/bgcolor.png": staticGeneratorCkeditorPluginsColorbuttonIconsBgcolorPng,
	"static/generator/ckeditor/plugins/colorbutton/icons/hidpi/bgcolor.png": staticGeneratorCkeditorPluginsColorbuttonIconsHidpiBgcolorPng,
	"static/generator/ckeditor/plugins/colorbutton/icons/hidpi/textcolor.png": staticGeneratorCkeditorPluginsColorbuttonIconsHidpiTextcolorPng,
	"static/generator/ckeditor/plugins/colorbutton/icons/textcolor.png": staticGeneratorCkeditorPluginsColorbuttonIconsTextcolorPng,
	"static/generator/ckeditor/plugins/colorbutton/lang/af.js": staticGeneratorCkeditorPluginsColorbuttonLangAfJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ar.js": staticGeneratorCkeditorPluginsColorbuttonLangArJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/az.js": staticGeneratorCkeditorPluginsColorbuttonLangAzJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/bg.js": staticGeneratorCkeditorPluginsColorbuttonLangBgJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/bn.js": staticGeneratorCkeditorPluginsColorbuttonLangBnJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/bs.js": staticGeneratorCkeditorPluginsColorbuttonLangBsJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ca.js": staticGeneratorCkeditorPluginsColorbuttonLangCaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/cs.js": staticGeneratorCkeditorPluginsColorbuttonLangCsJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/cy.js": staticGeneratorCkeditorPluginsColorbuttonLangCyJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/da.js": staticGeneratorCkeditorPluginsColorbuttonLangDaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/de-ch.js": staticGeneratorCkeditorPluginsColorbuttonLangDeChJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/de.js": staticGeneratorCkeditorPluginsColorbuttonLangDeJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/el.js": staticGeneratorCkeditorPluginsColorbuttonLangElJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/en-au.js": staticGeneratorCkeditorPluginsColorbuttonLangEnAuJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/en-ca.js": staticGeneratorCkeditorPluginsColorbuttonLangEnCaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/en-gb.js": staticGeneratorCkeditorPluginsColorbuttonLangEnGbJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/en.js": staticGeneratorCkeditorPluginsColorbuttonLangEnJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/eo.js": staticGeneratorCkeditorPluginsColorbuttonLangEoJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/es.js": staticGeneratorCkeditorPluginsColorbuttonLangEsJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/et.js": staticGeneratorCkeditorPluginsColorbuttonLangEtJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/eu.js": staticGeneratorCkeditorPluginsColorbuttonLangEuJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/fa.js": staticGeneratorCkeditorPluginsColorbuttonLangFaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/fi.js": staticGeneratorCkeditorPluginsColorbuttonLangFiJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/fo.js": staticGeneratorCkeditorPluginsColorbuttonLangFoJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/fr-ca.js": staticGeneratorCkeditorPluginsColorbuttonLangFrCaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/fr.js": staticGeneratorCkeditorPluginsColorbuttonLangFrJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/gl.js": staticGeneratorCkeditorPluginsColorbuttonLangGlJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/gu.js": staticGeneratorCkeditorPluginsColorbuttonLangGuJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/he.js": staticGeneratorCkeditorPluginsColorbuttonLangHeJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/hi.js": staticGeneratorCkeditorPluginsColorbuttonLangHiJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/hr.js": staticGeneratorCkeditorPluginsColorbuttonLangHrJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/hu.js": staticGeneratorCkeditorPluginsColorbuttonLangHuJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/id.js": staticGeneratorCkeditorPluginsColorbuttonLangIdJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/is.js": staticGeneratorCkeditorPluginsColorbuttonLangIsJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/it.js": staticGeneratorCkeditorPluginsColorbuttonLangItJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ja.js": staticGeneratorCkeditorPluginsColorbuttonLangJaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ka.js": staticGeneratorCkeditorPluginsColorbuttonLangKaJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/km.js": staticGeneratorCkeditorPluginsColorbuttonLangKmJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ko.js": staticGeneratorCkeditorPluginsColorbuttonLangKoJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ku.js": staticGeneratorCkeditorPluginsColorbuttonLangKuJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/lt.js": staticGeneratorCkeditorPluginsColorbuttonLangLtJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/lv.js": staticGeneratorCkeditorPluginsColorbuttonLangLvJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/mk.js": staticGeneratorCkeditorPluginsColorbuttonLangMkJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/mn.js": staticGeneratorCkeditorPluginsColorbuttonLangMnJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ms.js": staticGeneratorCkeditorPluginsColorbuttonLangMsJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/nb.js": staticGeneratorCkeditorPluginsColorbuttonLangNbJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/nl.js": staticGeneratorCkeditorPluginsColorbuttonLangNlJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/no.js": staticGeneratorCkeditorPluginsColorbuttonLangNoJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/oc.js": staticGeneratorCkeditorPluginsColorbuttonLangOcJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/pl.js": staticGeneratorCkeditorPluginsColorbuttonLangPlJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/pt-br.js": staticGeneratorCkeditorPluginsColorbuttonLangPtBrJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/pt.js": staticGeneratorCkeditorPluginsColorbuttonLangPtJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ro.js": staticGeneratorCkeditorPluginsColorbuttonLangRoJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ru.js": staticGeneratorCkeditorPluginsColorbuttonLangRuJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/si.js": staticGeneratorCkeditorPluginsColorbuttonLangSiJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/sk.js": staticGeneratorCkeditorPluginsColorbuttonLangSkJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/sl.js": staticGeneratorCkeditorPluginsColorbuttonLangSlJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/sq.js": staticGeneratorCkeditorPluginsColorbuttonLangSqJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/sr-latn.js": staticGeneratorCkeditorPluginsColorbuttonLangSrLatnJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/sr.js": staticGeneratorCkeditorPluginsColorbuttonLangSrJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/sv.js": staticGeneratorCkeditorPluginsColorbuttonLangSvJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/th.js": staticGeneratorCkeditorPluginsColorbuttonLangThJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/tr.js": staticGeneratorCkeditorPluginsColorbuttonLangTrJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/tt.js": staticGeneratorCkeditorPluginsColorbuttonLangTtJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/ug.js": staticGeneratorCkeditorPluginsColorbuttonLangUgJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/uk.js": staticGeneratorCkeditorPluginsColorbuttonLangUkJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/vi.js": staticGeneratorCkeditorPluginsColorbuttonLangViJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/zh-cn.js": staticGeneratorCkeditorPluginsColorbuttonLangZhCnJs,
	"static/generator/ckeditor/plugins/colorbutton/lang/zh.js": staticGeneratorCkeditorPluginsColorbuttonLangZhJs,
	"static/generator/ckeditor/plugins/colorbutton/plugin.js": staticGeneratorCkeditorPluginsColorbuttonPluginJs,
	"static/generator/ckeditor/plugins/colordialog/dialogs/colordialog.css": staticGeneratorCkeditorPluginsColordialogDialogsColordialogCss,
	"static/generator/ckeditor/plugins/colordialog/dialogs/colordialog.js": staticGeneratorCkeditorPluginsColordialogDialogsColordialogJs,
	"static/generator/ckeditor/plugins/colordialog/lang/af.js": staticGeneratorCkeditorPluginsColordialogLangAfJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ar.js": staticGeneratorCkeditorPluginsColordialogLangArJs,
	"static/generator/ckeditor/plugins/colordialog/lang/az.js": staticGeneratorCkeditorPluginsColordialogLangAzJs,
	"static/generator/ckeditor/plugins/colordialog/lang/bg.js": staticGeneratorCkeditorPluginsColordialogLangBgJs,
	"static/generator/ckeditor/plugins/colordialog/lang/bn.js": staticGeneratorCkeditorPluginsColordialogLangBnJs,
	"static/generator/ckeditor/plugins/colordialog/lang/bs.js": staticGeneratorCkeditorPluginsColordialogLangBsJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ca.js": staticGeneratorCkeditorPluginsColordialogLangCaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/cs.js": staticGeneratorCkeditorPluginsColordialogLangCsJs,
	"static/generator/ckeditor/plugins/colordialog/lang/cy.js": staticGeneratorCkeditorPluginsColordialogLangCyJs,
	"static/generator/ckeditor/plugins/colordialog/lang/da.js": staticGeneratorCkeditorPluginsColordialogLangDaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/de-ch.js": staticGeneratorCkeditorPluginsColordialogLangDeChJs,
	"static/generator/ckeditor/plugins/colordialog/lang/de.js": staticGeneratorCkeditorPluginsColordialogLangDeJs,
	"static/generator/ckeditor/plugins/colordialog/lang/el.js": staticGeneratorCkeditorPluginsColordialogLangElJs,
	"static/generator/ckeditor/plugins/colordialog/lang/en-au.js": staticGeneratorCkeditorPluginsColordialogLangEnAuJs,
	"static/generator/ckeditor/plugins/colordialog/lang/en-ca.js": staticGeneratorCkeditorPluginsColordialogLangEnCaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/en-gb.js": staticGeneratorCkeditorPluginsColordialogLangEnGbJs,
	"static/generator/ckeditor/plugins/colordialog/lang/en.js": staticGeneratorCkeditorPluginsColordialogLangEnJs,
	"static/generator/ckeditor/plugins/colordialog/lang/eo.js": staticGeneratorCkeditorPluginsColordialogLangEoJs,
	"static/generator/ckeditor/plugins/colordialog/lang/es.js": staticGeneratorCkeditorPluginsColordialogLangEsJs,
	"static/generator/ckeditor/plugins/colordialog/lang/et.js": staticGeneratorCkeditorPluginsColordialogLangEtJs,
	"static/generator/ckeditor/plugins/colordialog/lang/eu.js": staticGeneratorCkeditorPluginsColordialogLangEuJs,
	"static/generator/ckeditor/plugins/colordialog/lang/fa.js": staticGeneratorCkeditorPluginsColordialogLangFaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/fi.js": staticGeneratorCkeditorPluginsColordialogLangFiJs,
	"static/generator/ckeditor/plugins/colordialog/lang/fo.js": staticGeneratorCkeditorPluginsColordialogLangFoJs,
	"static/generator/ckeditor/plugins/colordialog/lang/fr-ca.js": staticGeneratorCkeditorPluginsColordialogLangFrCaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/fr.js": staticGeneratorCkeditorPluginsColordialogLangFrJs,
	"static/generator/ckeditor/plugins/colordialog/lang/gl.js": staticGeneratorCkeditorPluginsColordialogLangGlJs,
	"static/generator/ckeditor/plugins/colordialog/lang/gu.js": staticGeneratorCkeditorPluginsColordialogLangGuJs,
	"static/generator/ckeditor/plugins/colordialog/lang/he.js": staticGeneratorCkeditorPluginsColordialogLangHeJs,
	"static/generator/ckeditor/plugins/colordialog/lang/hi.js": staticGeneratorCkeditorPluginsColordialogLangHiJs,
	"static/generator/ckeditor/plugins/colordialog/lang/hr.js": staticGeneratorCkeditorPluginsColordialogLangHrJs,
	"static/generator/ckeditor/plugins/colordialog/lang/hu.js": staticGeneratorCkeditorPluginsColordialogLangHuJs,
	"static/generator/ckeditor/plugins/colordialog/lang/id.js": staticGeneratorCkeditorPluginsColordialogLangIdJs,
	"static/generator/ckeditor/plugins/colordialog/lang/is.js": staticGeneratorCkeditorPluginsColordialogLangIsJs,
	"static/generator/ckeditor/plugins/colordialog/lang/it.js": staticGeneratorCkeditorPluginsColordialogLangItJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ja.js": staticGeneratorCkeditorPluginsColordialogLangJaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ka.js": staticGeneratorCkeditorPluginsColordialogLangKaJs,
	"static/generator/ckeditor/plugins/colordialog/lang/km.js": staticGeneratorCkeditorPluginsColordialogLangKmJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ko.js": staticGeneratorCkeditorPluginsColordialogLangKoJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ku.js": staticGeneratorCkeditorPluginsColordialogLangKuJs,
	"static/generator/ckeditor/plugins/colordialog/lang/lt.js": staticGeneratorCkeditorPluginsColordialogLangLtJs,
	"static/generator/ckeditor/plugins/colordialog/lang/lv.js": staticGeneratorCkeditorPluginsColordialogLangLvJs,
	"static/generator/ckeditor/plugins/colordialog/lang/mk.js": staticGeneratorCkeditorPluginsColordialogLangMkJs,
	"static/generator/ckeditor/plugins/colordialog/lang/mn.js": staticGeneratorCkeditorPluginsColordialogLangMnJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ms.js": staticGeneratorCkeditorPluginsColordialogLangMsJs,
	"static/generator/ckeditor/plugins/colordialog/lang/nb.js": staticGeneratorCkeditorPluginsColordialogLangNbJs,
	"static/generator/ckeditor/plugins/colordialog/lang/nl.js": staticGeneratorCkeditorPluginsColordialogLangNlJs,
	"static/generator/ckeditor/plugins/colordialog/lang/no.js": staticGeneratorCkeditorPluginsColordialogLangNoJs,
	"static/generator/ckeditor/plugins/colordialog/lang/oc.js": staticGeneratorCkeditorPluginsColordialogLangOcJs,
	"static/generator/ckeditor/plugins/colordialog/lang/pl.js": staticGeneratorCkeditorPluginsColordialogLangPlJs,
	"static/generator/ckeditor/plugins/colordialog/lang/pt-br.js": staticGeneratorCkeditorPluginsColordialogLangPtBrJs,
	"static/generator/ckeditor/plugins/colordialog/lang/pt.js": staticGeneratorCkeditorPluginsColordialogLangPtJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ro.js": staticGeneratorCkeditorPluginsColordialogLangRoJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ru.js": staticGeneratorCkeditorPluginsColordialogLangRuJs,
	"static/generator/ckeditor/plugins/colordialog/lang/si.js": staticGeneratorCkeditorPluginsColordialogLangSiJs,
	"static/generator/ckeditor/plugins/colordialog/lang/sk.js": staticGeneratorCkeditorPluginsColordialogLangSkJs,
	"static/generator/ckeditor/plugins/colordialog/lang/sl.js": staticGeneratorCkeditorPluginsColordialogLangSlJs,
	"static/generator/ckeditor/plugins/colordialog/lang/sq.js": staticGeneratorCkeditorPluginsColordialogLangSqJs,
	"static/generator/ckeditor/plugins/colordialog/lang/sr-latn.js": staticGeneratorCkeditorPluginsColordialogLangSrLatnJs,
	"static/generator/ckeditor/plugins/colordialog/lang/sr.js": staticGeneratorCkeditorPluginsColordialogLangSrJs,
	"static/generator/ckeditor/plugins/colordialog/lang/sv.js": staticGeneratorCkeditorPluginsColordialogLangSvJs,
	"static/generator/ckeditor/plugins/colordialog/lang/th.js": staticGeneratorCkeditorPluginsColordialogLangThJs,
	"static/generator/ckeditor/plugins/colordialog/lang/tr.js": staticGeneratorCkeditorPluginsColordialogLangTrJs,
	"static/generator/ckeditor/plugins/colordialog/lang/tt.js": staticGeneratorCkeditorPluginsColordialogLangTtJs,
	"static/generator/ckeditor/plugins/colordialog/lang/ug.js": staticGeneratorCkeditorPluginsColordialogLangUgJs,
	"static/generator/ckeditor/plugins/colordialog/lang/uk.js": staticGeneratorCkeditorPluginsColordialogLangUkJs,
	"static/generator/ckeditor/plugins/colordialog/lang/vi.js": staticGeneratorCkeditorPluginsColordialogLangViJs,
	"static/generator/ckeditor/plugins/colordialog/lang/zh-cn.js": staticGeneratorCkeditorPluginsColordialogLangZhCnJs,
	"static/generator/ckeditor/plugins/colordialog/lang/zh.js": staticGeneratorCkeditorPluginsColordialogLangZhJs,
	"static/generator/ckeditor/plugins/colordialog/plugin.js": staticGeneratorCkeditorPluginsColordialogPluginJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/af.js": staticGeneratorCkeditorPluginsContextmenuLangAfJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ar.js": staticGeneratorCkeditorPluginsContextmenuLangArJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/az.js": staticGeneratorCkeditorPluginsContextmenuLangAzJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/bg.js": staticGeneratorCkeditorPluginsContextmenuLangBgJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/bn.js": staticGeneratorCkeditorPluginsContextmenuLangBnJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/bs.js": staticGeneratorCkeditorPluginsContextmenuLangBsJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ca.js": staticGeneratorCkeditorPluginsContextmenuLangCaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/cs.js": staticGeneratorCkeditorPluginsContextmenuLangCsJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/cy.js": staticGeneratorCkeditorPluginsContextmenuLangCyJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/da.js": staticGeneratorCkeditorPluginsContextmenuLangDaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/de-ch.js": staticGeneratorCkeditorPluginsContextmenuLangDeChJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/de.js": staticGeneratorCkeditorPluginsContextmenuLangDeJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/el.js": staticGeneratorCkeditorPluginsContextmenuLangElJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/en-au.js": staticGeneratorCkeditorPluginsContextmenuLangEnAuJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/en-ca.js": staticGeneratorCkeditorPluginsContextmenuLangEnCaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/en-gb.js": staticGeneratorCkeditorPluginsContextmenuLangEnGbJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/en.js": staticGeneratorCkeditorPluginsContextmenuLangEnJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/eo.js": staticGeneratorCkeditorPluginsContextmenuLangEoJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/es.js": staticGeneratorCkeditorPluginsContextmenuLangEsJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/et.js": staticGeneratorCkeditorPluginsContextmenuLangEtJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/eu.js": staticGeneratorCkeditorPluginsContextmenuLangEuJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/fa.js": staticGeneratorCkeditorPluginsContextmenuLangFaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/fi.js": staticGeneratorCkeditorPluginsContextmenuLangFiJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/fo.js": staticGeneratorCkeditorPluginsContextmenuLangFoJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/fr-ca.js": staticGeneratorCkeditorPluginsContextmenuLangFrCaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/fr.js": staticGeneratorCkeditorPluginsContextmenuLangFrJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/gl.js": staticGeneratorCkeditorPluginsContextmenuLangGlJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/gu.js": staticGeneratorCkeditorPluginsContextmenuLangGuJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/he.js": staticGeneratorCkeditorPluginsContextmenuLangHeJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/hi.js": staticGeneratorCkeditorPluginsContextmenuLangHiJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/hr.js": staticGeneratorCkeditorPluginsContextmenuLangHrJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/hu.js": staticGeneratorCkeditorPluginsContextmenuLangHuJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/id.js": staticGeneratorCkeditorPluginsContextmenuLangIdJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/is.js": staticGeneratorCkeditorPluginsContextmenuLangIsJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/it.js": staticGeneratorCkeditorPluginsContextmenuLangItJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ja.js": staticGeneratorCkeditorPluginsContextmenuLangJaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ka.js": staticGeneratorCkeditorPluginsContextmenuLangKaJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/km.js": staticGeneratorCkeditorPluginsContextmenuLangKmJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ko.js": staticGeneratorCkeditorPluginsContextmenuLangKoJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ku.js": staticGeneratorCkeditorPluginsContextmenuLangKuJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/lt.js": staticGeneratorCkeditorPluginsContextmenuLangLtJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/lv.js": staticGeneratorCkeditorPluginsContextmenuLangLvJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/mk.js": staticGeneratorCkeditorPluginsContextmenuLangMkJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/mn.js": staticGeneratorCkeditorPluginsContextmenuLangMnJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ms.js": staticGeneratorCkeditorPluginsContextmenuLangMsJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/nb.js": staticGeneratorCkeditorPluginsContextmenuLangNbJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/nl.js": staticGeneratorCkeditorPluginsContextmenuLangNlJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/no.js": staticGeneratorCkeditorPluginsContextmenuLangNoJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/oc.js": staticGeneratorCkeditorPluginsContextmenuLangOcJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/pl.js": staticGeneratorCkeditorPluginsContextmenuLangPlJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/pt-br.js": staticGeneratorCkeditorPluginsContextmenuLangPtBrJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/pt.js": staticGeneratorCkeditorPluginsContextmenuLangPtJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ro.js": staticGeneratorCkeditorPluginsContextmenuLangRoJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ru.js": staticGeneratorCkeditorPluginsContextmenuLangRuJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/si.js": staticGeneratorCkeditorPluginsContextmenuLangSiJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/sk.js": staticGeneratorCkeditorPluginsContextmenuLangSkJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/sl.js": staticGeneratorCkeditorPluginsContextmenuLangSlJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/sq.js": staticGeneratorCkeditorPluginsContextmenuLangSqJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/sr-latn.js": staticGeneratorCkeditorPluginsContextmenuLangSrLatnJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/sr.js": staticGeneratorCkeditorPluginsContextmenuLangSrJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/sv.js": staticGeneratorCkeditorPluginsContextmenuLangSvJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/th.js": staticGeneratorCkeditorPluginsContextmenuLangThJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/tr.js": staticGeneratorCkeditorPluginsContextmenuLangTrJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/tt.js": staticGeneratorCkeditorPluginsContextmenuLangTtJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/ug.js": staticGeneratorCkeditorPluginsContextmenuLangUgJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/uk.js": staticGeneratorCkeditorPluginsContextmenuLangUkJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/vi.js": staticGeneratorCkeditorPluginsContextmenuLangViJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/zh-cn.js": staticGeneratorCkeditorPluginsContextmenuLangZhCnJs,
	"static/generator/ckeditor/plugins/contextmenu/lang/zh.js": staticGeneratorCkeditorPluginsContextmenuLangZhJs,
	"static/generator/ckeditor/plugins/contextmenu/plugin.js": staticGeneratorCkeditorPluginsContextmenuPluginJs,
	"static/generator/ckeditor/plugins/copyformatting/cursors/cursor-disabled.svg": staticGeneratorCkeditorPluginsCopyformattingCursorsCursorDisabledSvg,
	"static/generator/ckeditor/plugins/copyformatting/cursors/cursor.svg": staticGeneratorCkeditorPluginsCopyformattingCursorsCursorSvg,
	"static/generator/ckeditor/plugins/copyformatting/icons/copyformatting.png": staticGeneratorCkeditorPluginsCopyformattingIconsCopyformattingPng,
	"static/generator/ckeditor/plugins/copyformatting/icons/hidpi/copyformatting.png": staticGeneratorCkeditorPluginsCopyformattingIconsHidpiCopyformattingPng,
	"static/generator/ckeditor/plugins/copyformatting/lang/en.js": staticGeneratorCkeditorPluginsCopyformattingLangEnJs,
	"static/generator/ckeditor/plugins/copyformatting/plugin.js": staticGeneratorCkeditorPluginsCopyformattingPluginJs,
	"static/generator/ckeditor/plugins/copyformatting/styles/copyformatting.css": staticGeneratorCkeditorPluginsCopyformattingStylesCopyformattingCss,
	"static/generator/ckeditor/plugins/dialog/dialogDefinition.js": staticGeneratorCkeditorPluginsDialogDialogdefinitionJs,
	"static/generator/ckeditor/plugins/dialog/plugin.js": staticGeneratorCkeditorPluginsDialogPluginJs,
	"static/generator/ckeditor/plugins/dialog/samples/assets/my_dialog.js": staticGeneratorCkeditorPluginsDialogSamplesAssetsMy_dialogJs,
	"static/generator/ckeditor/plugins/dialog/samples/dialog.html": staticGeneratorCkeditorPluginsDialogSamplesDialogHtml,
	"static/generator/ckeditor/plugins/dialogadvtab/plugin.js": staticGeneratorCkeditorPluginsDialogadvtabPluginJs,
	"static/generator/ckeditor/plugins/dialogui/plugin.js": staticGeneratorCkeditorPluginsDialoguiPluginJs,
	"static/generator/ckeditor/plugins/div/dialogs/div.js": staticGeneratorCkeditorPluginsDivDialogsDivJs,
	"static/generator/ckeditor/plugins/div/icons/creatediv.png": staticGeneratorCkeditorPluginsDivIconsCreatedivPng,
	"static/generator/ckeditor/plugins/div/icons/hidpi/creatediv.png": staticGeneratorCkeditorPluginsDivIconsHidpiCreatedivPng,
	"static/generator/ckeditor/plugins/div/lang/af.js": staticGeneratorCkeditorPluginsDivLangAfJs,
	"static/generator/ckeditor/plugins/div/lang/ar.js": staticGeneratorCkeditorPluginsDivLangArJs,
	"static/generator/ckeditor/plugins/div/lang/az.js": staticGeneratorCkeditorPluginsDivLangAzJs,
	"static/generator/ckeditor/plugins/div/lang/bg.js": staticGeneratorCkeditorPluginsDivLangBgJs,
	"static/generator/ckeditor/plugins/div/lang/bn.js": staticGeneratorCkeditorPluginsDivLangBnJs,
	"static/generator/ckeditor/plugins/div/lang/bs.js": staticGeneratorCkeditorPluginsDivLangBsJs,
	"static/generator/ckeditor/plugins/div/lang/ca.js": staticGeneratorCkeditorPluginsDivLangCaJs,
	"static/generator/ckeditor/plugins/div/lang/cs.js": staticGeneratorCkeditorPluginsDivLangCsJs,
	"static/generator/ckeditor/plugins/div/lang/cy.js": staticGeneratorCkeditorPluginsDivLangCyJs,
	"static/generator/ckeditor/plugins/div/lang/da.js": staticGeneratorCkeditorPluginsDivLangDaJs,
	"static/generator/ckeditor/plugins/div/lang/de-ch.js": staticGeneratorCkeditorPluginsDivLangDeChJs,
	"static/generator/ckeditor/plugins/div/lang/de.js": staticGeneratorCkeditorPluginsDivLangDeJs,
	"static/generator/ckeditor/plugins/div/lang/el.js": staticGeneratorCkeditorPluginsDivLangElJs,
	"static/generator/ckeditor/plugins/div/lang/en-au.js": staticGeneratorCkeditorPluginsDivLangEnAuJs,
	"static/generator/ckeditor/plugins/div/lang/en-ca.js": staticGeneratorCkeditorPluginsDivLangEnCaJs,
	"static/generator/ckeditor/plugins/div/lang/en-gb.js": staticGeneratorCkeditorPluginsDivLangEnGbJs,
	"static/generator/ckeditor/plugins/div/lang/en.js": staticGeneratorCkeditorPluginsDivLangEnJs,
	"static/generator/ckeditor/plugins/div/lang/eo.js": staticGeneratorCkeditorPluginsDivLangEoJs,
	"static/generator/ckeditor/plugins/div/lang/es.js": staticGeneratorCkeditorPluginsDivLangEsJs,
	"static/generator/ckeditor/plugins/div/lang/et.js": staticGeneratorCkeditorPluginsDivLangEtJs,
	"static/generator/ckeditor/plugins/div/lang/eu.js": staticGeneratorCkeditorPluginsDivLangEuJs,
	"static/generator/ckeditor/plugins/div/lang/fa.js": staticGeneratorCkeditorPluginsDivLangFaJs,
	"static/generator/ckeditor/plugins/div/lang/fi.js": staticGeneratorCkeditorPluginsDivLangFiJs,
	"static/generator/ckeditor/plugins/div/lang/fo.js": staticGeneratorCkeditorPluginsDivLangFoJs,
	"static/generator/ckeditor/plugins/div/lang/fr-ca.js": staticGeneratorCkeditorPluginsDivLangFrCaJs,
	"static/generator/ckeditor/plugins/div/lang/fr.js": staticGeneratorCkeditorPluginsDivLangFrJs,
	"static/generator/ckeditor/plugins/div/lang/gl.js": staticGeneratorCkeditorPluginsDivLangGlJs,
	"static/generator/ckeditor/plugins/div/lang/gu.js": staticGeneratorCkeditorPluginsDivLangGuJs,
	"static/generator/ckeditor/plugins/div/lang/he.js": staticGeneratorCkeditorPluginsDivLangHeJs,
	"static/generator/ckeditor/plugins/div/lang/hi.js": staticGeneratorCkeditorPluginsDivLangHiJs,
	"static/generator/ckeditor/plugins/div/lang/hr.js": staticGeneratorCkeditorPluginsDivLangHrJs,
	"static/generator/ckeditor/plugins/div/lang/hu.js": staticGeneratorCkeditorPluginsDivLangHuJs,
	"static/generator/ckeditor/plugins/div/lang/id.js": staticGeneratorCkeditorPluginsDivLangIdJs,
	"static/generator/ckeditor/plugins/div/lang/is.js": staticGeneratorCkeditorPluginsDivLangIsJs,
	"static/generator/ckeditor/plugins/div/lang/it.js": staticGeneratorCkeditorPluginsDivLangItJs,
	"static/generator/ckeditor/plugins/div/lang/ja.js": staticGeneratorCkeditorPluginsDivLangJaJs,
	"static/generator/ckeditor/plugins/div/lang/ka.js": staticGeneratorCkeditorPluginsDivLangKaJs,
	"static/generator/ckeditor/plugins/div/lang/km.js": staticGeneratorCkeditorPluginsDivLangKmJs,
	"static/generator/ckeditor/plugins/div/lang/ko.js": staticGeneratorCkeditorPluginsDivLangKoJs,
	"static/generator/ckeditor/plugins/div/lang/ku.js": staticGeneratorCkeditorPluginsDivLangKuJs,
	"static/generator/ckeditor/plugins/div/lang/lt.js": staticGeneratorCkeditorPluginsDivLangLtJs,
	"static/generator/ckeditor/plugins/div/lang/lv.js": staticGeneratorCkeditorPluginsDivLangLvJs,
	"static/generator/ckeditor/plugins/div/lang/mk.js": staticGeneratorCkeditorPluginsDivLangMkJs,
	"static/generator/ckeditor/plugins/div/lang/mn.js": staticGeneratorCkeditorPluginsDivLangMnJs,
	"static/generator/ckeditor/plugins/div/lang/ms.js": staticGeneratorCkeditorPluginsDivLangMsJs,
	"static/generator/ckeditor/plugins/div/lang/nb.js": staticGeneratorCkeditorPluginsDivLangNbJs,
	"static/generator/ckeditor/plugins/div/lang/nl.js": staticGeneratorCkeditorPluginsDivLangNlJs,
	"static/generator/ckeditor/plugins/div/lang/no.js": staticGeneratorCkeditorPluginsDivLangNoJs,
	"static/generator/ckeditor/plugins/div/lang/oc.js": staticGeneratorCkeditorPluginsDivLangOcJs,
	"static/generator/ckeditor/plugins/div/lang/pl.js": staticGeneratorCkeditorPluginsDivLangPlJs,
	"static/generator/ckeditor/plugins/div/lang/pt-br.js": staticGeneratorCkeditorPluginsDivLangPtBrJs,
	"static/generator/ckeditor/plugins/div/lang/pt.js": staticGeneratorCkeditorPluginsDivLangPtJs,
	"static/generator/ckeditor/plugins/div/lang/ro.js": staticGeneratorCkeditorPluginsDivLangRoJs,
	"static/generator/ckeditor/plugins/div/lang/ru.js": staticGeneratorCkeditorPluginsDivLangRuJs,
	"static/generator/ckeditor/plugins/div/lang/si.js": staticGeneratorCkeditorPluginsDivLangSiJs,
	"static/generator/ckeditor/plugins/div/lang/sk.js": staticGeneratorCkeditorPluginsDivLangSkJs,
	"static/generator/ckeditor/plugins/div/lang/sl.js": staticGeneratorCkeditorPluginsDivLangSlJs,
	"static/generator/ckeditor/plugins/div/lang/sq.js": staticGeneratorCkeditorPluginsDivLangSqJs,
	"static/generator/ckeditor/plugins/div/lang/sr-latn.js": staticGeneratorCkeditorPluginsDivLangSrLatnJs,
	"static/generator/ckeditor/plugins/div/lang/sr.js": staticGeneratorCkeditorPluginsDivLangSrJs,
	"static/generator/ckeditor/plugins/div/lang/sv.js": staticGeneratorCkeditorPluginsDivLangSvJs,
	"static/generator/ckeditor/plugins/div/lang/th.js": staticGeneratorCkeditorPluginsDivLangThJs,
	"static/generator/ckeditor/plugins/div/lang/tr.js": staticGeneratorCkeditorPluginsDivLangTrJs,
	"static/generator/ckeditor/plugins/div/lang/tt.js": staticGeneratorCkeditorPluginsDivLangTtJs,
	"static/generator/ckeditor/plugins/div/lang/ug.js": staticGeneratorCkeditorPluginsDivLangUgJs,
	"static/generator/ckeditor/plugins/div/lang/uk.js": staticGeneratorCkeditorPluginsDivLangUkJs,
	"static/generator/ckeditor/plugins/div/lang/vi.js": staticGeneratorCkeditorPluginsDivLangViJs,
	"static/generator/ckeditor/plugins/div/lang/zh-cn.js": staticGeneratorCkeditorPluginsDivLangZhCnJs,
	"static/generator/ckeditor/plugins/div/lang/zh.js": staticGeneratorCkeditorPluginsDivLangZhJs,
	"static/generator/ckeditor/plugins/div/plugin.js": staticGeneratorCkeditorPluginsDivPluginJs,
	"static/generator/ckeditor/plugins/elementspath/lang/af.js": staticGeneratorCkeditorPluginsElementspathLangAfJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ar.js": staticGeneratorCkeditorPluginsElementspathLangArJs,
	"static/generator/ckeditor/plugins/elementspath/lang/az.js": staticGeneratorCkeditorPluginsElementspathLangAzJs,
	"static/generator/ckeditor/plugins/elementspath/lang/bg.js": staticGeneratorCkeditorPluginsElementspathLangBgJs,
	"static/generator/ckeditor/plugins/elementspath/lang/bn.js": staticGeneratorCkeditorPluginsElementspathLangBnJs,
	"static/generator/ckeditor/plugins/elementspath/lang/bs.js": staticGeneratorCkeditorPluginsElementspathLangBsJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ca.js": staticGeneratorCkeditorPluginsElementspathLangCaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/cs.js": staticGeneratorCkeditorPluginsElementspathLangCsJs,
	"static/generator/ckeditor/plugins/elementspath/lang/cy.js": staticGeneratorCkeditorPluginsElementspathLangCyJs,
	"static/generator/ckeditor/plugins/elementspath/lang/da.js": staticGeneratorCkeditorPluginsElementspathLangDaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/de-ch.js": staticGeneratorCkeditorPluginsElementspathLangDeChJs,
	"static/generator/ckeditor/plugins/elementspath/lang/de.js": staticGeneratorCkeditorPluginsElementspathLangDeJs,
	"static/generator/ckeditor/plugins/elementspath/lang/el.js": staticGeneratorCkeditorPluginsElementspathLangElJs,
	"static/generator/ckeditor/plugins/elementspath/lang/en-au.js": staticGeneratorCkeditorPluginsElementspathLangEnAuJs,
	"static/generator/ckeditor/plugins/elementspath/lang/en-ca.js": staticGeneratorCkeditorPluginsElementspathLangEnCaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/en-gb.js": staticGeneratorCkeditorPluginsElementspathLangEnGbJs,
	"static/generator/ckeditor/plugins/elementspath/lang/en.js": staticGeneratorCkeditorPluginsElementspathLangEnJs,
	"static/generator/ckeditor/plugins/elementspath/lang/eo.js": staticGeneratorCkeditorPluginsElementspathLangEoJs,
	"static/generator/ckeditor/plugins/elementspath/lang/es.js": staticGeneratorCkeditorPluginsElementspathLangEsJs,
	"static/generator/ckeditor/plugins/elementspath/lang/et.js": staticGeneratorCkeditorPluginsElementspathLangEtJs,
	"static/generator/ckeditor/plugins/elementspath/lang/eu.js": staticGeneratorCkeditorPluginsElementspathLangEuJs,
	"static/generator/ckeditor/plugins/elementspath/lang/fa.js": staticGeneratorCkeditorPluginsElementspathLangFaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/fi.js": staticGeneratorCkeditorPluginsElementspathLangFiJs,
	"static/generator/ckeditor/plugins/elementspath/lang/fo.js": staticGeneratorCkeditorPluginsElementspathLangFoJs,
	"static/generator/ckeditor/plugins/elementspath/lang/fr-ca.js": staticGeneratorCkeditorPluginsElementspathLangFrCaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/fr.js": staticGeneratorCkeditorPluginsElementspathLangFrJs,
	"static/generator/ckeditor/plugins/elementspath/lang/gl.js": staticGeneratorCkeditorPluginsElementspathLangGlJs,
	"static/generator/ckeditor/plugins/elementspath/lang/gu.js": staticGeneratorCkeditorPluginsElementspathLangGuJs,
	"static/generator/ckeditor/plugins/elementspath/lang/he.js": staticGeneratorCkeditorPluginsElementspathLangHeJs,
	"static/generator/ckeditor/plugins/elementspath/lang/hi.js": staticGeneratorCkeditorPluginsElementspathLangHiJs,
	"static/generator/ckeditor/plugins/elementspath/lang/hr.js": staticGeneratorCkeditorPluginsElementspathLangHrJs,
	"static/generator/ckeditor/plugins/elementspath/lang/hu.js": staticGeneratorCkeditorPluginsElementspathLangHuJs,
	"static/generator/ckeditor/plugins/elementspath/lang/is.js": staticGeneratorCkeditorPluginsElementspathLangIsJs,
	"static/generator/ckeditor/plugins/elementspath/lang/it.js": staticGeneratorCkeditorPluginsElementspathLangItJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ja.js": staticGeneratorCkeditorPluginsElementspathLangJaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ka.js": staticGeneratorCkeditorPluginsElementspathLangKaJs,
	"static/generator/ckeditor/plugins/elementspath/lang/km.js": staticGeneratorCkeditorPluginsElementspathLangKmJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ko.js": staticGeneratorCkeditorPluginsElementspathLangKoJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ku.js": staticGeneratorCkeditorPluginsElementspathLangKuJs,
	"static/generator/ckeditor/plugins/elementspath/lang/lt.js": staticGeneratorCkeditorPluginsElementspathLangLtJs,
	"static/generator/ckeditor/plugins/elementspath/lang/lv.js": staticGeneratorCkeditorPluginsElementspathLangLvJs,
	"static/generator/ckeditor/plugins/elementspath/lang/mk.js": staticGeneratorCkeditorPluginsElementspathLangMkJs,
	"static/generator/ckeditor/plugins/elementspath/lang/mn.js": staticGeneratorCkeditorPluginsElementspathLangMnJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ms.js": staticGeneratorCkeditorPluginsElementspathLangMsJs,
	"static/generator/ckeditor/plugins/elementspath/lang/nb.js": staticGeneratorCkeditorPluginsElementspathLangNbJs,
	"static/generator/ckeditor/plugins/elementspath/lang/nl.js": staticGeneratorCkeditorPluginsElementspathLangNlJs,
	"static/generator/ckeditor/plugins/elementspath/lang/no.js": staticGeneratorCkeditorPluginsElementspathLangNoJs,
	"static/generator/ckeditor/plugins/elementspath/lang/oc.js": staticGeneratorCkeditorPluginsElementspathLangOcJs,
	"static/generator/ckeditor/plugins/elementspath/lang/pl.js": staticGeneratorCkeditorPluginsElementspathLangPlJs,
	"static/generator/ckeditor/plugins/elementspath/lang/pt-br.js": staticGeneratorCkeditorPluginsElementspathLangPtBrJs,
	"static/generator/ckeditor/plugins/elementspath/lang/pt.js": staticGeneratorCkeditorPluginsElementspathLangPtJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ro.js": staticGeneratorCkeditorPluginsElementspathLangRoJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ru.js": staticGeneratorCkeditorPluginsElementspathLangRuJs,
	"static/generator/ckeditor/plugins/elementspath/lang/si.js": staticGeneratorCkeditorPluginsElementspathLangSiJs,
	"static/generator/ckeditor/plugins/elementspath/lang/sk.js": staticGeneratorCkeditorPluginsElementspathLangSkJs,
	"static/generator/ckeditor/plugins/elementspath/lang/sl.js": staticGeneratorCkeditorPluginsElementspathLangSlJs,
	"static/generator/ckeditor/plugins/elementspath/lang/sq.js": staticGeneratorCkeditorPluginsElementspathLangSqJs,
	"static/generator/ckeditor/plugins/elementspath/lang/sr-latn.js": staticGeneratorCkeditorPluginsElementspathLangSrLatnJs,
	"static/generator/ckeditor/plugins/elementspath/lang/sr.js": staticGeneratorCkeditorPluginsElementspathLangSrJs,
	"static/generator/ckeditor/plugins/elementspath/lang/sv.js": staticGeneratorCkeditorPluginsElementspathLangSvJs,
	"static/generator/ckeditor/plugins/elementspath/lang/th.js": staticGeneratorCkeditorPluginsElementspathLangThJs,
	"static/generator/ckeditor/plugins/elementspath/lang/tr.js": staticGeneratorCkeditorPluginsElementspathLangTrJs,
	"static/generator/ckeditor/plugins/elementspath/lang/tt.js": staticGeneratorCkeditorPluginsElementspathLangTtJs,
	"static/generator/ckeditor/plugins/elementspath/lang/ug.js": staticGeneratorCkeditorPluginsElementspathLangUgJs,
	"static/generator/ckeditor/plugins/elementspath/lang/uk.js": staticGeneratorCkeditorPluginsElementspathLangUkJs,
	"static/generator/ckeditor/plugins/elementspath/lang/vi.js": staticGeneratorCkeditorPluginsElementspathLangViJs,
	"static/generator/ckeditor/plugins/elementspath/lang/zh-cn.js": staticGeneratorCkeditorPluginsElementspathLangZhCnJs,
	"static/generator/ckeditor/plugins/elementspath/lang/zh.js": staticGeneratorCkeditorPluginsElementspathLangZhJs,
	"static/generator/ckeditor/plugins/elementspath/plugin.js": staticGeneratorCkeditorPluginsElementspathPluginJs,
	"static/generator/ckeditor/plugins/enterkey/plugin.js": staticGeneratorCkeditorPluginsEnterkeyPluginJs,
	"static/generator/ckeditor/plugins/enterkey/samples/enterkey.html": staticGeneratorCkeditorPluginsEnterkeySamplesEnterkeyHtml,
	"static/generator/ckeditor/plugins/entities/plugin.js": staticGeneratorCkeditorPluginsEntitiesPluginJs,
	"static/generator/ckeditor/plugins/fakeobjects/images/spacer.gif": staticGeneratorCkeditorPluginsFakeobjectsImagesSpacerGif,
	"static/generator/ckeditor/plugins/fakeobjects/lang/af.js": staticGeneratorCkeditorPluginsFakeobjectsLangAfJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ar.js": staticGeneratorCkeditorPluginsFakeobjectsLangArJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/az.js": staticGeneratorCkeditorPluginsFakeobjectsLangAzJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/bg.js": staticGeneratorCkeditorPluginsFakeobjectsLangBgJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/bn.js": staticGeneratorCkeditorPluginsFakeobjectsLangBnJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/bs.js": staticGeneratorCkeditorPluginsFakeobjectsLangBsJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ca.js": staticGeneratorCkeditorPluginsFakeobjectsLangCaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/cs.js": staticGeneratorCkeditorPluginsFakeobjectsLangCsJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/cy.js": staticGeneratorCkeditorPluginsFakeobjectsLangCyJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/da.js": staticGeneratorCkeditorPluginsFakeobjectsLangDaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/de-ch.js": staticGeneratorCkeditorPluginsFakeobjectsLangDeChJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/de.js": staticGeneratorCkeditorPluginsFakeobjectsLangDeJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/el.js": staticGeneratorCkeditorPluginsFakeobjectsLangElJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/en-au.js": staticGeneratorCkeditorPluginsFakeobjectsLangEnAuJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/en-ca.js": staticGeneratorCkeditorPluginsFakeobjectsLangEnCaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/en-gb.js": staticGeneratorCkeditorPluginsFakeobjectsLangEnGbJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/en.js": staticGeneratorCkeditorPluginsFakeobjectsLangEnJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/eo.js": staticGeneratorCkeditorPluginsFakeobjectsLangEoJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/es.js": staticGeneratorCkeditorPluginsFakeobjectsLangEsJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/et.js": staticGeneratorCkeditorPluginsFakeobjectsLangEtJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/eu.js": staticGeneratorCkeditorPluginsFakeobjectsLangEuJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/fa.js": staticGeneratorCkeditorPluginsFakeobjectsLangFaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/fi.js": staticGeneratorCkeditorPluginsFakeobjectsLangFiJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/fo.js": staticGeneratorCkeditorPluginsFakeobjectsLangFoJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/fr-ca.js": staticGeneratorCkeditorPluginsFakeobjectsLangFrCaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/fr.js": staticGeneratorCkeditorPluginsFakeobjectsLangFrJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/gl.js": staticGeneratorCkeditorPluginsFakeobjectsLangGlJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/gu.js": staticGeneratorCkeditorPluginsFakeobjectsLangGuJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/he.js": staticGeneratorCkeditorPluginsFakeobjectsLangHeJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/hi.js": staticGeneratorCkeditorPluginsFakeobjectsLangHiJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/hr.js": staticGeneratorCkeditorPluginsFakeobjectsLangHrJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/hu.js": staticGeneratorCkeditorPluginsFakeobjectsLangHuJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/id.js": staticGeneratorCkeditorPluginsFakeobjectsLangIdJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/is.js": staticGeneratorCkeditorPluginsFakeobjectsLangIsJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/it.js": staticGeneratorCkeditorPluginsFakeobjectsLangItJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ja.js": staticGeneratorCkeditorPluginsFakeobjectsLangJaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ka.js": staticGeneratorCkeditorPluginsFakeobjectsLangKaJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/km.js": staticGeneratorCkeditorPluginsFakeobjectsLangKmJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ko.js": staticGeneratorCkeditorPluginsFakeobjectsLangKoJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ku.js": staticGeneratorCkeditorPluginsFakeobjectsLangKuJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/lt.js": staticGeneratorCkeditorPluginsFakeobjectsLangLtJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/lv.js": staticGeneratorCkeditorPluginsFakeobjectsLangLvJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/mk.js": staticGeneratorCkeditorPluginsFakeobjectsLangMkJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/mn.js": staticGeneratorCkeditorPluginsFakeobjectsLangMnJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ms.js": staticGeneratorCkeditorPluginsFakeobjectsLangMsJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/nb.js": staticGeneratorCkeditorPluginsFakeobjectsLangNbJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/nl.js": staticGeneratorCkeditorPluginsFakeobjectsLangNlJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/no.js": staticGeneratorCkeditorPluginsFakeobjectsLangNoJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/oc.js": staticGeneratorCkeditorPluginsFakeobjectsLangOcJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/pl.js": staticGeneratorCkeditorPluginsFakeobjectsLangPlJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/pt-br.js": staticGeneratorCkeditorPluginsFakeobjectsLangPtBrJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/pt.js": staticGeneratorCkeditorPluginsFakeobjectsLangPtJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ro.js": staticGeneratorCkeditorPluginsFakeobjectsLangRoJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ru.js": staticGeneratorCkeditorPluginsFakeobjectsLangRuJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/si.js": staticGeneratorCkeditorPluginsFakeobjectsLangSiJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/sk.js": staticGeneratorCkeditorPluginsFakeobjectsLangSkJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/sl.js": staticGeneratorCkeditorPluginsFakeobjectsLangSlJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/sq.js": staticGeneratorCkeditorPluginsFakeobjectsLangSqJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/sr-latn.js": staticGeneratorCkeditorPluginsFakeobjectsLangSrLatnJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/sr.js": staticGeneratorCkeditorPluginsFakeobjectsLangSrJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/sv.js": staticGeneratorCkeditorPluginsFakeobjectsLangSvJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/th.js": staticGeneratorCkeditorPluginsFakeobjectsLangThJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/tr.js": staticGeneratorCkeditorPluginsFakeobjectsLangTrJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/tt.js": staticGeneratorCkeditorPluginsFakeobjectsLangTtJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/ug.js": staticGeneratorCkeditorPluginsFakeobjectsLangUgJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/uk.js": staticGeneratorCkeditorPluginsFakeobjectsLangUkJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/vi.js": staticGeneratorCkeditorPluginsFakeobjectsLangViJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/zh-cn.js": staticGeneratorCkeditorPluginsFakeobjectsLangZhCnJs,
	"static/generator/ckeditor/plugins/fakeobjects/lang/zh.js": staticGeneratorCkeditorPluginsFakeobjectsLangZhJs,
	"static/generator/ckeditor/plugins/fakeobjects/plugin.js": staticGeneratorCkeditorPluginsFakeobjectsPluginJs,
	"static/generator/ckeditor/plugins/filebrowser/plugin.js": staticGeneratorCkeditorPluginsFilebrowserPluginJs,
	"static/generator/ckeditor/plugins/find/dialogs/find.js": staticGeneratorCkeditorPluginsFindDialogsFindJs,
	"static/generator/ckeditor/plugins/find/icons/find-rtl.png": staticGeneratorCkeditorPluginsFindIconsFindRtlPng,
	"static/generator/ckeditor/plugins/find/icons/find.png": staticGeneratorCkeditorPluginsFindIconsFindPng,
	"static/generator/ckeditor/plugins/find/icons/hidpi/find-rtl.png": staticGeneratorCkeditorPluginsFindIconsHidpiFindRtlPng,
	"static/generator/ckeditor/plugins/find/icons/hidpi/find.png": staticGeneratorCkeditorPluginsFindIconsHidpiFindPng,
	"static/generator/ckeditor/plugins/find/icons/hidpi/replace.png": staticGeneratorCkeditorPluginsFindIconsHidpiReplacePng,
	"static/generator/ckeditor/plugins/find/icons/replace.png": staticGeneratorCkeditorPluginsFindIconsReplacePng,
	"static/generator/ckeditor/plugins/find/lang/af.js": staticGeneratorCkeditorPluginsFindLangAfJs,
	"static/generator/ckeditor/plugins/find/lang/ar.js": staticGeneratorCkeditorPluginsFindLangArJs,
	"static/generator/ckeditor/plugins/find/lang/az.js": staticGeneratorCkeditorPluginsFindLangAzJs,
	"static/generator/ckeditor/plugins/find/lang/bg.js": staticGeneratorCkeditorPluginsFindLangBgJs,
	"static/generator/ckeditor/plugins/find/lang/bn.js": staticGeneratorCkeditorPluginsFindLangBnJs,
	"static/generator/ckeditor/plugins/find/lang/bs.js": staticGeneratorCkeditorPluginsFindLangBsJs,
	"static/generator/ckeditor/plugins/find/lang/ca.js": staticGeneratorCkeditorPluginsFindLangCaJs,
	"static/generator/ckeditor/plugins/find/lang/cs.js": staticGeneratorCkeditorPluginsFindLangCsJs,
	"static/generator/ckeditor/plugins/find/lang/cy.js": staticGeneratorCkeditorPluginsFindLangCyJs,
	"static/generator/ckeditor/plugins/find/lang/da.js": staticGeneratorCkeditorPluginsFindLangDaJs,
	"static/generator/ckeditor/plugins/find/lang/de-ch.js": staticGeneratorCkeditorPluginsFindLangDeChJs,
	"static/generator/ckeditor/plugins/find/lang/de.js": staticGeneratorCkeditorPluginsFindLangDeJs,
	"static/generator/ckeditor/plugins/find/lang/el.js": staticGeneratorCkeditorPluginsFindLangElJs,
	"static/generator/ckeditor/plugins/find/lang/en-au.js": staticGeneratorCkeditorPluginsFindLangEnAuJs,
	"static/generator/ckeditor/plugins/find/lang/en-ca.js": staticGeneratorCkeditorPluginsFindLangEnCaJs,
	"static/generator/ckeditor/plugins/find/lang/en-gb.js": staticGeneratorCkeditorPluginsFindLangEnGbJs,
	"static/generator/ckeditor/plugins/find/lang/en.js": staticGeneratorCkeditorPluginsFindLangEnJs,
	"static/generator/ckeditor/plugins/find/lang/eo.js": staticGeneratorCkeditorPluginsFindLangEoJs,
	"static/generator/ckeditor/plugins/find/lang/es.js": staticGeneratorCkeditorPluginsFindLangEsJs,
	"static/generator/ckeditor/plugins/find/lang/et.js": staticGeneratorCkeditorPluginsFindLangEtJs,
	"static/generator/ckeditor/plugins/find/lang/eu.js": staticGeneratorCkeditorPluginsFindLangEuJs,
	"static/generator/ckeditor/plugins/find/lang/fa.js": staticGeneratorCkeditorPluginsFindLangFaJs,
	"static/generator/ckeditor/plugins/find/lang/fi.js": staticGeneratorCkeditorPluginsFindLangFiJs,
	"static/generator/ckeditor/plugins/find/lang/fo.js": staticGeneratorCkeditorPluginsFindLangFoJs,
	"static/generator/ckeditor/plugins/find/lang/fr-ca.js": staticGeneratorCkeditorPluginsFindLangFrCaJs,
	"static/generator/ckeditor/plugins/find/lang/fr.js": staticGeneratorCkeditorPluginsFindLangFrJs,
	"static/generator/ckeditor/plugins/find/lang/gl.js": staticGeneratorCkeditorPluginsFindLangGlJs,
	"static/generator/ckeditor/plugins/find/lang/gu.js": staticGeneratorCkeditorPluginsFindLangGuJs,
	"static/generator/ckeditor/plugins/find/lang/he.js": staticGeneratorCkeditorPluginsFindLangHeJs,
	"static/generator/ckeditor/plugins/find/lang/hi.js": staticGeneratorCkeditorPluginsFindLangHiJs,
	"static/generator/ckeditor/plugins/find/lang/hr.js": staticGeneratorCkeditorPluginsFindLangHrJs,
	"static/generator/ckeditor/plugins/find/lang/hu.js": staticGeneratorCkeditorPluginsFindLangHuJs,
	"static/generator/ckeditor/plugins/find/lang/id.js": staticGeneratorCkeditorPluginsFindLangIdJs,
	"static/generator/ckeditor/plugins/find/lang/is.js": staticGeneratorCkeditorPluginsFindLangIsJs,
	"static/generator/ckeditor/plugins/find/lang/it.js": staticGeneratorCkeditorPluginsFindLangItJs,
	"static/generator/ckeditor/plugins/find/lang/ja.js": staticGeneratorCkeditorPluginsFindLangJaJs,
	"static/generator/ckeditor/plugins/find/lang/ka.js": staticGeneratorCkeditorPluginsFindLangKaJs,
	"static/generator/ckeditor/plugins/find/lang/km.js": staticGeneratorCkeditorPluginsFindLangKmJs,
	"static/generator/ckeditor/plugins/find/lang/ko.js": staticGeneratorCkeditorPluginsFindLangKoJs,
	"static/generator/ckeditor/plugins/find/lang/ku.js": staticGeneratorCkeditorPluginsFindLangKuJs,
	"static/generator/ckeditor/plugins/find/lang/lt.js": staticGeneratorCkeditorPluginsFindLangLtJs,
	"static/generator/ckeditor/plugins/find/lang/lv.js": staticGeneratorCkeditorPluginsFindLangLvJs,
	"static/generator/ckeditor/plugins/find/lang/mk.js": staticGeneratorCkeditorPluginsFindLangMkJs,
	"static/generator/ckeditor/plugins/find/lang/mn.js": staticGeneratorCkeditorPluginsFindLangMnJs,
	"static/generator/ckeditor/plugins/find/lang/ms.js": staticGeneratorCkeditorPluginsFindLangMsJs,
	"static/generator/ckeditor/plugins/find/lang/nb.js": staticGeneratorCkeditorPluginsFindLangNbJs,
	"static/generator/ckeditor/plugins/find/lang/nl.js": staticGeneratorCkeditorPluginsFindLangNlJs,
	"static/generator/ckeditor/plugins/find/lang/no.js": staticGeneratorCkeditorPluginsFindLangNoJs,
	"static/generator/ckeditor/plugins/find/lang/oc.js": staticGeneratorCkeditorPluginsFindLangOcJs,
	"static/generator/ckeditor/plugins/find/lang/pl.js": staticGeneratorCkeditorPluginsFindLangPlJs,
	"static/generator/ckeditor/plugins/find/lang/pt-br.js": staticGeneratorCkeditorPluginsFindLangPtBrJs,
	"static/generator/ckeditor/plugins/find/lang/pt.js": staticGeneratorCkeditorPluginsFindLangPtJs,
	"static/generator/ckeditor/plugins/find/lang/ro.js": staticGeneratorCkeditorPluginsFindLangRoJs,
	"static/generator/ckeditor/plugins/find/lang/ru.js": staticGeneratorCkeditorPluginsFindLangRuJs,
	"static/generator/ckeditor/plugins/find/lang/si.js": staticGeneratorCkeditorPluginsFindLangSiJs,
	"static/generator/ckeditor/plugins/find/lang/sk.js": staticGeneratorCkeditorPluginsFindLangSkJs,
	"static/generator/ckeditor/plugins/find/lang/sl.js": staticGeneratorCkeditorPluginsFindLangSlJs,
	"static/generator/ckeditor/plugins/find/lang/sq.js": staticGeneratorCkeditorPluginsFindLangSqJs,
	"static/generator/ckeditor/plugins/find/lang/sr-latn.js": staticGeneratorCkeditorPluginsFindLangSrLatnJs,
	"static/generator/ckeditor/plugins/find/lang/sr.js": staticGeneratorCkeditorPluginsFindLangSrJs,
	"static/generator/ckeditor/plugins/find/lang/sv.js": staticGeneratorCkeditorPluginsFindLangSvJs,
	"static/generator/ckeditor/plugins/find/lang/th.js": staticGeneratorCkeditorPluginsFindLangThJs,
	"static/generator/ckeditor/plugins/find/lang/tr.js": staticGeneratorCkeditorPluginsFindLangTrJs,
	"static/generator/ckeditor/plugins/find/lang/tt.js": staticGeneratorCkeditorPluginsFindLangTtJs,
	"static/generator/ckeditor/plugins/find/lang/ug.js": staticGeneratorCkeditorPluginsFindLangUgJs,
	"static/generator/ckeditor/plugins/find/lang/uk.js": staticGeneratorCkeditorPluginsFindLangUkJs,
	"static/generator/ckeditor/plugins/find/lang/vi.js": staticGeneratorCkeditorPluginsFindLangViJs,
	"static/generator/ckeditor/plugins/find/lang/zh-cn.js": staticGeneratorCkeditorPluginsFindLangZhCnJs,
	"static/generator/ckeditor/plugins/find/lang/zh.js": staticGeneratorCkeditorPluginsFindLangZhJs,
	"static/generator/ckeditor/plugins/find/plugin.js": staticGeneratorCkeditorPluginsFindPluginJs,
	"static/generator/ckeditor/plugins/flash/dialogs/flash.js": staticGeneratorCkeditorPluginsFlashDialogsFlashJs,
	"static/generator/ckeditor/plugins/flash/icons/flash.png": staticGeneratorCkeditorPluginsFlashIconsFlashPng,
	"static/generator/ckeditor/plugins/flash/icons/hidpi/flash.png": staticGeneratorCkeditorPluginsFlashIconsHidpiFlashPng,
	"static/generator/ckeditor/plugins/flash/images/placeholder.png": staticGeneratorCkeditorPluginsFlashImagesPlaceholderPng,
	"static/generator/ckeditor/plugins/flash/lang/af.js": staticGeneratorCkeditorPluginsFlashLangAfJs,
	"static/generator/ckeditor/plugins/flash/lang/ar.js": staticGeneratorCkeditorPluginsFlashLangArJs,
	"static/generator/ckeditor/plugins/flash/lang/az.js": staticGeneratorCkeditorPluginsFlashLangAzJs,
	"static/generator/ckeditor/plugins/flash/lang/bg.js": staticGeneratorCkeditorPluginsFlashLangBgJs,
	"static/generator/ckeditor/plugins/flash/lang/bn.js": staticGeneratorCkeditorPluginsFlashLangBnJs,
	"static/generator/ckeditor/plugins/flash/lang/bs.js": staticGeneratorCkeditorPluginsFlashLangBsJs,
	"static/generator/ckeditor/plugins/flash/lang/ca.js": staticGeneratorCkeditorPluginsFlashLangCaJs,
	"static/generator/ckeditor/plugins/flash/lang/cs.js": staticGeneratorCkeditorPluginsFlashLangCsJs,
	"static/generator/ckeditor/plugins/flash/lang/cy.js": staticGeneratorCkeditorPluginsFlashLangCyJs,
	"static/generator/ckeditor/plugins/flash/lang/da.js": staticGeneratorCkeditorPluginsFlashLangDaJs,
	"static/generator/ckeditor/plugins/flash/lang/de-ch.js": staticGeneratorCkeditorPluginsFlashLangDeChJs,
	"static/generator/ckeditor/plugins/flash/lang/de.js": staticGeneratorCkeditorPluginsFlashLangDeJs,
	"static/generator/ckeditor/plugins/flash/lang/el.js": staticGeneratorCkeditorPluginsFlashLangElJs,
	"static/generator/ckeditor/plugins/flash/lang/en-au.js": staticGeneratorCkeditorPluginsFlashLangEnAuJs,
	"static/generator/ckeditor/plugins/flash/lang/en-ca.js": staticGeneratorCkeditorPluginsFlashLangEnCaJs,
	"static/generator/ckeditor/plugins/flash/lang/en-gb.js": staticGeneratorCkeditorPluginsFlashLangEnGbJs,
	"static/generator/ckeditor/plugins/flash/lang/en.js": staticGeneratorCkeditorPluginsFlashLangEnJs,
	"static/generator/ckeditor/plugins/flash/lang/eo.js": staticGeneratorCkeditorPluginsFlashLangEoJs,
	"static/generator/ckeditor/plugins/flash/lang/es.js": staticGeneratorCkeditorPluginsFlashLangEsJs,
	"static/generator/ckeditor/plugins/flash/lang/et.js": staticGeneratorCkeditorPluginsFlashLangEtJs,
	"static/generator/ckeditor/plugins/flash/lang/eu.js": staticGeneratorCkeditorPluginsFlashLangEuJs,
	"static/generator/ckeditor/plugins/flash/lang/fa.js": staticGeneratorCkeditorPluginsFlashLangFaJs,
	"static/generator/ckeditor/plugins/flash/lang/fi.js": staticGeneratorCkeditorPluginsFlashLangFiJs,
	"static/generator/ckeditor/plugins/flash/lang/fo.js": staticGeneratorCkeditorPluginsFlashLangFoJs,
	"static/generator/ckeditor/plugins/flash/lang/fr-ca.js": staticGeneratorCkeditorPluginsFlashLangFrCaJs,
	"static/generator/ckeditor/plugins/flash/lang/fr.js": staticGeneratorCkeditorPluginsFlashLangFrJs,
	"static/generator/ckeditor/plugins/flash/lang/gl.js": staticGeneratorCkeditorPluginsFlashLangGlJs,
	"static/generator/ckeditor/plugins/flash/lang/gu.js": staticGeneratorCkeditorPluginsFlashLangGuJs,
	"static/generator/ckeditor/plugins/flash/lang/he.js": staticGeneratorCkeditorPluginsFlashLangHeJs,
	"static/generator/ckeditor/plugins/flash/lang/hi.js": staticGeneratorCkeditorPluginsFlashLangHiJs,
	"static/generator/ckeditor/plugins/flash/lang/hr.js": staticGeneratorCkeditorPluginsFlashLangHrJs,
	"static/generator/ckeditor/plugins/flash/lang/hu.js": staticGeneratorCkeditorPluginsFlashLangHuJs,
	"static/generator/ckeditor/plugins/flash/lang/id.js": staticGeneratorCkeditorPluginsFlashLangIdJs,
	"static/generator/ckeditor/plugins/flash/lang/is.js": staticGeneratorCkeditorPluginsFlashLangIsJs,
	"static/generator/ckeditor/plugins/flash/lang/it.js": staticGeneratorCkeditorPluginsFlashLangItJs,
	"static/generator/ckeditor/plugins/flash/lang/ja.js": staticGeneratorCkeditorPluginsFlashLangJaJs,
	"static/generator/ckeditor/plugins/flash/lang/ka.js": staticGeneratorCkeditorPluginsFlashLangKaJs,
	"static/generator/ckeditor/plugins/flash/lang/km.js": staticGeneratorCkeditorPluginsFlashLangKmJs,
	"static/generator/ckeditor/plugins/flash/lang/ko.js": staticGeneratorCkeditorPluginsFlashLangKoJs,
	"static/generator/ckeditor/plugins/flash/lang/ku.js": staticGeneratorCkeditorPluginsFlashLangKuJs,
	"static/generator/ckeditor/plugins/flash/lang/lt.js": staticGeneratorCkeditorPluginsFlashLangLtJs,
	"static/generator/ckeditor/plugins/flash/lang/lv.js": staticGeneratorCkeditorPluginsFlashLangLvJs,
	"static/generator/ckeditor/plugins/flash/lang/mk.js": staticGeneratorCkeditorPluginsFlashLangMkJs,
	"static/generator/ckeditor/plugins/flash/lang/mn.js": staticGeneratorCkeditorPluginsFlashLangMnJs,
	"static/generator/ckeditor/plugins/flash/lang/ms.js": staticGeneratorCkeditorPluginsFlashLangMsJs,
	"static/generator/ckeditor/plugins/flash/lang/nb.js": staticGeneratorCkeditorPluginsFlashLangNbJs,
	"static/generator/ckeditor/plugins/flash/lang/nl.js": staticGeneratorCkeditorPluginsFlashLangNlJs,
	"static/generator/ckeditor/plugins/flash/lang/no.js": staticGeneratorCkeditorPluginsFlashLangNoJs,
	"static/generator/ckeditor/plugins/flash/lang/oc.js": staticGeneratorCkeditorPluginsFlashLangOcJs,
	"static/generator/ckeditor/plugins/flash/lang/pl.js": staticGeneratorCkeditorPluginsFlashLangPlJs,
	"static/generator/ckeditor/plugins/flash/lang/pt-br.js": staticGeneratorCkeditorPluginsFlashLangPtBrJs,
	"static/generator/ckeditor/plugins/flash/lang/pt.js": staticGeneratorCkeditorPluginsFlashLangPtJs,
	"static/generator/ckeditor/plugins/flash/lang/ro.js": staticGeneratorCkeditorPluginsFlashLangRoJs,
	"static/generator/ckeditor/plugins/flash/lang/ru.js": staticGeneratorCkeditorPluginsFlashLangRuJs,
	"static/generator/ckeditor/plugins/flash/lang/si.js": staticGeneratorCkeditorPluginsFlashLangSiJs,
	"static/generator/ckeditor/plugins/flash/lang/sk.js": staticGeneratorCkeditorPluginsFlashLangSkJs,
	"static/generator/ckeditor/plugins/flash/lang/sl.js": staticGeneratorCkeditorPluginsFlashLangSlJs,
	"static/generator/ckeditor/plugins/flash/lang/sq.js": staticGeneratorCkeditorPluginsFlashLangSqJs,
	"static/generator/ckeditor/plugins/flash/lang/sr-latn.js": staticGeneratorCkeditorPluginsFlashLangSrLatnJs,
	"static/generator/ckeditor/plugins/flash/lang/sr.js": staticGeneratorCkeditorPluginsFlashLangSrJs,
	"static/generator/ckeditor/plugins/flash/lang/sv.js": staticGeneratorCkeditorPluginsFlashLangSvJs,
	"static/generator/ckeditor/plugins/flash/lang/th.js": staticGeneratorCkeditorPluginsFlashLangThJs,
	"static/generator/ckeditor/plugins/flash/lang/tr.js": staticGeneratorCkeditorPluginsFlashLangTrJs,
	"static/generator/ckeditor/plugins/flash/lang/tt.js": staticGeneratorCkeditorPluginsFlashLangTtJs,
	"static/generator/ckeditor/plugins/flash/lang/ug.js": staticGeneratorCkeditorPluginsFlashLangUgJs,
	"static/generator/ckeditor/plugins/flash/lang/uk.js": staticGeneratorCkeditorPluginsFlashLangUkJs,
	"static/generator/ckeditor/plugins/flash/lang/vi.js": staticGeneratorCkeditorPluginsFlashLangViJs,
	"static/generator/ckeditor/plugins/flash/lang/zh-cn.js": staticGeneratorCkeditorPluginsFlashLangZhCnJs,
	"static/generator/ckeditor/plugins/flash/lang/zh.js": staticGeneratorCkeditorPluginsFlashLangZhJs,
	"static/generator/ckeditor/plugins/flash/plugin.js": staticGeneratorCkeditorPluginsFlashPluginJs,
	"static/generator/ckeditor/plugins/floatingspace/plugin.js": staticGeneratorCkeditorPluginsFloatingspacePluginJs,
	"static/generator/ckeditor/plugins/floatpanel/plugin.js": staticGeneratorCkeditorPluginsFloatpanelPluginJs,
	"static/generator/ckeditor/plugins/font/lang/af.js": staticGeneratorCkeditorPluginsFontLangAfJs,
	"static/generator/ckeditor/plugins/font/lang/ar.js": staticGeneratorCkeditorPluginsFontLangArJs,
	"static/generator/ckeditor/plugins/font/lang/az.js": staticGeneratorCkeditorPluginsFontLangAzJs,
	"static/generator/ckeditor/plugins/font/lang/bg.js": staticGeneratorCkeditorPluginsFontLangBgJs,
	"static/generator/ckeditor/plugins/font/lang/bn.js": staticGeneratorCkeditorPluginsFontLangBnJs,
	"static/generator/ckeditor/plugins/font/lang/bs.js": staticGeneratorCkeditorPluginsFontLangBsJs,
	"static/generator/ckeditor/plugins/font/lang/ca.js": staticGeneratorCkeditorPluginsFontLangCaJs,
	"static/generator/ckeditor/plugins/font/lang/cs.js": staticGeneratorCkeditorPluginsFontLangCsJs,
	"static/generator/ckeditor/plugins/font/lang/cy.js": staticGeneratorCkeditorPluginsFontLangCyJs,
	"static/generator/ckeditor/plugins/font/lang/da.js": staticGeneratorCkeditorPluginsFontLangDaJs,
	"static/generator/ckeditor/plugins/font/lang/de-ch.js": staticGeneratorCkeditorPluginsFontLangDeChJs,
	"static/generator/ckeditor/plugins/font/lang/de.js": staticGeneratorCkeditorPluginsFontLangDeJs,
	"static/generator/ckeditor/plugins/font/lang/el.js": staticGeneratorCkeditorPluginsFontLangElJs,
	"static/generator/ckeditor/plugins/font/lang/en-au.js": staticGeneratorCkeditorPluginsFontLangEnAuJs,
	"static/generator/ckeditor/plugins/font/lang/en-ca.js": staticGeneratorCkeditorPluginsFontLangEnCaJs,
	"static/generator/ckeditor/plugins/font/lang/en-gb.js": staticGeneratorCkeditorPluginsFontLangEnGbJs,
	"static/generator/ckeditor/plugins/font/lang/en.js": staticGeneratorCkeditorPluginsFontLangEnJs,
	"static/generator/ckeditor/plugins/font/lang/eo.js": staticGeneratorCkeditorPluginsFontLangEoJs,
	"static/generator/ckeditor/plugins/font/lang/es.js": staticGeneratorCkeditorPluginsFontLangEsJs,
	"static/generator/ckeditor/plugins/font/lang/et.js": staticGeneratorCkeditorPluginsFontLangEtJs,
	"static/generator/ckeditor/plugins/font/lang/eu.js": staticGeneratorCkeditorPluginsFontLangEuJs,
	"static/generator/ckeditor/plugins/font/lang/fa.js": staticGeneratorCkeditorPluginsFontLangFaJs,
	"static/generator/ckeditor/plugins/font/lang/fi.js": staticGeneratorCkeditorPluginsFontLangFiJs,
	"static/generator/ckeditor/plugins/font/lang/fo.js": staticGeneratorCkeditorPluginsFontLangFoJs,
	"static/generator/ckeditor/plugins/font/lang/fr-ca.js": staticGeneratorCkeditorPluginsFontLangFrCaJs,
	"static/generator/ckeditor/plugins/font/lang/fr.js": staticGeneratorCkeditorPluginsFontLangFrJs,
	"static/generator/ckeditor/plugins/font/lang/gl.js": staticGeneratorCkeditorPluginsFontLangGlJs,
	"static/generator/ckeditor/plugins/font/lang/gu.js": staticGeneratorCkeditorPluginsFontLangGuJs,
	"static/generator/ckeditor/plugins/font/lang/he.js": staticGeneratorCkeditorPluginsFontLangHeJs,
	"static/generator/ckeditor/plugins/font/lang/hi.js": staticGeneratorCkeditorPluginsFontLangHiJs,
	"static/generator/ckeditor/plugins/font/lang/hr.js": staticGeneratorCkeditorPluginsFontLangHrJs,
	"static/generator/ckeditor/plugins/font/lang/hu.js": staticGeneratorCkeditorPluginsFontLangHuJs,
	"static/generator/ckeditor/plugins/font/lang/id.js": staticGeneratorCkeditorPluginsFontLangIdJs,
	"static/generator/ckeditor/plugins/font/lang/is.js": staticGeneratorCkeditorPluginsFontLangIsJs,
	"static/generator/ckeditor/plugins/font/lang/it.js": staticGeneratorCkeditorPluginsFontLangItJs,
	"static/generator/ckeditor/plugins/font/lang/ja.js": staticGeneratorCkeditorPluginsFontLangJaJs,
	"static/generator/ckeditor/plugins/font/lang/ka.js": staticGeneratorCkeditorPluginsFontLangKaJs,
	"static/generator/ckeditor/plugins/font/lang/km.js": staticGeneratorCkeditorPluginsFontLangKmJs,
	"static/generator/ckeditor/plugins/font/lang/ko.js": staticGeneratorCkeditorPluginsFontLangKoJs,
	"static/generator/ckeditor/plugins/font/lang/ku.js": staticGeneratorCkeditorPluginsFontLangKuJs,
	"static/generator/ckeditor/plugins/font/lang/lt.js": staticGeneratorCkeditorPluginsFontLangLtJs,
	"static/generator/ckeditor/plugins/font/lang/lv.js": staticGeneratorCkeditorPluginsFontLangLvJs,
	"static/generator/ckeditor/plugins/font/lang/mk.js": staticGeneratorCkeditorPluginsFontLangMkJs,
	"static/generator/ckeditor/plugins/font/lang/mn.js": staticGeneratorCkeditorPluginsFontLangMnJs,
	"static/generator/ckeditor/plugins/font/lang/ms.js": staticGeneratorCkeditorPluginsFontLangMsJs,
	"static/generator/ckeditor/plugins/font/lang/nb.js": staticGeneratorCkeditorPluginsFontLangNbJs,
	"static/generator/ckeditor/plugins/font/lang/nl.js": staticGeneratorCkeditorPluginsFontLangNlJs,
	"static/generator/ckeditor/plugins/font/lang/no.js": staticGeneratorCkeditorPluginsFontLangNoJs,
	"static/generator/ckeditor/plugins/font/lang/oc.js": staticGeneratorCkeditorPluginsFontLangOcJs,
	"static/generator/ckeditor/plugins/font/lang/pl.js": staticGeneratorCkeditorPluginsFontLangPlJs,
	"static/generator/ckeditor/plugins/font/lang/pt-br.js": staticGeneratorCkeditorPluginsFontLangPtBrJs,
	"static/generator/ckeditor/plugins/font/lang/pt.js": staticGeneratorCkeditorPluginsFontLangPtJs,
	"static/generator/ckeditor/plugins/font/lang/ro.js": staticGeneratorCkeditorPluginsFontLangRoJs,
	"static/generator/ckeditor/plugins/font/lang/ru.js": staticGeneratorCkeditorPluginsFontLangRuJs,
	"static/generator/ckeditor/plugins/font/lang/si.js": staticGeneratorCkeditorPluginsFontLangSiJs,
	"static/generator/ckeditor/plugins/font/lang/sk.js": staticGeneratorCkeditorPluginsFontLangSkJs,
	"static/generator/ckeditor/plugins/font/lang/sl.js": staticGeneratorCkeditorPluginsFontLangSlJs,
	"static/generator/ckeditor/plugins/font/lang/sq.js": staticGeneratorCkeditorPluginsFontLangSqJs,
	"static/generator/ckeditor/plugins/font/lang/sr-latn.js": staticGeneratorCkeditorPluginsFontLangSrLatnJs,
	"static/generator/ckeditor/plugins/font/lang/sr.js": staticGeneratorCkeditorPluginsFontLangSrJs,
	"static/generator/ckeditor/plugins/font/lang/sv.js": staticGeneratorCkeditorPluginsFontLangSvJs,
	"static/generator/ckeditor/plugins/font/lang/th.js": staticGeneratorCkeditorPluginsFontLangThJs,
	"static/generator/ckeditor/plugins/font/lang/tr.js": staticGeneratorCkeditorPluginsFontLangTrJs,
	"static/generator/ckeditor/plugins/font/lang/tt.js": staticGeneratorCkeditorPluginsFontLangTtJs,
	"static/generator/ckeditor/plugins/font/lang/ug.js": staticGeneratorCkeditorPluginsFontLangUgJs,
	"static/generator/ckeditor/plugins/font/lang/uk.js": staticGeneratorCkeditorPluginsFontLangUkJs,
	"static/generator/ckeditor/plugins/font/lang/vi.js": staticGeneratorCkeditorPluginsFontLangViJs,
	"static/generator/ckeditor/plugins/font/lang/zh-cn.js": staticGeneratorCkeditorPluginsFontLangZhCnJs,
	"static/generator/ckeditor/plugins/font/lang/zh.js": staticGeneratorCkeditorPluginsFontLangZhJs,
	"static/generator/ckeditor/plugins/font/plugin.js": staticGeneratorCkeditorPluginsFontPluginJs,
	"static/generator/ckeditor/plugins/fontawesome/dialogs/fontawesome.js": staticGeneratorCkeditorPluginsFontawesomeDialogsFontawesomeJs,
	"static/generator/ckeditor/plugins/fontawesome/dialogs/index.html": staticGeneratorCkeditorPluginsFontawesomeDialogsIndexHtml,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/css/font-awesome.min.css": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssFontAwesomeMinCss,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/css/index.html": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssIndexHtml,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/FontAwesome.otf": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeOtf,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.eot": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontEot,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.svg": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontSvg,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.ttf": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontTtf,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.woff": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/fontawesome-webfont.woff2": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff2,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/fonts/index.html": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsIndexHtml,
	"static/generator/ckeditor/plugins/fontawesome/font-awesome/index.html": staticGeneratorCkeditorPluginsFontawesomeFontAwesomeIndexHtml,
	"static/generator/ckeditor/plugins/fontawesome/icons/fontawesome.png": staticGeneratorCkeditorPluginsFontawesomeIconsFontawesomePng,
	"static/generator/ckeditor/plugins/fontawesome/icons/index.html": staticGeneratorCkeditorPluginsFontawesomeIconsIndexHtml,
	"static/generator/ckeditor/plugins/fontawesome/index.html": staticGeneratorCkeditorPluginsFontawesomeIndexHtml,
	"static/generator/ckeditor/plugins/fontawesome/plugin.js": staticGeneratorCkeditorPluginsFontawesomePluginJs,
	"static/generator/ckeditor/plugins/format/lang/af.js": staticGeneratorCkeditorPluginsFormatLangAfJs,
	"static/generator/ckeditor/plugins/format/lang/ar.js": staticGeneratorCkeditorPluginsFormatLangArJs,
	"static/generator/ckeditor/plugins/format/lang/az.js": staticGeneratorCkeditorPluginsFormatLangAzJs,
	"static/generator/ckeditor/plugins/format/lang/bg.js": staticGeneratorCkeditorPluginsFormatLangBgJs,
	"static/generator/ckeditor/plugins/format/lang/bn.js": staticGeneratorCkeditorPluginsFormatLangBnJs,
	"static/generator/ckeditor/plugins/format/lang/bs.js": staticGeneratorCkeditorPluginsFormatLangBsJs,
	"static/generator/ckeditor/plugins/format/lang/ca.js": staticGeneratorCkeditorPluginsFormatLangCaJs,
	"static/generator/ckeditor/plugins/format/lang/cs.js": staticGeneratorCkeditorPluginsFormatLangCsJs,
	"static/generator/ckeditor/plugins/format/lang/cy.js": staticGeneratorCkeditorPluginsFormatLangCyJs,
	"static/generator/ckeditor/plugins/format/lang/da.js": staticGeneratorCkeditorPluginsFormatLangDaJs,
	"static/generator/ckeditor/plugins/format/lang/de-ch.js": staticGeneratorCkeditorPluginsFormatLangDeChJs,
	"static/generator/ckeditor/plugins/format/lang/de.js": staticGeneratorCkeditorPluginsFormatLangDeJs,
	"static/generator/ckeditor/plugins/format/lang/el.js": staticGeneratorCkeditorPluginsFormatLangElJs,
	"static/generator/ckeditor/plugins/format/lang/en-au.js": staticGeneratorCkeditorPluginsFormatLangEnAuJs,
	"static/generator/ckeditor/plugins/format/lang/en-ca.js": staticGeneratorCkeditorPluginsFormatLangEnCaJs,
	"static/generator/ckeditor/plugins/format/lang/en-gb.js": staticGeneratorCkeditorPluginsFormatLangEnGbJs,
	"static/generator/ckeditor/plugins/format/lang/en.js": staticGeneratorCkeditorPluginsFormatLangEnJs,
	"static/generator/ckeditor/plugins/format/lang/eo.js": staticGeneratorCkeditorPluginsFormatLangEoJs,
	"static/generator/ckeditor/plugins/format/lang/es.js": staticGeneratorCkeditorPluginsFormatLangEsJs,
	"static/generator/ckeditor/plugins/format/lang/et.js": staticGeneratorCkeditorPluginsFormatLangEtJs,
	"static/generator/ckeditor/plugins/format/lang/eu.js": staticGeneratorCkeditorPluginsFormatLangEuJs,
	"static/generator/ckeditor/plugins/format/lang/fa.js": staticGeneratorCkeditorPluginsFormatLangFaJs,
	"static/generator/ckeditor/plugins/format/lang/fi.js": staticGeneratorCkeditorPluginsFormatLangFiJs,
	"static/generator/ckeditor/plugins/format/lang/fo.js": staticGeneratorCkeditorPluginsFormatLangFoJs,
	"static/generator/ckeditor/plugins/format/lang/fr-ca.js": staticGeneratorCkeditorPluginsFormatLangFrCaJs,
	"static/generator/ckeditor/plugins/format/lang/fr.js": staticGeneratorCkeditorPluginsFormatLangFrJs,
	"static/generator/ckeditor/plugins/format/lang/gl.js": staticGeneratorCkeditorPluginsFormatLangGlJs,
	"static/generator/ckeditor/plugins/format/lang/gu.js": staticGeneratorCkeditorPluginsFormatLangGuJs,
	"static/generator/ckeditor/plugins/format/lang/he.js": staticGeneratorCkeditorPluginsFormatLangHeJs,
	"static/generator/ckeditor/plugins/format/lang/hi.js": staticGeneratorCkeditorPluginsFormatLangHiJs,
	"static/generator/ckeditor/plugins/format/lang/hr.js": staticGeneratorCkeditorPluginsFormatLangHrJs,
	"static/generator/ckeditor/plugins/format/lang/hu.js": staticGeneratorCkeditorPluginsFormatLangHuJs,
	"static/generator/ckeditor/plugins/format/lang/id.js": staticGeneratorCkeditorPluginsFormatLangIdJs,
	"static/generator/ckeditor/plugins/format/lang/is.js": staticGeneratorCkeditorPluginsFormatLangIsJs,
	"static/generator/ckeditor/plugins/format/lang/it.js": staticGeneratorCkeditorPluginsFormatLangItJs,
	"static/generator/ckeditor/plugins/format/lang/ja.js": staticGeneratorCkeditorPluginsFormatLangJaJs,
	"static/generator/ckeditor/plugins/format/lang/ka.js": staticGeneratorCkeditorPluginsFormatLangKaJs,
	"static/generator/ckeditor/plugins/format/lang/km.js": staticGeneratorCkeditorPluginsFormatLangKmJs,
	"static/generator/ckeditor/plugins/format/lang/ko.js": staticGeneratorCkeditorPluginsFormatLangKoJs,
	"static/generator/ckeditor/plugins/format/lang/ku.js": staticGeneratorCkeditorPluginsFormatLangKuJs,
	"static/generator/ckeditor/plugins/format/lang/lt.js": staticGeneratorCkeditorPluginsFormatLangLtJs,
	"static/generator/ckeditor/plugins/format/lang/lv.js": staticGeneratorCkeditorPluginsFormatLangLvJs,
	"static/generator/ckeditor/plugins/format/lang/mk.js": staticGeneratorCkeditorPluginsFormatLangMkJs,
	"static/generator/ckeditor/plugins/format/lang/mn.js": staticGeneratorCkeditorPluginsFormatLangMnJs,
	"static/generator/ckeditor/plugins/format/lang/ms.js": staticGeneratorCkeditorPluginsFormatLangMsJs,
	"static/generator/ckeditor/plugins/format/lang/nb.js": staticGeneratorCkeditorPluginsFormatLangNbJs,
	"static/generator/ckeditor/plugins/format/lang/nl.js": staticGeneratorCkeditorPluginsFormatLangNlJs,
	"static/generator/ckeditor/plugins/format/lang/no.js": staticGeneratorCkeditorPluginsFormatLangNoJs,
	"static/generator/ckeditor/plugins/format/lang/oc.js": staticGeneratorCkeditorPluginsFormatLangOcJs,
	"static/generator/ckeditor/plugins/format/lang/pl.js": staticGeneratorCkeditorPluginsFormatLangPlJs,
	"static/generator/ckeditor/plugins/format/lang/pt-br.js": staticGeneratorCkeditorPluginsFormatLangPtBrJs,
	"static/generator/ckeditor/plugins/format/lang/pt.js": staticGeneratorCkeditorPluginsFormatLangPtJs,
	"static/generator/ckeditor/plugins/format/lang/ro.js": staticGeneratorCkeditorPluginsFormatLangRoJs,
	"static/generator/ckeditor/plugins/format/lang/ru.js": staticGeneratorCkeditorPluginsFormatLangRuJs,
	"static/generator/ckeditor/plugins/format/lang/si.js": staticGeneratorCkeditorPluginsFormatLangSiJs,
	"static/generator/ckeditor/plugins/format/lang/sk.js": staticGeneratorCkeditorPluginsFormatLangSkJs,
	"static/generator/ckeditor/plugins/format/lang/sl.js": staticGeneratorCkeditorPluginsFormatLangSlJs,
	"static/generator/ckeditor/plugins/format/lang/sq.js": staticGeneratorCkeditorPluginsFormatLangSqJs,
	"static/generator/ckeditor/plugins/format/lang/sr-latn.js": staticGeneratorCkeditorPluginsFormatLangSrLatnJs,
	"static/generator/ckeditor/plugins/format/lang/sr.js": staticGeneratorCkeditorPluginsFormatLangSrJs,
	"static/generator/ckeditor/plugins/format/lang/sv.js": staticGeneratorCkeditorPluginsFormatLangSvJs,
	"static/generator/ckeditor/plugins/format/lang/th.js": staticGeneratorCkeditorPluginsFormatLangThJs,
	"static/generator/ckeditor/plugins/format/lang/tr.js": staticGeneratorCkeditorPluginsFormatLangTrJs,
	"static/generator/ckeditor/plugins/format/lang/tt.js": staticGeneratorCkeditorPluginsFormatLangTtJs,
	"static/generator/ckeditor/plugins/format/lang/ug.js": staticGeneratorCkeditorPluginsFormatLangUgJs,
	"static/generator/ckeditor/plugins/format/lang/uk.js": staticGeneratorCkeditorPluginsFormatLangUkJs,
	"static/generator/ckeditor/plugins/format/lang/vi.js": staticGeneratorCkeditorPluginsFormatLangViJs,
	"static/generator/ckeditor/plugins/format/lang/zh-cn.js": staticGeneratorCkeditorPluginsFormatLangZhCnJs,
	"static/generator/ckeditor/plugins/format/lang/zh.js": staticGeneratorCkeditorPluginsFormatLangZhJs,
	"static/generator/ckeditor/plugins/format/plugin.js": staticGeneratorCkeditorPluginsFormatPluginJs,
	"static/generator/ckeditor/plugins/forms/dialogs/button.js": staticGeneratorCkeditorPluginsFormsDialogsButtonJs,
	"static/generator/ckeditor/plugins/forms/dialogs/checkbox.js": staticGeneratorCkeditorPluginsFormsDialogsCheckboxJs,
	"static/generator/ckeditor/plugins/forms/dialogs/form.js": staticGeneratorCkeditorPluginsFormsDialogsFormJs,
	"static/generator/ckeditor/plugins/forms/dialogs/hiddenfield.js": staticGeneratorCkeditorPluginsFormsDialogsHiddenfieldJs,
	"static/generator/ckeditor/plugins/forms/dialogs/radio.js": staticGeneratorCkeditorPluginsFormsDialogsRadioJs,
	"static/generator/ckeditor/plugins/forms/dialogs/select.js": staticGeneratorCkeditorPluginsFormsDialogsSelectJs,
	"static/generator/ckeditor/plugins/forms/dialogs/textarea.js": staticGeneratorCkeditorPluginsFormsDialogsTextareaJs,
	"static/generator/ckeditor/plugins/forms/dialogs/textfield.js": staticGeneratorCkeditorPluginsFormsDialogsTextfieldJs,
	"static/generator/ckeditor/plugins/forms/icons/button.png": staticGeneratorCkeditorPluginsFormsIconsButtonPng,
	"static/generator/ckeditor/plugins/forms/icons/checkbox.png": staticGeneratorCkeditorPluginsFormsIconsCheckboxPng,
	"static/generator/ckeditor/plugins/forms/icons/form.png": staticGeneratorCkeditorPluginsFormsIconsFormPng,
	"static/generator/ckeditor/plugins/forms/icons/hiddenfield.png": staticGeneratorCkeditorPluginsFormsIconsHiddenfieldPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/button.png": staticGeneratorCkeditorPluginsFormsIconsHidpiButtonPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/checkbox.png": staticGeneratorCkeditorPluginsFormsIconsHidpiCheckboxPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/form.png": staticGeneratorCkeditorPluginsFormsIconsHidpiFormPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/hiddenfield.png": staticGeneratorCkeditorPluginsFormsIconsHidpiHiddenfieldPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/imagebutton.png": staticGeneratorCkeditorPluginsFormsIconsHidpiImagebuttonPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/radio.png": staticGeneratorCkeditorPluginsFormsIconsHidpiRadioPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/select-rtl.png": staticGeneratorCkeditorPluginsFormsIconsHidpiSelectRtlPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/select.png": staticGeneratorCkeditorPluginsFormsIconsHidpiSelectPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/textarea-rtl.png": staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaRtlPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/textarea.png": staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/textfield-rtl.png": staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldRtlPng,
	"static/generator/ckeditor/plugins/forms/icons/hidpi/textfield.png": staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldPng,
	"static/generator/ckeditor/plugins/forms/icons/imagebutton.png": staticGeneratorCkeditorPluginsFormsIconsImagebuttonPng,
	"static/generator/ckeditor/plugins/forms/icons/radio.png": staticGeneratorCkeditorPluginsFormsIconsRadioPng,
	"static/generator/ckeditor/plugins/forms/icons/select-rtl.png": staticGeneratorCkeditorPluginsFormsIconsSelectRtlPng,
	"static/generator/ckeditor/plugins/forms/icons/select.png": staticGeneratorCkeditorPluginsFormsIconsSelectPng,
	"static/generator/ckeditor/plugins/forms/icons/textarea-rtl.png": staticGeneratorCkeditorPluginsFormsIconsTextareaRtlPng,
	"static/generator/ckeditor/plugins/forms/icons/textarea.png": staticGeneratorCkeditorPluginsFormsIconsTextareaPng,
	"static/generator/ckeditor/plugins/forms/icons/textfield-rtl.png": staticGeneratorCkeditorPluginsFormsIconsTextfieldRtlPng,
	"static/generator/ckeditor/plugins/forms/icons/textfield.png": staticGeneratorCkeditorPluginsFormsIconsTextfieldPng,
	"static/generator/ckeditor/plugins/forms/images/hiddenfield.gif": staticGeneratorCkeditorPluginsFormsImagesHiddenfieldGif,
	"static/generator/ckeditor/plugins/forms/lang/af.js": staticGeneratorCkeditorPluginsFormsLangAfJs,
	"static/generator/ckeditor/plugins/forms/lang/ar.js": staticGeneratorCkeditorPluginsFormsLangArJs,
	"static/generator/ckeditor/plugins/forms/lang/az.js": staticGeneratorCkeditorPluginsFormsLangAzJs,
	"static/generator/ckeditor/plugins/forms/lang/bg.js": staticGeneratorCkeditorPluginsFormsLangBgJs,
	"static/generator/ckeditor/plugins/forms/lang/bn.js": staticGeneratorCkeditorPluginsFormsLangBnJs,
	"static/generator/ckeditor/plugins/forms/lang/bs.js": staticGeneratorCkeditorPluginsFormsLangBsJs,
	"static/generator/ckeditor/plugins/forms/lang/ca.js": staticGeneratorCkeditorPluginsFormsLangCaJs,
	"static/generator/ckeditor/plugins/forms/lang/cs.js": staticGeneratorCkeditorPluginsFormsLangCsJs,
	"static/generator/ckeditor/plugins/forms/lang/cy.js": staticGeneratorCkeditorPluginsFormsLangCyJs,
	"static/generator/ckeditor/plugins/forms/lang/da.js": staticGeneratorCkeditorPluginsFormsLangDaJs,
	"static/generator/ckeditor/plugins/forms/lang/de-ch.js": staticGeneratorCkeditorPluginsFormsLangDeChJs,
	"static/generator/ckeditor/plugins/forms/lang/de.js": staticGeneratorCkeditorPluginsFormsLangDeJs,
	"static/generator/ckeditor/plugins/forms/lang/el.js": staticGeneratorCkeditorPluginsFormsLangElJs,
	"static/generator/ckeditor/plugins/forms/lang/en-au.js": staticGeneratorCkeditorPluginsFormsLangEnAuJs,
	"static/generator/ckeditor/plugins/forms/lang/en-ca.js": staticGeneratorCkeditorPluginsFormsLangEnCaJs,
	"static/generator/ckeditor/plugins/forms/lang/en-gb.js": staticGeneratorCkeditorPluginsFormsLangEnGbJs,
	"static/generator/ckeditor/plugins/forms/lang/en.js": staticGeneratorCkeditorPluginsFormsLangEnJs,
	"static/generator/ckeditor/plugins/forms/lang/eo.js": staticGeneratorCkeditorPluginsFormsLangEoJs,
	"static/generator/ckeditor/plugins/forms/lang/es.js": staticGeneratorCkeditorPluginsFormsLangEsJs,
	"static/generator/ckeditor/plugins/forms/lang/et.js": staticGeneratorCkeditorPluginsFormsLangEtJs,
	"static/generator/ckeditor/plugins/forms/lang/eu.js": staticGeneratorCkeditorPluginsFormsLangEuJs,
	"static/generator/ckeditor/plugins/forms/lang/fa.js": staticGeneratorCkeditorPluginsFormsLangFaJs,
	"static/generator/ckeditor/plugins/forms/lang/fi.js": staticGeneratorCkeditorPluginsFormsLangFiJs,
	"static/generator/ckeditor/plugins/forms/lang/fo.js": staticGeneratorCkeditorPluginsFormsLangFoJs,
	"static/generator/ckeditor/plugins/forms/lang/fr-ca.js": staticGeneratorCkeditorPluginsFormsLangFrCaJs,
	"static/generator/ckeditor/plugins/forms/lang/fr.js": staticGeneratorCkeditorPluginsFormsLangFrJs,
	"static/generator/ckeditor/plugins/forms/lang/gl.js": staticGeneratorCkeditorPluginsFormsLangGlJs,
	"static/generator/ckeditor/plugins/forms/lang/gu.js": staticGeneratorCkeditorPluginsFormsLangGuJs,
	"static/generator/ckeditor/plugins/forms/lang/he.js": staticGeneratorCkeditorPluginsFormsLangHeJs,
	"static/generator/ckeditor/plugins/forms/lang/hi.js": staticGeneratorCkeditorPluginsFormsLangHiJs,
	"static/generator/ckeditor/plugins/forms/lang/hr.js": staticGeneratorCkeditorPluginsFormsLangHrJs,
	"static/generator/ckeditor/plugins/forms/lang/hu.js": staticGeneratorCkeditorPluginsFormsLangHuJs,
	"static/generator/ckeditor/plugins/forms/lang/id.js": staticGeneratorCkeditorPluginsFormsLangIdJs,
	"static/generator/ckeditor/plugins/forms/lang/is.js": staticGeneratorCkeditorPluginsFormsLangIsJs,
	"static/generator/ckeditor/plugins/forms/lang/it.js": staticGeneratorCkeditorPluginsFormsLangItJs,
	"static/generator/ckeditor/plugins/forms/lang/ja.js": staticGeneratorCkeditorPluginsFormsLangJaJs,
	"static/generator/ckeditor/plugins/forms/lang/ka.js": staticGeneratorCkeditorPluginsFormsLangKaJs,
	"static/generator/ckeditor/plugins/forms/lang/km.js": staticGeneratorCkeditorPluginsFormsLangKmJs,
	"static/generator/ckeditor/plugins/forms/lang/ko.js": staticGeneratorCkeditorPluginsFormsLangKoJs,
	"static/generator/ckeditor/plugins/forms/lang/ku.js": staticGeneratorCkeditorPluginsFormsLangKuJs,
	"static/generator/ckeditor/plugins/forms/lang/lt.js": staticGeneratorCkeditorPluginsFormsLangLtJs,
	"static/generator/ckeditor/plugins/forms/lang/lv.js": staticGeneratorCkeditorPluginsFormsLangLvJs,
	"static/generator/ckeditor/plugins/forms/lang/mk.js": staticGeneratorCkeditorPluginsFormsLangMkJs,
	"static/generator/ckeditor/plugins/forms/lang/mn.js": staticGeneratorCkeditorPluginsFormsLangMnJs,
	"static/generator/ckeditor/plugins/forms/lang/ms.js": staticGeneratorCkeditorPluginsFormsLangMsJs,
	"static/generator/ckeditor/plugins/forms/lang/nb.js": staticGeneratorCkeditorPluginsFormsLangNbJs,
	"static/generator/ckeditor/plugins/forms/lang/nl.js": staticGeneratorCkeditorPluginsFormsLangNlJs,
	"static/generator/ckeditor/plugins/forms/lang/no.js": staticGeneratorCkeditorPluginsFormsLangNoJs,
	"static/generator/ckeditor/plugins/forms/lang/oc.js": staticGeneratorCkeditorPluginsFormsLangOcJs,
	"static/generator/ckeditor/plugins/forms/lang/pl.js": staticGeneratorCkeditorPluginsFormsLangPlJs,
	"static/generator/ckeditor/plugins/forms/lang/pt-br.js": staticGeneratorCkeditorPluginsFormsLangPtBrJs,
	"static/generator/ckeditor/plugins/forms/lang/pt.js": staticGeneratorCkeditorPluginsFormsLangPtJs,
	"static/generator/ckeditor/plugins/forms/lang/ro.js": staticGeneratorCkeditorPluginsFormsLangRoJs,
	"static/generator/ckeditor/plugins/forms/lang/ru.js": staticGeneratorCkeditorPluginsFormsLangRuJs,
	"static/generator/ckeditor/plugins/forms/lang/si.js": staticGeneratorCkeditorPluginsFormsLangSiJs,
	"static/generator/ckeditor/plugins/forms/lang/sk.js": staticGeneratorCkeditorPluginsFormsLangSkJs,
	"static/generator/ckeditor/plugins/forms/lang/sl.js": staticGeneratorCkeditorPluginsFormsLangSlJs,
	"static/generator/ckeditor/plugins/forms/lang/sq.js": staticGeneratorCkeditorPluginsFormsLangSqJs,
	"static/generator/ckeditor/plugins/forms/lang/sr-latn.js": staticGeneratorCkeditorPluginsFormsLangSrLatnJs,
	"static/generator/ckeditor/plugins/forms/lang/sr.js": staticGeneratorCkeditorPluginsFormsLangSrJs,
	"static/generator/ckeditor/plugins/forms/lang/sv.js": staticGeneratorCkeditorPluginsFormsLangSvJs,
	"static/generator/ckeditor/plugins/forms/lang/th.js": staticGeneratorCkeditorPluginsFormsLangThJs,
	"static/generator/ckeditor/plugins/forms/lang/tr.js": staticGeneratorCkeditorPluginsFormsLangTrJs,
	"static/generator/ckeditor/plugins/forms/lang/tt.js": staticGeneratorCkeditorPluginsFormsLangTtJs,
	"static/generator/ckeditor/plugins/forms/lang/ug.js": staticGeneratorCkeditorPluginsFormsLangUgJs,
	"static/generator/ckeditor/plugins/forms/lang/uk.js": staticGeneratorCkeditorPluginsFormsLangUkJs,
	"static/generator/ckeditor/plugins/forms/lang/vi.js": staticGeneratorCkeditorPluginsFormsLangViJs,
	"static/generator/ckeditor/plugins/forms/lang/zh-cn.js": staticGeneratorCkeditorPluginsFormsLangZhCnJs,
	"static/generator/ckeditor/plugins/forms/lang/zh.js": staticGeneratorCkeditorPluginsFormsLangZhJs,
	"static/generator/ckeditor/plugins/forms/plugin.js": staticGeneratorCkeditorPluginsFormsPluginJs,
	"static/generator/ckeditor/plugins/glyphicons/css/config.json": staticGeneratorCkeditorPluginsGlyphiconsCssConfigJson,
	"static/generator/ckeditor/plugins/glyphicons/css/css/bootstrap.css": staticGeneratorCkeditorPluginsGlyphiconsCssCssBootstrapCss,
	"static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.eot": staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularEot,
	"static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.svg": staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularSvg,
	"static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.ttf": staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularTtf,
	"static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.woff": staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff,
	"static/generator/ckeditor/plugins/glyphicons/css/fonts/glyphicons-halflings-regular.woff2": staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff2,
	"static/generator/ckeditor/plugins/glyphicons/css/js/bootstrap.js": staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapJs,
	"static/generator/ckeditor/plugins/glyphicons/css/js/bootstrap.min.js": staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapMinJs,
	"static/generator/ckeditor/plugins/glyphicons/css/style.css": staticGeneratorCkeditorPluginsGlyphiconsCssStyleCss,
	"static/generator/ckeditor/plugins/glyphicons/dialogs/glyphicons.js": staticGeneratorCkeditorPluginsGlyphiconsDialogsGlyphiconsJs,
	"static/generator/ckeditor/plugins/horizontalrule/icons/hidpi/horizontalrule.png": staticGeneratorCkeditorPluginsHorizontalruleIconsHidpiHorizontalrulePng,
	"static/generator/ckeditor/plugins/horizontalrule/icons/horizontalrule.png": staticGeneratorCkeditorPluginsHorizontalruleIconsHorizontalrulePng,
	"static/generator/ckeditor/plugins/horizontalrule/lang/af.js": staticGeneratorCkeditorPluginsHorizontalruleLangAfJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ar.js": staticGeneratorCkeditorPluginsHorizontalruleLangArJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/az.js": staticGeneratorCkeditorPluginsHorizontalruleLangAzJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/bg.js": staticGeneratorCkeditorPluginsHorizontalruleLangBgJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/bn.js": staticGeneratorCkeditorPluginsHorizontalruleLangBnJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/bs.js": staticGeneratorCkeditorPluginsHorizontalruleLangBsJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ca.js": staticGeneratorCkeditorPluginsHorizontalruleLangCaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/cs.js": staticGeneratorCkeditorPluginsHorizontalruleLangCsJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/cy.js": staticGeneratorCkeditorPluginsHorizontalruleLangCyJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/da.js": staticGeneratorCkeditorPluginsHorizontalruleLangDaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/de-ch.js": staticGeneratorCkeditorPluginsHorizontalruleLangDeChJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/de.js": staticGeneratorCkeditorPluginsHorizontalruleLangDeJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/el.js": staticGeneratorCkeditorPluginsHorizontalruleLangElJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/en-au.js": staticGeneratorCkeditorPluginsHorizontalruleLangEnAuJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/en-ca.js": staticGeneratorCkeditorPluginsHorizontalruleLangEnCaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/en-gb.js": staticGeneratorCkeditorPluginsHorizontalruleLangEnGbJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/en.js": staticGeneratorCkeditorPluginsHorizontalruleLangEnJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/eo.js": staticGeneratorCkeditorPluginsHorizontalruleLangEoJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/es.js": staticGeneratorCkeditorPluginsHorizontalruleLangEsJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/et.js": staticGeneratorCkeditorPluginsHorizontalruleLangEtJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/eu.js": staticGeneratorCkeditorPluginsHorizontalruleLangEuJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/fa.js": staticGeneratorCkeditorPluginsHorizontalruleLangFaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/fi.js": staticGeneratorCkeditorPluginsHorizontalruleLangFiJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/fo.js": staticGeneratorCkeditorPluginsHorizontalruleLangFoJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/fr-ca.js": staticGeneratorCkeditorPluginsHorizontalruleLangFrCaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/fr.js": staticGeneratorCkeditorPluginsHorizontalruleLangFrJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/gl.js": staticGeneratorCkeditorPluginsHorizontalruleLangGlJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/gu.js": staticGeneratorCkeditorPluginsHorizontalruleLangGuJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/he.js": staticGeneratorCkeditorPluginsHorizontalruleLangHeJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/hi.js": staticGeneratorCkeditorPluginsHorizontalruleLangHiJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/hr.js": staticGeneratorCkeditorPluginsHorizontalruleLangHrJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/hu.js": staticGeneratorCkeditorPluginsHorizontalruleLangHuJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/id.js": staticGeneratorCkeditorPluginsHorizontalruleLangIdJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/is.js": staticGeneratorCkeditorPluginsHorizontalruleLangIsJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/it.js": staticGeneratorCkeditorPluginsHorizontalruleLangItJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ja.js": staticGeneratorCkeditorPluginsHorizontalruleLangJaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ka.js": staticGeneratorCkeditorPluginsHorizontalruleLangKaJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/km.js": staticGeneratorCkeditorPluginsHorizontalruleLangKmJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ko.js": staticGeneratorCkeditorPluginsHorizontalruleLangKoJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ku.js": staticGeneratorCkeditorPluginsHorizontalruleLangKuJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/lt.js": staticGeneratorCkeditorPluginsHorizontalruleLangLtJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/lv.js": staticGeneratorCkeditorPluginsHorizontalruleLangLvJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/mk.js": staticGeneratorCkeditorPluginsHorizontalruleLangMkJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/mn.js": staticGeneratorCkeditorPluginsHorizontalruleLangMnJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ms.js": staticGeneratorCkeditorPluginsHorizontalruleLangMsJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/nb.js": staticGeneratorCkeditorPluginsHorizontalruleLangNbJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/nl.js": staticGeneratorCkeditorPluginsHorizontalruleLangNlJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/no.js": staticGeneratorCkeditorPluginsHorizontalruleLangNoJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/oc.js": staticGeneratorCkeditorPluginsHorizontalruleLangOcJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/pl.js": staticGeneratorCkeditorPluginsHorizontalruleLangPlJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/pt-br.js": staticGeneratorCkeditorPluginsHorizontalruleLangPtBrJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/pt.js": staticGeneratorCkeditorPluginsHorizontalruleLangPtJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ro.js": staticGeneratorCkeditorPluginsHorizontalruleLangRoJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ru.js": staticGeneratorCkeditorPluginsHorizontalruleLangRuJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/si.js": staticGeneratorCkeditorPluginsHorizontalruleLangSiJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/sk.js": staticGeneratorCkeditorPluginsHorizontalruleLangSkJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/sl.js": staticGeneratorCkeditorPluginsHorizontalruleLangSlJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/sq.js": staticGeneratorCkeditorPluginsHorizontalruleLangSqJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/sr-latn.js": staticGeneratorCkeditorPluginsHorizontalruleLangSrLatnJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/sr.js": staticGeneratorCkeditorPluginsHorizontalruleLangSrJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/sv.js": staticGeneratorCkeditorPluginsHorizontalruleLangSvJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/th.js": staticGeneratorCkeditorPluginsHorizontalruleLangThJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/tr.js": staticGeneratorCkeditorPluginsHorizontalruleLangTrJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/tt.js": staticGeneratorCkeditorPluginsHorizontalruleLangTtJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/ug.js": staticGeneratorCkeditorPluginsHorizontalruleLangUgJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/uk.js": staticGeneratorCkeditorPluginsHorizontalruleLangUkJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/vi.js": staticGeneratorCkeditorPluginsHorizontalruleLangViJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/zh-cn.js": staticGeneratorCkeditorPluginsHorizontalruleLangZhCnJs,
	"static/generator/ckeditor/plugins/horizontalrule/lang/zh.js": staticGeneratorCkeditorPluginsHorizontalruleLangZhJs,
	"static/generator/ckeditor/plugins/horizontalrule/plugin.js": staticGeneratorCkeditorPluginsHorizontalrulePluginJs,
	"static/generator/ckeditor/plugins/htmlwriter/plugin.js": staticGeneratorCkeditorPluginsHtmlwriterPluginJs,
	"static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/outputforflash.fla": staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashFla,
	"static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/outputforflash.swf": staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashSwf,
	"static/generator/ckeditor/plugins/htmlwriter/samples/assets/outputforflash/swfobject.js": staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashSwfobjectJs,
	"static/generator/ckeditor/plugins/htmlwriter/samples/outputforflash.html": staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputforflashHtml,
	"static/generator/ckeditor/plugins/htmlwriter/samples/outputhtml.html": staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputhtmlHtml,
	"static/generator/ckeditor/plugins/icons.png": staticGeneratorCkeditorPluginsIconsPng,
	"static/generator/ckeditor/plugins/icons_hidpi.png": staticGeneratorCkeditorPluginsIcons_hidpiPng,
	"static/generator/ckeditor/plugins/iframe/dialogs/iframe.js": staticGeneratorCkeditorPluginsIframeDialogsIframeJs,
	"static/generator/ckeditor/plugins/iframe/icons/hidpi/iframe.png": staticGeneratorCkeditorPluginsIframeIconsHidpiIframePng,
	"static/generator/ckeditor/plugins/iframe/icons/iframe.png": staticGeneratorCkeditorPluginsIframeIconsIframePng,
	"static/generator/ckeditor/plugins/iframe/images/placeholder.png": staticGeneratorCkeditorPluginsIframeImagesPlaceholderPng,
	"static/generator/ckeditor/plugins/iframe/lang/af.js": staticGeneratorCkeditorPluginsIframeLangAfJs,
	"static/generator/ckeditor/plugins/iframe/lang/ar.js": staticGeneratorCkeditorPluginsIframeLangArJs,
	"static/generator/ckeditor/plugins/iframe/lang/az.js": staticGeneratorCkeditorPluginsIframeLangAzJs,
	"static/generator/ckeditor/plugins/iframe/lang/bg.js": staticGeneratorCkeditorPluginsIframeLangBgJs,
	"static/generator/ckeditor/plugins/iframe/lang/bn.js": staticGeneratorCkeditorPluginsIframeLangBnJs,
	"static/generator/ckeditor/plugins/iframe/lang/bs.js": staticGeneratorCkeditorPluginsIframeLangBsJs,
	"static/generator/ckeditor/plugins/iframe/lang/ca.js": staticGeneratorCkeditorPluginsIframeLangCaJs,
	"static/generator/ckeditor/plugins/iframe/lang/cs.js": staticGeneratorCkeditorPluginsIframeLangCsJs,
	"static/generator/ckeditor/plugins/iframe/lang/cy.js": staticGeneratorCkeditorPluginsIframeLangCyJs,
	"static/generator/ckeditor/plugins/iframe/lang/da.js": staticGeneratorCkeditorPluginsIframeLangDaJs,
	"static/generator/ckeditor/plugins/iframe/lang/de-ch.js": staticGeneratorCkeditorPluginsIframeLangDeChJs,
	"static/generator/ckeditor/plugins/iframe/lang/de.js": staticGeneratorCkeditorPluginsIframeLangDeJs,
	"static/generator/ckeditor/plugins/iframe/lang/el.js": staticGeneratorCkeditorPluginsIframeLangElJs,
	"static/generator/ckeditor/plugins/iframe/lang/en-au.js": staticGeneratorCkeditorPluginsIframeLangEnAuJs,
	"static/generator/ckeditor/plugins/iframe/lang/en-ca.js": staticGeneratorCkeditorPluginsIframeLangEnCaJs,
	"static/generator/ckeditor/plugins/iframe/lang/en-gb.js": staticGeneratorCkeditorPluginsIframeLangEnGbJs,
	"static/generator/ckeditor/plugins/iframe/lang/en.js": staticGeneratorCkeditorPluginsIframeLangEnJs,
	"static/generator/ckeditor/plugins/iframe/lang/eo.js": staticGeneratorCkeditorPluginsIframeLangEoJs,
	"static/generator/ckeditor/plugins/iframe/lang/es.js": staticGeneratorCkeditorPluginsIframeLangEsJs,
	"static/generator/ckeditor/plugins/iframe/lang/et.js": staticGeneratorCkeditorPluginsIframeLangEtJs,
	"static/generator/ckeditor/plugins/iframe/lang/eu.js": staticGeneratorCkeditorPluginsIframeLangEuJs,
	"static/generator/ckeditor/plugins/iframe/lang/fa.js": staticGeneratorCkeditorPluginsIframeLangFaJs,
	"static/generator/ckeditor/plugins/iframe/lang/fi.js": staticGeneratorCkeditorPluginsIframeLangFiJs,
	"static/generator/ckeditor/plugins/iframe/lang/fo.js": staticGeneratorCkeditorPluginsIframeLangFoJs,
	"static/generator/ckeditor/plugins/iframe/lang/fr-ca.js": staticGeneratorCkeditorPluginsIframeLangFrCaJs,
	"static/generator/ckeditor/plugins/iframe/lang/fr.js": staticGeneratorCkeditorPluginsIframeLangFrJs,
	"static/generator/ckeditor/plugins/iframe/lang/gl.js": staticGeneratorCkeditorPluginsIframeLangGlJs,
	"static/generator/ckeditor/plugins/iframe/lang/gu.js": staticGeneratorCkeditorPluginsIframeLangGuJs,
	"static/generator/ckeditor/plugins/iframe/lang/he.js": staticGeneratorCkeditorPluginsIframeLangHeJs,
	"static/generator/ckeditor/plugins/iframe/lang/hi.js": staticGeneratorCkeditorPluginsIframeLangHiJs,
	"static/generator/ckeditor/plugins/iframe/lang/hr.js": staticGeneratorCkeditorPluginsIframeLangHrJs,
	"static/generator/ckeditor/plugins/iframe/lang/hu.js": staticGeneratorCkeditorPluginsIframeLangHuJs,
	"static/generator/ckeditor/plugins/iframe/lang/id.js": staticGeneratorCkeditorPluginsIframeLangIdJs,
	"static/generator/ckeditor/plugins/iframe/lang/is.js": staticGeneratorCkeditorPluginsIframeLangIsJs,
	"static/generator/ckeditor/plugins/iframe/lang/it.js": staticGeneratorCkeditorPluginsIframeLangItJs,
	"static/generator/ckeditor/plugins/iframe/lang/ja.js": staticGeneratorCkeditorPluginsIframeLangJaJs,
	"static/generator/ckeditor/plugins/iframe/lang/ka.js": staticGeneratorCkeditorPluginsIframeLangKaJs,
	"static/generator/ckeditor/plugins/iframe/lang/km.js": staticGeneratorCkeditorPluginsIframeLangKmJs,
	"static/generator/ckeditor/plugins/iframe/lang/ko.js": staticGeneratorCkeditorPluginsIframeLangKoJs,
	"static/generator/ckeditor/plugins/iframe/lang/ku.js": staticGeneratorCkeditorPluginsIframeLangKuJs,
	"static/generator/ckeditor/plugins/iframe/lang/lt.js": staticGeneratorCkeditorPluginsIframeLangLtJs,
	"static/generator/ckeditor/plugins/iframe/lang/lv.js": staticGeneratorCkeditorPluginsIframeLangLvJs,
	"static/generator/ckeditor/plugins/iframe/lang/mk.js": staticGeneratorCkeditorPluginsIframeLangMkJs,
	"static/generator/ckeditor/plugins/iframe/lang/mn.js": staticGeneratorCkeditorPluginsIframeLangMnJs,
	"static/generator/ckeditor/plugins/iframe/lang/ms.js": staticGeneratorCkeditorPluginsIframeLangMsJs,
	"static/generator/ckeditor/plugins/iframe/lang/nb.js": staticGeneratorCkeditorPluginsIframeLangNbJs,
	"static/generator/ckeditor/plugins/iframe/lang/nl.js": staticGeneratorCkeditorPluginsIframeLangNlJs,
	"static/generator/ckeditor/plugins/iframe/lang/no.js": staticGeneratorCkeditorPluginsIframeLangNoJs,
	"static/generator/ckeditor/plugins/iframe/lang/oc.js": staticGeneratorCkeditorPluginsIframeLangOcJs,
	"static/generator/ckeditor/plugins/iframe/lang/pl.js": staticGeneratorCkeditorPluginsIframeLangPlJs,
	"static/generator/ckeditor/plugins/iframe/lang/pt-br.js": staticGeneratorCkeditorPluginsIframeLangPtBrJs,
	"static/generator/ckeditor/plugins/iframe/lang/pt.js": staticGeneratorCkeditorPluginsIframeLangPtJs,
	"static/generator/ckeditor/plugins/iframe/lang/ro.js": staticGeneratorCkeditorPluginsIframeLangRoJs,
	"static/generator/ckeditor/plugins/iframe/lang/ru.js": staticGeneratorCkeditorPluginsIframeLangRuJs,
	"static/generator/ckeditor/plugins/iframe/lang/si.js": staticGeneratorCkeditorPluginsIframeLangSiJs,
	"static/generator/ckeditor/plugins/iframe/lang/sk.js": staticGeneratorCkeditorPluginsIframeLangSkJs,
	"static/generator/ckeditor/plugins/iframe/lang/sl.js": staticGeneratorCkeditorPluginsIframeLangSlJs,
	"static/generator/ckeditor/plugins/iframe/lang/sq.js": staticGeneratorCkeditorPluginsIframeLangSqJs,
	"static/generator/ckeditor/plugins/iframe/lang/sr-latn.js": staticGeneratorCkeditorPluginsIframeLangSrLatnJs,
	"static/generator/ckeditor/plugins/iframe/lang/sr.js": staticGeneratorCkeditorPluginsIframeLangSrJs,
	"static/generator/ckeditor/plugins/iframe/lang/sv.js": staticGeneratorCkeditorPluginsIframeLangSvJs,
	"static/generator/ckeditor/plugins/iframe/lang/th.js": staticGeneratorCkeditorPluginsIframeLangThJs,
	"static/generator/ckeditor/plugins/iframe/lang/tr.js": staticGeneratorCkeditorPluginsIframeLangTrJs,
	"static/generator/ckeditor/plugins/iframe/lang/tt.js": staticGeneratorCkeditorPluginsIframeLangTtJs,
	"static/generator/ckeditor/plugins/iframe/lang/ug.js": staticGeneratorCkeditorPluginsIframeLangUgJs,
	"static/generator/ckeditor/plugins/iframe/lang/uk.js": staticGeneratorCkeditorPluginsIframeLangUkJs,
	"static/generator/ckeditor/plugins/iframe/lang/vi.js": staticGeneratorCkeditorPluginsIframeLangViJs,
	"static/generator/ckeditor/plugins/iframe/lang/zh-cn.js": staticGeneratorCkeditorPluginsIframeLangZhCnJs,
	"static/generator/ckeditor/plugins/iframe/lang/zh.js": staticGeneratorCkeditorPluginsIframeLangZhJs,
	"static/generator/ckeditor/plugins/iframe/plugin.js": staticGeneratorCkeditorPluginsIframePluginJs,
	"static/generator/ckeditor/plugins/image/dialogs/image.js": staticGeneratorCkeditorPluginsImageDialogsImageJs,
	"static/generator/ckeditor/plugins/image/icons/hidpi/image.png": staticGeneratorCkeditorPluginsImageIconsHidpiImagePng,
	"static/generator/ckeditor/plugins/image/icons/image.png": staticGeneratorCkeditorPluginsImageIconsImagePng,
	"static/generator/ckeditor/plugins/image/images/noimage.png": staticGeneratorCkeditorPluginsImageImagesNoimagePng,
	"static/generator/ckeditor/plugins/image/lang/af.js": staticGeneratorCkeditorPluginsImageLangAfJs,
	"static/generator/ckeditor/plugins/image/lang/ar.js": staticGeneratorCkeditorPluginsImageLangArJs,
	"static/generator/ckeditor/plugins/image/lang/az.js": staticGeneratorCkeditorPluginsImageLangAzJs,
	"static/generator/ckeditor/plugins/image/lang/bg.js": staticGeneratorCkeditorPluginsImageLangBgJs,
	"static/generator/ckeditor/plugins/image/lang/bn.js": staticGeneratorCkeditorPluginsImageLangBnJs,
	"static/generator/ckeditor/plugins/image/lang/bs.js": staticGeneratorCkeditorPluginsImageLangBsJs,
	"static/generator/ckeditor/plugins/image/lang/ca.js": staticGeneratorCkeditorPluginsImageLangCaJs,
	"static/generator/ckeditor/plugins/image/lang/cs.js": staticGeneratorCkeditorPluginsImageLangCsJs,
	"static/generator/ckeditor/plugins/image/lang/cy.js": staticGeneratorCkeditorPluginsImageLangCyJs,
	"static/generator/ckeditor/plugins/image/lang/da.js": staticGeneratorCkeditorPluginsImageLangDaJs,
	"static/generator/ckeditor/plugins/image/lang/de-ch.js": staticGeneratorCkeditorPluginsImageLangDeChJs,
	"static/generator/ckeditor/plugins/image/lang/de.js": staticGeneratorCkeditorPluginsImageLangDeJs,
	"static/generator/ckeditor/plugins/image/lang/el.js": staticGeneratorCkeditorPluginsImageLangElJs,
	"static/generator/ckeditor/plugins/image/lang/en-au.js": staticGeneratorCkeditorPluginsImageLangEnAuJs,
	"static/generator/ckeditor/plugins/image/lang/en-ca.js": staticGeneratorCkeditorPluginsImageLangEnCaJs,
	"static/generator/ckeditor/plugins/image/lang/en-gb.js": staticGeneratorCkeditorPluginsImageLangEnGbJs,
	"static/generator/ckeditor/plugins/image/lang/en.js": staticGeneratorCkeditorPluginsImageLangEnJs,
	"static/generator/ckeditor/plugins/image/lang/eo.js": staticGeneratorCkeditorPluginsImageLangEoJs,
	"static/generator/ckeditor/plugins/image/lang/es.js": staticGeneratorCkeditorPluginsImageLangEsJs,
	"static/generator/ckeditor/plugins/image/lang/et.js": staticGeneratorCkeditorPluginsImageLangEtJs,
	"static/generator/ckeditor/plugins/image/lang/eu.js": staticGeneratorCkeditorPluginsImageLangEuJs,
	"static/generator/ckeditor/plugins/image/lang/fa.js": staticGeneratorCkeditorPluginsImageLangFaJs,
	"static/generator/ckeditor/plugins/image/lang/fi.js": staticGeneratorCkeditorPluginsImageLangFiJs,
	"static/generator/ckeditor/plugins/image/lang/fo.js": staticGeneratorCkeditorPluginsImageLangFoJs,
	"static/generator/ckeditor/plugins/image/lang/fr-ca.js": staticGeneratorCkeditorPluginsImageLangFrCaJs,
	"static/generator/ckeditor/plugins/image/lang/fr.js": staticGeneratorCkeditorPluginsImageLangFrJs,
	"static/generator/ckeditor/plugins/image/lang/gl.js": staticGeneratorCkeditorPluginsImageLangGlJs,
	"static/generator/ckeditor/plugins/image/lang/gu.js": staticGeneratorCkeditorPluginsImageLangGuJs,
	"static/generator/ckeditor/plugins/image/lang/he.js": staticGeneratorCkeditorPluginsImageLangHeJs,
	"static/generator/ckeditor/plugins/image/lang/hi.js": staticGeneratorCkeditorPluginsImageLangHiJs,
	"static/generator/ckeditor/plugins/image/lang/hr.js": staticGeneratorCkeditorPluginsImageLangHrJs,
	"static/generator/ckeditor/plugins/image/lang/hu.js": staticGeneratorCkeditorPluginsImageLangHuJs,
	"static/generator/ckeditor/plugins/image/lang/id.js": staticGeneratorCkeditorPluginsImageLangIdJs,
	"static/generator/ckeditor/plugins/image/lang/is.js": staticGeneratorCkeditorPluginsImageLangIsJs,
	"static/generator/ckeditor/plugins/image/lang/it.js": staticGeneratorCkeditorPluginsImageLangItJs,
	"static/generator/ckeditor/plugins/image/lang/ja.js": staticGeneratorCkeditorPluginsImageLangJaJs,
	"static/generator/ckeditor/plugins/image/lang/ka.js": staticGeneratorCkeditorPluginsImageLangKaJs,
	"static/generator/ckeditor/plugins/image/lang/km.js": staticGeneratorCkeditorPluginsImageLangKmJs,
	"static/generator/ckeditor/plugins/image/lang/ko.js": staticGeneratorCkeditorPluginsImageLangKoJs,
	"static/generator/ckeditor/plugins/image/lang/ku.js": staticGeneratorCkeditorPluginsImageLangKuJs,
	"static/generator/ckeditor/plugins/image/lang/lt.js": staticGeneratorCkeditorPluginsImageLangLtJs,
	"static/generator/ckeditor/plugins/image/lang/lv.js": staticGeneratorCkeditorPluginsImageLangLvJs,
	"static/generator/ckeditor/plugins/image/lang/mk.js": staticGeneratorCkeditorPluginsImageLangMkJs,
	"static/generator/ckeditor/plugins/image/lang/mn.js": staticGeneratorCkeditorPluginsImageLangMnJs,
	"static/generator/ckeditor/plugins/image/lang/ms.js": staticGeneratorCkeditorPluginsImageLangMsJs,
	"static/generator/ckeditor/plugins/image/lang/nb.js": staticGeneratorCkeditorPluginsImageLangNbJs,
	"static/generator/ckeditor/plugins/image/lang/nl.js": staticGeneratorCkeditorPluginsImageLangNlJs,
	"static/generator/ckeditor/plugins/image/lang/no.js": staticGeneratorCkeditorPluginsImageLangNoJs,
	"static/generator/ckeditor/plugins/image/lang/oc.js": staticGeneratorCkeditorPluginsImageLangOcJs,
	"static/generator/ckeditor/plugins/image/lang/pl.js": staticGeneratorCkeditorPluginsImageLangPlJs,
	"static/generator/ckeditor/plugins/image/lang/pt-br.js": staticGeneratorCkeditorPluginsImageLangPtBrJs,
	"static/generator/ckeditor/plugins/image/lang/pt.js": staticGeneratorCkeditorPluginsImageLangPtJs,
	"static/generator/ckeditor/plugins/image/lang/ro.js": staticGeneratorCkeditorPluginsImageLangRoJs,
	"static/generator/ckeditor/plugins/image/lang/ru.js": staticGeneratorCkeditorPluginsImageLangRuJs,
	"static/generator/ckeditor/plugins/image/lang/si.js": staticGeneratorCkeditorPluginsImageLangSiJs,
	"static/generator/ckeditor/plugins/image/lang/sk.js": staticGeneratorCkeditorPluginsImageLangSkJs,
	"static/generator/ckeditor/plugins/image/lang/sl.js": staticGeneratorCkeditorPluginsImageLangSlJs,
	"static/generator/ckeditor/plugins/image/lang/sq.js": staticGeneratorCkeditorPluginsImageLangSqJs,
	"static/generator/ckeditor/plugins/image/lang/sr-latn.js": staticGeneratorCkeditorPluginsImageLangSrLatnJs,
	"static/generator/ckeditor/plugins/image/lang/sr.js": staticGeneratorCkeditorPluginsImageLangSrJs,
	"static/generator/ckeditor/plugins/image/lang/sv.js": staticGeneratorCkeditorPluginsImageLangSvJs,
	"static/generator/ckeditor/plugins/image/lang/th.js": staticGeneratorCkeditorPluginsImageLangThJs,
	"static/generator/ckeditor/plugins/image/lang/tr.js": staticGeneratorCkeditorPluginsImageLangTrJs,
	"static/generator/ckeditor/plugins/image/lang/tt.js": staticGeneratorCkeditorPluginsImageLangTtJs,
	"static/generator/ckeditor/plugins/image/lang/ug.js": staticGeneratorCkeditorPluginsImageLangUgJs,
	"static/generator/ckeditor/plugins/image/lang/uk.js": staticGeneratorCkeditorPluginsImageLangUkJs,
	"static/generator/ckeditor/plugins/image/lang/vi.js": staticGeneratorCkeditorPluginsImageLangViJs,
	"static/generator/ckeditor/plugins/image/lang/zh-cn.js": staticGeneratorCkeditorPluginsImageLangZhCnJs,
	"static/generator/ckeditor/plugins/image/lang/zh.js": staticGeneratorCkeditorPluginsImageLangZhJs,
	"static/generator/ckeditor/plugins/image/plugin.js": staticGeneratorCkeditorPluginsImagePluginJs,
	"static/generator/ckeditor/plugins/indent/dev/indent.html": staticGeneratorCkeditorPluginsIndentDevIndentHtml,
	"static/generator/ckeditor/plugins/indent/icons/hidpi/indent-rtl.png": staticGeneratorCkeditorPluginsIndentIconsHidpiIndentRtlPng,
	"static/generator/ckeditor/plugins/indent/icons/hidpi/indent.png": staticGeneratorCkeditorPluginsIndentIconsHidpiIndentPng,
	"static/generator/ckeditor/plugins/indent/icons/hidpi/outdent-rtl.png": staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentRtlPng,
	"static/generator/ckeditor/plugins/indent/icons/hidpi/outdent.png": staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentPng,
	"static/generator/ckeditor/plugins/indent/icons/indent-rtl.png": staticGeneratorCkeditorPluginsIndentIconsIndentRtlPng,
	"static/generator/ckeditor/plugins/indent/icons/indent.png": staticGeneratorCkeditorPluginsIndentIconsIndentPng,
	"static/generator/ckeditor/plugins/indent/icons/outdent-rtl.png": staticGeneratorCkeditorPluginsIndentIconsOutdentRtlPng,
	"static/generator/ckeditor/plugins/indent/icons/outdent.png": staticGeneratorCkeditorPluginsIndentIconsOutdentPng,
	"static/generator/ckeditor/plugins/indent/lang/af.js": staticGeneratorCkeditorPluginsIndentLangAfJs,
	"static/generator/ckeditor/plugins/indent/lang/ar.js": staticGeneratorCkeditorPluginsIndentLangArJs,
	"static/generator/ckeditor/plugins/indent/lang/az.js": staticGeneratorCkeditorPluginsIndentLangAzJs,
	"static/generator/ckeditor/plugins/indent/lang/bg.js": staticGeneratorCkeditorPluginsIndentLangBgJs,
	"static/generator/ckeditor/plugins/indent/lang/bn.js": staticGeneratorCkeditorPluginsIndentLangBnJs,
	"static/generator/ckeditor/plugins/indent/lang/bs.js": staticGeneratorCkeditorPluginsIndentLangBsJs,
	"static/generator/ckeditor/plugins/indent/lang/ca.js": staticGeneratorCkeditorPluginsIndentLangCaJs,
	"static/generator/ckeditor/plugins/indent/lang/cs.js": staticGeneratorCkeditorPluginsIndentLangCsJs,
	"static/generator/ckeditor/plugins/indent/lang/cy.js": staticGeneratorCkeditorPluginsIndentLangCyJs,
	"static/generator/ckeditor/plugins/indent/lang/da.js": staticGeneratorCkeditorPluginsIndentLangDaJs,
	"static/generator/ckeditor/plugins/indent/lang/de-ch.js": staticGeneratorCkeditorPluginsIndentLangDeChJs,
	"static/generator/ckeditor/plugins/indent/lang/de.js": staticGeneratorCkeditorPluginsIndentLangDeJs,
	"static/generator/ckeditor/plugins/indent/lang/el.js": staticGeneratorCkeditorPluginsIndentLangElJs,
	"static/generator/ckeditor/plugins/indent/lang/en-au.js": staticGeneratorCkeditorPluginsIndentLangEnAuJs,
	"static/generator/ckeditor/plugins/indent/lang/en-ca.js": staticGeneratorCkeditorPluginsIndentLangEnCaJs,
	"static/generator/ckeditor/plugins/indent/lang/en-gb.js": staticGeneratorCkeditorPluginsIndentLangEnGbJs,
	"static/generator/ckeditor/plugins/indent/lang/en.js": staticGeneratorCkeditorPluginsIndentLangEnJs,
	"static/generator/ckeditor/plugins/indent/lang/eo.js": staticGeneratorCkeditorPluginsIndentLangEoJs,
	"static/generator/ckeditor/plugins/indent/lang/es.js": staticGeneratorCkeditorPluginsIndentLangEsJs,
	"static/generator/ckeditor/plugins/indent/lang/et.js": staticGeneratorCkeditorPluginsIndentLangEtJs,
	"static/generator/ckeditor/plugins/indent/lang/eu.js": staticGeneratorCkeditorPluginsIndentLangEuJs,
	"static/generator/ckeditor/plugins/indent/lang/fa.js": staticGeneratorCkeditorPluginsIndentLangFaJs,
	"static/generator/ckeditor/plugins/indent/lang/fi.js": staticGeneratorCkeditorPluginsIndentLangFiJs,
	"static/generator/ckeditor/plugins/indent/lang/fo.js": staticGeneratorCkeditorPluginsIndentLangFoJs,
	"static/generator/ckeditor/plugins/indent/lang/fr-ca.js": staticGeneratorCkeditorPluginsIndentLangFrCaJs,
	"static/generator/ckeditor/plugins/indent/lang/fr.js": staticGeneratorCkeditorPluginsIndentLangFrJs,
	"static/generator/ckeditor/plugins/indent/lang/gl.js": staticGeneratorCkeditorPluginsIndentLangGlJs,
	"static/generator/ckeditor/plugins/indent/lang/gu.js": staticGeneratorCkeditorPluginsIndentLangGuJs,
	"static/generator/ckeditor/plugins/indent/lang/he.js": staticGeneratorCkeditorPluginsIndentLangHeJs,
	"static/generator/ckeditor/plugins/indent/lang/hi.js": staticGeneratorCkeditorPluginsIndentLangHiJs,
	"static/generator/ckeditor/plugins/indent/lang/hr.js": staticGeneratorCkeditorPluginsIndentLangHrJs,
	"static/generator/ckeditor/plugins/indent/lang/hu.js": staticGeneratorCkeditorPluginsIndentLangHuJs,
	"static/generator/ckeditor/plugins/indent/lang/id.js": staticGeneratorCkeditorPluginsIndentLangIdJs,
	"static/generator/ckeditor/plugins/indent/lang/is.js": staticGeneratorCkeditorPluginsIndentLangIsJs,
	"static/generator/ckeditor/plugins/indent/lang/it.js": staticGeneratorCkeditorPluginsIndentLangItJs,
	"static/generator/ckeditor/plugins/indent/lang/ja.js": staticGeneratorCkeditorPluginsIndentLangJaJs,
	"static/generator/ckeditor/plugins/indent/lang/ka.js": staticGeneratorCkeditorPluginsIndentLangKaJs,
	"static/generator/ckeditor/plugins/indent/lang/km.js": staticGeneratorCkeditorPluginsIndentLangKmJs,
	"static/generator/ckeditor/plugins/indent/lang/ko.js": staticGeneratorCkeditorPluginsIndentLangKoJs,
	"static/generator/ckeditor/plugins/indent/lang/ku.js": staticGeneratorCkeditorPluginsIndentLangKuJs,
	"static/generator/ckeditor/plugins/indent/lang/lt.js": staticGeneratorCkeditorPluginsIndentLangLtJs,
	"static/generator/ckeditor/plugins/indent/lang/lv.js": staticGeneratorCkeditorPluginsIndentLangLvJs,
	"static/generator/ckeditor/plugins/indent/lang/mk.js": staticGeneratorCkeditorPluginsIndentLangMkJs,
	"static/generator/ckeditor/plugins/indent/lang/mn.js": staticGeneratorCkeditorPluginsIndentLangMnJs,
	"static/generator/ckeditor/plugins/indent/lang/ms.js": staticGeneratorCkeditorPluginsIndentLangMsJs,
	"static/generator/ckeditor/plugins/indent/lang/nb.js": staticGeneratorCkeditorPluginsIndentLangNbJs,
	"static/generator/ckeditor/plugins/indent/lang/nl.js": staticGeneratorCkeditorPluginsIndentLangNlJs,
	"static/generator/ckeditor/plugins/indent/lang/no.js": staticGeneratorCkeditorPluginsIndentLangNoJs,
	"static/generator/ckeditor/plugins/indent/lang/oc.js": staticGeneratorCkeditorPluginsIndentLangOcJs,
	"static/generator/ckeditor/plugins/indent/lang/pl.js": staticGeneratorCkeditorPluginsIndentLangPlJs,
	"static/generator/ckeditor/plugins/indent/lang/pt-br.js": staticGeneratorCkeditorPluginsIndentLangPtBrJs,
	"static/generator/ckeditor/plugins/indent/lang/pt.js": staticGeneratorCkeditorPluginsIndentLangPtJs,
	"static/generator/ckeditor/plugins/indent/lang/ro.js": staticGeneratorCkeditorPluginsIndentLangRoJs,
	"static/generator/ckeditor/plugins/indent/lang/ru.js": staticGeneratorCkeditorPluginsIndentLangRuJs,
	"static/generator/ckeditor/plugins/indent/lang/si.js": staticGeneratorCkeditorPluginsIndentLangSiJs,
	"static/generator/ckeditor/plugins/indent/lang/sk.js": staticGeneratorCkeditorPluginsIndentLangSkJs,
	"static/generator/ckeditor/plugins/indent/lang/sl.js": staticGeneratorCkeditorPluginsIndentLangSlJs,
	"static/generator/ckeditor/plugins/indent/lang/sq.js": staticGeneratorCkeditorPluginsIndentLangSqJs,
	"static/generator/ckeditor/plugins/indent/lang/sr-latn.js": staticGeneratorCkeditorPluginsIndentLangSrLatnJs,
	"static/generator/ckeditor/plugins/indent/lang/sr.js": staticGeneratorCkeditorPluginsIndentLangSrJs,
	"static/generator/ckeditor/plugins/indent/lang/sv.js": staticGeneratorCkeditorPluginsIndentLangSvJs,
	"static/generator/ckeditor/plugins/indent/lang/th.js": staticGeneratorCkeditorPluginsIndentLangThJs,
	"static/generator/ckeditor/plugins/indent/lang/tr.js": staticGeneratorCkeditorPluginsIndentLangTrJs,
	"static/generator/ckeditor/plugins/indent/lang/tt.js": staticGeneratorCkeditorPluginsIndentLangTtJs,
	"static/generator/ckeditor/plugins/indent/lang/ug.js": staticGeneratorCkeditorPluginsIndentLangUgJs,
	"static/generator/ckeditor/plugins/indent/lang/uk.js": staticGeneratorCkeditorPluginsIndentLangUkJs,
	"static/generator/ckeditor/plugins/indent/lang/vi.js": staticGeneratorCkeditorPluginsIndentLangViJs,
	"static/generator/ckeditor/plugins/indent/lang/zh-cn.js": staticGeneratorCkeditorPluginsIndentLangZhCnJs,
	"static/generator/ckeditor/plugins/indent/lang/zh.js": staticGeneratorCkeditorPluginsIndentLangZhJs,
	"static/generator/ckeditor/plugins/indent/plugin.js": staticGeneratorCkeditorPluginsIndentPluginJs,
	"static/generator/ckeditor/plugins/indentblock/plugin.js": staticGeneratorCkeditorPluginsIndentblockPluginJs,
	"static/generator/ckeditor/plugins/indentlist/plugin.js": staticGeneratorCkeditorPluginsIndentlistPluginJs,
	"static/generator/ckeditor/plugins/justify/icons/hidpi/justifyblock.png": staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyblockPng,
	"static/generator/ckeditor/plugins/justify/icons/hidpi/justifycenter.png": staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifycenterPng,
	"static/generator/ckeditor/plugins/justify/icons/hidpi/justifyleft.png": staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyleftPng,
	"static/generator/ckeditor/plugins/justify/icons/hidpi/justifyright.png": staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyrightPng,
	"static/generator/ckeditor/plugins/justify/icons/justifyblock.png": staticGeneratorCkeditorPluginsJustifyIconsJustifyblockPng,
	"static/generator/ckeditor/plugins/justify/icons/justifycenter.png": staticGeneratorCkeditorPluginsJustifyIconsJustifycenterPng,
	"static/generator/ckeditor/plugins/justify/icons/justifyleft.png": staticGeneratorCkeditorPluginsJustifyIconsJustifyleftPng,
	"static/generator/ckeditor/plugins/justify/icons/justifyright.png": staticGeneratorCkeditorPluginsJustifyIconsJustifyrightPng,
	"static/generator/ckeditor/plugins/justify/lang/af.js": staticGeneratorCkeditorPluginsJustifyLangAfJs,
	"static/generator/ckeditor/plugins/justify/lang/ar.js": staticGeneratorCkeditorPluginsJustifyLangArJs,
	"static/generator/ckeditor/plugins/justify/lang/az.js": staticGeneratorCkeditorPluginsJustifyLangAzJs,
	"static/generator/ckeditor/plugins/justify/lang/bg.js": staticGeneratorCkeditorPluginsJustifyLangBgJs,
	"static/generator/ckeditor/plugins/justify/lang/bn.js": staticGeneratorCkeditorPluginsJustifyLangBnJs,
	"static/generator/ckeditor/plugins/justify/lang/bs.js": staticGeneratorCkeditorPluginsJustifyLangBsJs,
	"static/generator/ckeditor/plugins/justify/lang/ca.js": staticGeneratorCkeditorPluginsJustifyLangCaJs,
	"static/generator/ckeditor/plugins/justify/lang/cs.js": staticGeneratorCkeditorPluginsJustifyLangCsJs,
	"static/generator/ckeditor/plugins/justify/lang/cy.js": staticGeneratorCkeditorPluginsJustifyLangCyJs,
	"static/generator/ckeditor/plugins/justify/lang/da.js": staticGeneratorCkeditorPluginsJustifyLangDaJs,
	"static/generator/ckeditor/plugins/justify/lang/de-ch.js": staticGeneratorCkeditorPluginsJustifyLangDeChJs,
	"static/generator/ckeditor/plugins/justify/lang/de.js": staticGeneratorCkeditorPluginsJustifyLangDeJs,
	"static/generator/ckeditor/plugins/justify/lang/el.js": staticGeneratorCkeditorPluginsJustifyLangElJs,
	"static/generator/ckeditor/plugins/justify/lang/en-au.js": staticGeneratorCkeditorPluginsJustifyLangEnAuJs,
	"static/generator/ckeditor/plugins/justify/lang/en-ca.js": staticGeneratorCkeditorPluginsJustifyLangEnCaJs,
	"static/generator/ckeditor/plugins/justify/lang/en-gb.js": staticGeneratorCkeditorPluginsJustifyLangEnGbJs,
	"static/generator/ckeditor/plugins/justify/lang/en.js": staticGeneratorCkeditorPluginsJustifyLangEnJs,
	"static/generator/ckeditor/plugins/justify/lang/eo.js": staticGeneratorCkeditorPluginsJustifyLangEoJs,
	"static/generator/ckeditor/plugins/justify/lang/es.js": staticGeneratorCkeditorPluginsJustifyLangEsJs,
	"static/generator/ckeditor/plugins/justify/lang/et.js": staticGeneratorCkeditorPluginsJustifyLangEtJs,
	"static/generator/ckeditor/plugins/justify/lang/eu.js": staticGeneratorCkeditorPluginsJustifyLangEuJs,
	"static/generator/ckeditor/plugins/justify/lang/fa.js": staticGeneratorCkeditorPluginsJustifyLangFaJs,
	"static/generator/ckeditor/plugins/justify/lang/fi.js": staticGeneratorCkeditorPluginsJustifyLangFiJs,
	"static/generator/ckeditor/plugins/justify/lang/fo.js": staticGeneratorCkeditorPluginsJustifyLangFoJs,
	"static/generator/ckeditor/plugins/justify/lang/fr-ca.js": staticGeneratorCkeditorPluginsJustifyLangFrCaJs,
	"static/generator/ckeditor/plugins/justify/lang/fr.js": staticGeneratorCkeditorPluginsJustifyLangFrJs,
	"static/generator/ckeditor/plugins/justify/lang/gl.js": staticGeneratorCkeditorPluginsJustifyLangGlJs,
	"static/generator/ckeditor/plugins/justify/lang/gu.js": staticGeneratorCkeditorPluginsJustifyLangGuJs,
	"static/generator/ckeditor/plugins/justify/lang/he.js": staticGeneratorCkeditorPluginsJustifyLangHeJs,
	"static/generator/ckeditor/plugins/justify/lang/hi.js": staticGeneratorCkeditorPluginsJustifyLangHiJs,
	"static/generator/ckeditor/plugins/justify/lang/hr.js": staticGeneratorCkeditorPluginsJustifyLangHrJs,
	"static/generator/ckeditor/plugins/justify/lang/hu.js": staticGeneratorCkeditorPluginsJustifyLangHuJs,
	"static/generator/ckeditor/plugins/justify/lang/id.js": staticGeneratorCkeditorPluginsJustifyLangIdJs,
	"static/generator/ckeditor/plugins/justify/lang/is.js": staticGeneratorCkeditorPluginsJustifyLangIsJs,
	"static/generator/ckeditor/plugins/justify/lang/it.js": staticGeneratorCkeditorPluginsJustifyLangItJs,
	"static/generator/ckeditor/plugins/justify/lang/ja.js": staticGeneratorCkeditorPluginsJustifyLangJaJs,
	"static/generator/ckeditor/plugins/justify/lang/ka.js": staticGeneratorCkeditorPluginsJustifyLangKaJs,
	"static/generator/ckeditor/plugins/justify/lang/km.js": staticGeneratorCkeditorPluginsJustifyLangKmJs,
	"static/generator/ckeditor/plugins/justify/lang/ko.js": staticGeneratorCkeditorPluginsJustifyLangKoJs,
	"static/generator/ckeditor/plugins/justify/lang/ku.js": staticGeneratorCkeditorPluginsJustifyLangKuJs,
	"static/generator/ckeditor/plugins/justify/lang/lt.js": staticGeneratorCkeditorPluginsJustifyLangLtJs,
	"static/generator/ckeditor/plugins/justify/lang/lv.js": staticGeneratorCkeditorPluginsJustifyLangLvJs,
	"static/generator/ckeditor/plugins/justify/lang/mk.js": staticGeneratorCkeditorPluginsJustifyLangMkJs,
	"static/generator/ckeditor/plugins/justify/lang/mn.js": staticGeneratorCkeditorPluginsJustifyLangMnJs,
	"static/generator/ckeditor/plugins/justify/lang/ms.js": staticGeneratorCkeditorPluginsJustifyLangMsJs,
	"static/generator/ckeditor/plugins/justify/lang/nb.js": staticGeneratorCkeditorPluginsJustifyLangNbJs,
	"static/generator/ckeditor/plugins/justify/lang/nl.js": staticGeneratorCkeditorPluginsJustifyLangNlJs,
	"static/generator/ckeditor/plugins/justify/lang/no.js": staticGeneratorCkeditorPluginsJustifyLangNoJs,
	"static/generator/ckeditor/plugins/justify/lang/oc.js": staticGeneratorCkeditorPluginsJustifyLangOcJs,
	"static/generator/ckeditor/plugins/justify/lang/pl.js": staticGeneratorCkeditorPluginsJustifyLangPlJs,
	"static/generator/ckeditor/plugins/justify/lang/pt-br.js": staticGeneratorCkeditorPluginsJustifyLangPtBrJs,
	"static/generator/ckeditor/plugins/justify/lang/pt.js": staticGeneratorCkeditorPluginsJustifyLangPtJs,
	"static/generator/ckeditor/plugins/justify/lang/ro.js": staticGeneratorCkeditorPluginsJustifyLangRoJs,
	"static/generator/ckeditor/plugins/justify/lang/ru.js": staticGeneratorCkeditorPluginsJustifyLangRuJs,
	"static/generator/ckeditor/plugins/justify/lang/si.js": staticGeneratorCkeditorPluginsJustifyLangSiJs,
	"static/generator/ckeditor/plugins/justify/lang/sk.js": staticGeneratorCkeditorPluginsJustifyLangSkJs,
	"static/generator/ckeditor/plugins/justify/lang/sl.js": staticGeneratorCkeditorPluginsJustifyLangSlJs,
	"static/generator/ckeditor/plugins/justify/lang/sq.js": staticGeneratorCkeditorPluginsJustifyLangSqJs,
	"static/generator/ckeditor/plugins/justify/lang/sr-latn.js": staticGeneratorCkeditorPluginsJustifyLangSrLatnJs,
	"static/generator/ckeditor/plugins/justify/lang/sr.js": staticGeneratorCkeditorPluginsJustifyLangSrJs,
	"static/generator/ckeditor/plugins/justify/lang/sv.js": staticGeneratorCkeditorPluginsJustifyLangSvJs,
	"static/generator/ckeditor/plugins/justify/lang/th.js": staticGeneratorCkeditorPluginsJustifyLangThJs,
	"static/generator/ckeditor/plugins/justify/lang/tr.js": staticGeneratorCkeditorPluginsJustifyLangTrJs,
	"static/generator/ckeditor/plugins/justify/lang/tt.js": staticGeneratorCkeditorPluginsJustifyLangTtJs,
	"static/generator/ckeditor/plugins/justify/lang/ug.js": staticGeneratorCkeditorPluginsJustifyLangUgJs,
	"static/generator/ckeditor/plugins/justify/lang/uk.js": staticGeneratorCkeditorPluginsJustifyLangUkJs,
	"static/generator/ckeditor/plugins/justify/lang/vi.js": staticGeneratorCkeditorPluginsJustifyLangViJs,
	"static/generator/ckeditor/plugins/justify/lang/zh-cn.js": staticGeneratorCkeditorPluginsJustifyLangZhCnJs,
	"static/generator/ckeditor/plugins/justify/lang/zh.js": staticGeneratorCkeditorPluginsJustifyLangZhJs,
	"static/generator/ckeditor/plugins/justify/plugin.js": staticGeneratorCkeditorPluginsJustifyPluginJs,
	"static/generator/ckeditor/plugins/language/icons/hidpi/language.png": staticGeneratorCkeditorPluginsLanguageIconsHidpiLanguagePng,
	"static/generator/ckeditor/plugins/language/icons/language.png": staticGeneratorCkeditorPluginsLanguageIconsLanguagePng,
	"static/generator/ckeditor/plugins/language/lang/ar.js": staticGeneratorCkeditorPluginsLanguageLangArJs,
	"static/generator/ckeditor/plugins/language/lang/az.js": staticGeneratorCkeditorPluginsLanguageLangAzJs,
	"static/generator/ckeditor/plugins/language/lang/bg.js": staticGeneratorCkeditorPluginsLanguageLangBgJs,
	"static/generator/ckeditor/plugins/language/lang/ca.js": staticGeneratorCkeditorPluginsLanguageLangCaJs,
	"static/generator/ckeditor/plugins/language/lang/cs.js": staticGeneratorCkeditorPluginsLanguageLangCsJs,
	"static/generator/ckeditor/plugins/language/lang/cy.js": staticGeneratorCkeditorPluginsLanguageLangCyJs,
	"static/generator/ckeditor/plugins/language/lang/da.js": staticGeneratorCkeditorPluginsLanguageLangDaJs,
	"static/generator/ckeditor/plugins/language/lang/de-ch.js": staticGeneratorCkeditorPluginsLanguageLangDeChJs,
	"static/generator/ckeditor/plugins/language/lang/de.js": staticGeneratorCkeditorPluginsLanguageLangDeJs,
	"static/generator/ckeditor/plugins/language/lang/el.js": staticGeneratorCkeditorPluginsLanguageLangElJs,
	"static/generator/ckeditor/plugins/language/lang/en-gb.js": staticGeneratorCkeditorPluginsLanguageLangEnGbJs,
	"static/generator/ckeditor/plugins/language/lang/en.js": staticGeneratorCkeditorPluginsLanguageLangEnJs,
	"static/generator/ckeditor/plugins/language/lang/eo.js": staticGeneratorCkeditorPluginsLanguageLangEoJs,
	"static/generator/ckeditor/plugins/language/lang/es.js": staticGeneratorCkeditorPluginsLanguageLangEsJs,
	"static/generator/ckeditor/plugins/language/lang/eu.js": staticGeneratorCkeditorPluginsLanguageLangEuJs,
	"static/generator/ckeditor/plugins/language/lang/fa.js": staticGeneratorCkeditorPluginsLanguageLangFaJs,
	"static/generator/ckeditor/plugins/language/lang/fi.js": staticGeneratorCkeditorPluginsLanguageLangFiJs,
	"static/generator/ckeditor/plugins/language/lang/fo.js": staticGeneratorCkeditorPluginsLanguageLangFoJs,
	"static/generator/ckeditor/plugins/language/lang/fr.js": staticGeneratorCkeditorPluginsLanguageLangFrJs,
	"static/generator/ckeditor/plugins/language/lang/gl.js": staticGeneratorCkeditorPluginsLanguageLangGlJs,
	"static/generator/ckeditor/plugins/language/lang/he.js": staticGeneratorCkeditorPluginsLanguageLangHeJs,
	"static/generator/ckeditor/plugins/language/lang/hr.js": staticGeneratorCkeditorPluginsLanguageLangHrJs,
	"static/generator/ckeditor/plugins/language/lang/hu.js": staticGeneratorCkeditorPluginsLanguageLangHuJs,
	"static/generator/ckeditor/plugins/language/lang/id.js": staticGeneratorCkeditorPluginsLanguageLangIdJs,
	"static/generator/ckeditor/plugins/language/lang/it.js": staticGeneratorCkeditorPluginsLanguageLangItJs,
	"static/generator/ckeditor/plugins/language/lang/ja.js": staticGeneratorCkeditorPluginsLanguageLangJaJs,
	"static/generator/ckeditor/plugins/language/lang/km.js": staticGeneratorCkeditorPluginsLanguageLangKmJs,
	"static/generator/ckeditor/plugins/language/lang/ko.js": staticGeneratorCkeditorPluginsLanguageLangKoJs,
	"static/generator/ckeditor/plugins/language/lang/ku.js": staticGeneratorCkeditorPluginsLanguageLangKuJs,
	"static/generator/ckeditor/plugins/language/lang/nb.js": staticGeneratorCkeditorPluginsLanguageLangNbJs,
	"static/generator/ckeditor/plugins/language/lang/nl.js": staticGeneratorCkeditorPluginsLanguageLangNlJs,
	"static/generator/ckeditor/plugins/language/lang/no.js": staticGeneratorCkeditorPluginsLanguageLangNoJs,
	"static/generator/ckeditor/plugins/language/lang/oc.js": staticGeneratorCkeditorPluginsLanguageLangOcJs,
	"static/generator/ckeditor/plugins/language/lang/pl.js": staticGeneratorCkeditorPluginsLanguageLangPlJs,
	"static/generator/ckeditor/plugins/language/lang/pt-br.js": staticGeneratorCkeditorPluginsLanguageLangPtBrJs,
	"static/generator/ckeditor/plugins/language/lang/pt.js": staticGeneratorCkeditorPluginsLanguageLangPtJs,
	"static/generator/ckeditor/plugins/language/lang/ru.js": staticGeneratorCkeditorPluginsLanguageLangRuJs,
	"static/generator/ckeditor/plugins/language/lang/sk.js": staticGeneratorCkeditorPluginsLanguageLangSkJs,
	"static/generator/ckeditor/plugins/language/lang/sl.js": staticGeneratorCkeditorPluginsLanguageLangSlJs,
	"static/generator/ckeditor/plugins/language/lang/sq.js": staticGeneratorCkeditorPluginsLanguageLangSqJs,
	"static/generator/ckeditor/plugins/language/lang/sv.js": staticGeneratorCkeditorPluginsLanguageLangSvJs,
	"static/generator/ckeditor/plugins/language/lang/tr.js": staticGeneratorCkeditorPluginsLanguageLangTrJs,
	"static/generator/ckeditor/plugins/language/lang/tt.js": staticGeneratorCkeditorPluginsLanguageLangTtJs,
	"static/generator/ckeditor/plugins/language/lang/ug.js": staticGeneratorCkeditorPluginsLanguageLangUgJs,
	"static/generator/ckeditor/plugins/language/lang/uk.js": staticGeneratorCkeditorPluginsLanguageLangUkJs,
	"static/generator/ckeditor/plugins/language/lang/vi.js": staticGeneratorCkeditorPluginsLanguageLangViJs,
	"static/generator/ckeditor/plugins/language/lang/zh-cn.js": staticGeneratorCkeditorPluginsLanguageLangZhCnJs,
	"static/generator/ckeditor/plugins/language/lang/zh.js": staticGeneratorCkeditorPluginsLanguageLangZhJs,
	"static/generator/ckeditor/plugins/language/plugin.js": staticGeneratorCkeditorPluginsLanguagePluginJs,
	"static/generator/ckeditor/plugins/link/dialogs/anchor.js": staticGeneratorCkeditorPluginsLinkDialogsAnchorJs,
	"static/generator/ckeditor/plugins/link/dialogs/link.js": staticGeneratorCkeditorPluginsLinkDialogsLinkJs,
	"static/generator/ckeditor/plugins/link/icons/anchor-rtl.png": staticGeneratorCkeditorPluginsLinkIconsAnchorRtlPng,
	"static/generator/ckeditor/plugins/link/icons/anchor.png": staticGeneratorCkeditorPluginsLinkIconsAnchorPng,
	"static/generator/ckeditor/plugins/link/icons/hidpi/anchor-rtl.png": staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorRtlPng,
	"static/generator/ckeditor/plugins/link/icons/hidpi/anchor.png": staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorPng,
	"static/generator/ckeditor/plugins/link/icons/hidpi/link.png": staticGeneratorCkeditorPluginsLinkIconsHidpiLinkPng,
	"static/generator/ckeditor/plugins/link/icons/hidpi/unlink.png": staticGeneratorCkeditorPluginsLinkIconsHidpiUnlinkPng,
	"static/generator/ckeditor/plugins/link/icons/link.png": staticGeneratorCkeditorPluginsLinkIconsLinkPng,
	"static/generator/ckeditor/plugins/link/icons/unlink.png": staticGeneratorCkeditorPluginsLinkIconsUnlinkPng,
	"static/generator/ckeditor/plugins/link/images/anchor.png": staticGeneratorCkeditorPluginsLinkImagesAnchorPng,
	"static/generator/ckeditor/plugins/link/images/hidpi/anchor.png": staticGeneratorCkeditorPluginsLinkImagesHidpiAnchorPng,
	"static/generator/ckeditor/plugins/link/lang/af.js": staticGeneratorCkeditorPluginsLinkLangAfJs,
	"static/generator/ckeditor/plugins/link/lang/ar.js": staticGeneratorCkeditorPluginsLinkLangArJs,
	"static/generator/ckeditor/plugins/link/lang/az.js": staticGeneratorCkeditorPluginsLinkLangAzJs,
	"static/generator/ckeditor/plugins/link/lang/bg.js": staticGeneratorCkeditorPluginsLinkLangBgJs,
	"static/generator/ckeditor/plugins/link/lang/bn.js": staticGeneratorCkeditorPluginsLinkLangBnJs,
	"static/generator/ckeditor/plugins/link/lang/bs.js": staticGeneratorCkeditorPluginsLinkLangBsJs,
	"static/generator/ckeditor/plugins/link/lang/ca.js": staticGeneratorCkeditorPluginsLinkLangCaJs,
	"static/generator/ckeditor/plugins/link/lang/cs.js": staticGeneratorCkeditorPluginsLinkLangCsJs,
	"static/generator/ckeditor/plugins/link/lang/cy.js": staticGeneratorCkeditorPluginsLinkLangCyJs,
	"static/generator/ckeditor/plugins/link/lang/da.js": staticGeneratorCkeditorPluginsLinkLangDaJs,
	"static/generator/ckeditor/plugins/link/lang/de-ch.js": staticGeneratorCkeditorPluginsLinkLangDeChJs,
	"static/generator/ckeditor/plugins/link/lang/de.js": staticGeneratorCkeditorPluginsLinkLangDeJs,
	"static/generator/ckeditor/plugins/link/lang/el.js": staticGeneratorCkeditorPluginsLinkLangElJs,
	"static/generator/ckeditor/plugins/link/lang/en-au.js": staticGeneratorCkeditorPluginsLinkLangEnAuJs,
	"static/generator/ckeditor/plugins/link/lang/en-ca.js": staticGeneratorCkeditorPluginsLinkLangEnCaJs,
	"static/generator/ckeditor/plugins/link/lang/en-gb.js": staticGeneratorCkeditorPluginsLinkLangEnGbJs,
	"static/generator/ckeditor/plugins/link/lang/en.js": staticGeneratorCkeditorPluginsLinkLangEnJs,
	"static/generator/ckeditor/plugins/link/lang/eo.js": staticGeneratorCkeditorPluginsLinkLangEoJs,
	"static/generator/ckeditor/plugins/link/lang/es.js": staticGeneratorCkeditorPluginsLinkLangEsJs,
	"static/generator/ckeditor/plugins/link/lang/et.js": staticGeneratorCkeditorPluginsLinkLangEtJs,
	"static/generator/ckeditor/plugins/link/lang/eu.js": staticGeneratorCkeditorPluginsLinkLangEuJs,
	"static/generator/ckeditor/plugins/link/lang/fa.js": staticGeneratorCkeditorPluginsLinkLangFaJs,
	"static/generator/ckeditor/plugins/link/lang/fi.js": staticGeneratorCkeditorPluginsLinkLangFiJs,
	"static/generator/ckeditor/plugins/link/lang/fo.js": staticGeneratorCkeditorPluginsLinkLangFoJs,
	"static/generator/ckeditor/plugins/link/lang/fr-ca.js": staticGeneratorCkeditorPluginsLinkLangFrCaJs,
	"static/generator/ckeditor/plugins/link/lang/fr.js": staticGeneratorCkeditorPluginsLinkLangFrJs,
	"static/generator/ckeditor/plugins/link/lang/gl.js": staticGeneratorCkeditorPluginsLinkLangGlJs,
	"static/generator/ckeditor/plugins/link/lang/gu.js": staticGeneratorCkeditorPluginsLinkLangGuJs,
	"static/generator/ckeditor/plugins/link/lang/he.js": staticGeneratorCkeditorPluginsLinkLangHeJs,
	"static/generator/ckeditor/plugins/link/lang/hi.js": staticGeneratorCkeditorPluginsLinkLangHiJs,
	"static/generator/ckeditor/plugins/link/lang/hr.js": staticGeneratorCkeditorPluginsLinkLangHrJs,
	"static/generator/ckeditor/plugins/link/lang/hu.js": staticGeneratorCkeditorPluginsLinkLangHuJs,
	"static/generator/ckeditor/plugins/link/lang/id.js": staticGeneratorCkeditorPluginsLinkLangIdJs,
	"static/generator/ckeditor/plugins/link/lang/is.js": staticGeneratorCkeditorPluginsLinkLangIsJs,
	"static/generator/ckeditor/plugins/link/lang/it.js": staticGeneratorCkeditorPluginsLinkLangItJs,
	"static/generator/ckeditor/plugins/link/lang/ja.js": staticGeneratorCkeditorPluginsLinkLangJaJs,
	"static/generator/ckeditor/plugins/link/lang/ka.js": staticGeneratorCkeditorPluginsLinkLangKaJs,
	"static/generator/ckeditor/plugins/link/lang/km.js": staticGeneratorCkeditorPluginsLinkLangKmJs,
	"static/generator/ckeditor/plugins/link/lang/ko.js": staticGeneratorCkeditorPluginsLinkLangKoJs,
	"static/generator/ckeditor/plugins/link/lang/ku.js": staticGeneratorCkeditorPluginsLinkLangKuJs,
	"static/generator/ckeditor/plugins/link/lang/lt.js": staticGeneratorCkeditorPluginsLinkLangLtJs,
	"static/generator/ckeditor/plugins/link/lang/lv.js": staticGeneratorCkeditorPluginsLinkLangLvJs,
	"static/generator/ckeditor/plugins/link/lang/mk.js": staticGeneratorCkeditorPluginsLinkLangMkJs,
	"static/generator/ckeditor/plugins/link/lang/mn.js": staticGeneratorCkeditorPluginsLinkLangMnJs,
	"static/generator/ckeditor/plugins/link/lang/ms.js": staticGeneratorCkeditorPluginsLinkLangMsJs,
	"static/generator/ckeditor/plugins/link/lang/nb.js": staticGeneratorCkeditorPluginsLinkLangNbJs,
	"static/generator/ckeditor/plugins/link/lang/nl.js": staticGeneratorCkeditorPluginsLinkLangNlJs,
	"static/generator/ckeditor/plugins/link/lang/no.js": staticGeneratorCkeditorPluginsLinkLangNoJs,
	"static/generator/ckeditor/plugins/link/lang/oc.js": staticGeneratorCkeditorPluginsLinkLangOcJs,
	"static/generator/ckeditor/plugins/link/lang/pl.js": staticGeneratorCkeditorPluginsLinkLangPlJs,
	"static/generator/ckeditor/plugins/link/lang/pt-br.js": staticGeneratorCkeditorPluginsLinkLangPtBrJs,
	"static/generator/ckeditor/plugins/link/lang/pt.js": staticGeneratorCkeditorPluginsLinkLangPtJs,
	"static/generator/ckeditor/plugins/link/lang/ro.js": staticGeneratorCkeditorPluginsLinkLangRoJs,
	"static/generator/ckeditor/plugins/link/lang/ru.js": staticGeneratorCkeditorPluginsLinkLangRuJs,
	"static/generator/ckeditor/plugins/link/lang/si.js": staticGeneratorCkeditorPluginsLinkLangSiJs,
	"static/generator/ckeditor/plugins/link/lang/sk.js": staticGeneratorCkeditorPluginsLinkLangSkJs,
	"static/generator/ckeditor/plugins/link/lang/sl.js": staticGeneratorCkeditorPluginsLinkLangSlJs,
	"static/generator/ckeditor/plugins/link/lang/sq.js": staticGeneratorCkeditorPluginsLinkLangSqJs,
	"static/generator/ckeditor/plugins/link/lang/sr-latn.js": staticGeneratorCkeditorPluginsLinkLangSrLatnJs,
	"static/generator/ckeditor/plugins/link/lang/sr.js": staticGeneratorCkeditorPluginsLinkLangSrJs,
	"static/generator/ckeditor/plugins/link/lang/sv.js": staticGeneratorCkeditorPluginsLinkLangSvJs,
	"static/generator/ckeditor/plugins/link/lang/th.js": staticGeneratorCkeditorPluginsLinkLangThJs,
	"static/generator/ckeditor/plugins/link/lang/tr.js": staticGeneratorCkeditorPluginsLinkLangTrJs,
	"static/generator/ckeditor/plugins/link/lang/tt.js": staticGeneratorCkeditorPluginsLinkLangTtJs,
	"static/generator/ckeditor/plugins/link/lang/ug.js": staticGeneratorCkeditorPluginsLinkLangUgJs,
	"static/generator/ckeditor/plugins/link/lang/uk.js": staticGeneratorCkeditorPluginsLinkLangUkJs,
	"static/generator/ckeditor/plugins/link/lang/vi.js": staticGeneratorCkeditorPluginsLinkLangViJs,
	"static/generator/ckeditor/plugins/link/lang/zh-cn.js": staticGeneratorCkeditorPluginsLinkLangZhCnJs,
	"static/generator/ckeditor/plugins/link/lang/zh.js": staticGeneratorCkeditorPluginsLinkLangZhJs,
	"static/generator/ckeditor/plugins/link/plugin.js": staticGeneratorCkeditorPluginsLinkPluginJs,
	"static/generator/ckeditor/plugins/list/icons/bulletedlist-rtl.png": staticGeneratorCkeditorPluginsListIconsBulletedlistRtlPng,
	"static/generator/ckeditor/plugins/list/icons/bulletedlist.png": staticGeneratorCkeditorPluginsListIconsBulletedlistPng,
	"static/generator/ckeditor/plugins/list/icons/hidpi/bulletedlist-rtl.png": staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistRtlPng,
	"static/generator/ckeditor/plugins/list/icons/hidpi/bulletedlist.png": staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistPng,
	"static/generator/ckeditor/plugins/list/icons/hidpi/numberedlist-rtl.png": staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistRtlPng,
	"static/generator/ckeditor/plugins/list/icons/hidpi/numberedlist.png": staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistPng,
	"static/generator/ckeditor/plugins/list/icons/numberedlist-rtl.png": staticGeneratorCkeditorPluginsListIconsNumberedlistRtlPng,
	"static/generator/ckeditor/plugins/list/icons/numberedlist.png": staticGeneratorCkeditorPluginsListIconsNumberedlistPng,
	"static/generator/ckeditor/plugins/list/lang/af.js": staticGeneratorCkeditorPluginsListLangAfJs,
	"static/generator/ckeditor/plugins/list/lang/ar.js": staticGeneratorCkeditorPluginsListLangArJs,
	"static/generator/ckeditor/plugins/list/lang/az.js": staticGeneratorCkeditorPluginsListLangAzJs,
	"static/generator/ckeditor/plugins/list/lang/bg.js": staticGeneratorCkeditorPluginsListLangBgJs,
	"static/generator/ckeditor/plugins/list/lang/bn.js": staticGeneratorCkeditorPluginsListLangBnJs,
	"static/generator/ckeditor/plugins/list/lang/bs.js": staticGeneratorCkeditorPluginsListLangBsJs,
	"static/generator/ckeditor/plugins/list/lang/ca.js": staticGeneratorCkeditorPluginsListLangCaJs,
	"static/generator/ckeditor/plugins/list/lang/cs.js": staticGeneratorCkeditorPluginsListLangCsJs,
	"static/generator/ckeditor/plugins/list/lang/cy.js": staticGeneratorCkeditorPluginsListLangCyJs,
	"static/generator/ckeditor/plugins/list/lang/da.js": staticGeneratorCkeditorPluginsListLangDaJs,
	"static/generator/ckeditor/plugins/list/lang/de-ch.js": staticGeneratorCkeditorPluginsListLangDeChJs,
	"static/generator/ckeditor/plugins/list/lang/de.js": staticGeneratorCkeditorPluginsListLangDeJs,
	"static/generator/ckeditor/plugins/list/lang/el.js": staticGeneratorCkeditorPluginsListLangElJs,
	"static/generator/ckeditor/plugins/list/lang/en-au.js": staticGeneratorCkeditorPluginsListLangEnAuJs,
	"static/generator/ckeditor/plugins/list/lang/en-ca.js": staticGeneratorCkeditorPluginsListLangEnCaJs,
	"static/generator/ckeditor/plugins/list/lang/en-gb.js": staticGeneratorCkeditorPluginsListLangEnGbJs,
	"static/generator/ckeditor/plugins/list/lang/en.js": staticGeneratorCkeditorPluginsListLangEnJs,
	"static/generator/ckeditor/plugins/list/lang/eo.js": staticGeneratorCkeditorPluginsListLangEoJs,
	"static/generator/ckeditor/plugins/list/lang/es.js": staticGeneratorCkeditorPluginsListLangEsJs,
	"static/generator/ckeditor/plugins/list/lang/et.js": staticGeneratorCkeditorPluginsListLangEtJs,
	"static/generator/ckeditor/plugins/list/lang/eu.js": staticGeneratorCkeditorPluginsListLangEuJs,
	"static/generator/ckeditor/plugins/list/lang/fa.js": staticGeneratorCkeditorPluginsListLangFaJs,
	"static/generator/ckeditor/plugins/list/lang/fi.js": staticGeneratorCkeditorPluginsListLangFiJs,
	"static/generator/ckeditor/plugins/list/lang/fo.js": staticGeneratorCkeditorPluginsListLangFoJs,
	"static/generator/ckeditor/plugins/list/lang/fr-ca.js": staticGeneratorCkeditorPluginsListLangFrCaJs,
	"static/generator/ckeditor/plugins/list/lang/fr.js": staticGeneratorCkeditorPluginsListLangFrJs,
	"static/generator/ckeditor/plugins/list/lang/gl.js": staticGeneratorCkeditorPluginsListLangGlJs,
	"static/generator/ckeditor/plugins/list/lang/gu.js": staticGeneratorCkeditorPluginsListLangGuJs,
	"static/generator/ckeditor/plugins/list/lang/he.js": staticGeneratorCkeditorPluginsListLangHeJs,
	"static/generator/ckeditor/plugins/list/lang/hi.js": staticGeneratorCkeditorPluginsListLangHiJs,
	"static/generator/ckeditor/plugins/list/lang/hr.js": staticGeneratorCkeditorPluginsListLangHrJs,
	"static/generator/ckeditor/plugins/list/lang/hu.js": staticGeneratorCkeditorPluginsListLangHuJs,
	"static/generator/ckeditor/plugins/list/lang/id.js": staticGeneratorCkeditorPluginsListLangIdJs,
	"static/generator/ckeditor/plugins/list/lang/is.js": staticGeneratorCkeditorPluginsListLangIsJs,
	"static/generator/ckeditor/plugins/list/lang/it.js": staticGeneratorCkeditorPluginsListLangItJs,
	"static/generator/ckeditor/plugins/list/lang/ja.js": staticGeneratorCkeditorPluginsListLangJaJs,
	"static/generator/ckeditor/plugins/list/lang/ka.js": staticGeneratorCkeditorPluginsListLangKaJs,
	"static/generator/ckeditor/plugins/list/lang/km.js": staticGeneratorCkeditorPluginsListLangKmJs,
	"static/generator/ckeditor/plugins/list/lang/ko.js": staticGeneratorCkeditorPluginsListLangKoJs,
	"static/generator/ckeditor/plugins/list/lang/ku.js": staticGeneratorCkeditorPluginsListLangKuJs,
	"static/generator/ckeditor/plugins/list/lang/lt.js": staticGeneratorCkeditorPluginsListLangLtJs,
	"static/generator/ckeditor/plugins/list/lang/lv.js": staticGeneratorCkeditorPluginsListLangLvJs,
	"static/generator/ckeditor/plugins/list/lang/mk.js": staticGeneratorCkeditorPluginsListLangMkJs,
	"static/generator/ckeditor/plugins/list/lang/mn.js": staticGeneratorCkeditorPluginsListLangMnJs,
	"static/generator/ckeditor/plugins/list/lang/ms.js": staticGeneratorCkeditorPluginsListLangMsJs,
	"static/generator/ckeditor/plugins/list/lang/nb.js": staticGeneratorCkeditorPluginsListLangNbJs,
	"static/generator/ckeditor/plugins/list/lang/nl.js": staticGeneratorCkeditorPluginsListLangNlJs,
	"static/generator/ckeditor/plugins/list/lang/no.js": staticGeneratorCkeditorPluginsListLangNoJs,
	"static/generator/ckeditor/plugins/list/lang/oc.js": staticGeneratorCkeditorPluginsListLangOcJs,
	"static/generator/ckeditor/plugins/list/lang/pl.js": staticGeneratorCkeditorPluginsListLangPlJs,
	"static/generator/ckeditor/plugins/list/lang/pt-br.js": staticGeneratorCkeditorPluginsListLangPtBrJs,
	"static/generator/ckeditor/plugins/list/lang/pt.js": staticGeneratorCkeditorPluginsListLangPtJs,
	"static/generator/ckeditor/plugins/list/lang/ro.js": staticGeneratorCkeditorPluginsListLangRoJs,
	"static/generator/ckeditor/plugins/list/lang/ru.js": staticGeneratorCkeditorPluginsListLangRuJs,
	"static/generator/ckeditor/plugins/list/lang/si.js": staticGeneratorCkeditorPluginsListLangSiJs,
	"static/generator/ckeditor/plugins/list/lang/sk.js": staticGeneratorCkeditorPluginsListLangSkJs,
	"static/generator/ckeditor/plugins/list/lang/sl.js": staticGeneratorCkeditorPluginsListLangSlJs,
	"static/generator/ckeditor/plugins/list/lang/sq.js": staticGeneratorCkeditorPluginsListLangSqJs,
	"static/generator/ckeditor/plugins/list/lang/sr-latn.js": staticGeneratorCkeditorPluginsListLangSrLatnJs,
	"static/generator/ckeditor/plugins/list/lang/sr.js": staticGeneratorCkeditorPluginsListLangSrJs,
	"static/generator/ckeditor/plugins/list/lang/sv.js": staticGeneratorCkeditorPluginsListLangSvJs,
	"static/generator/ckeditor/plugins/list/lang/th.js": staticGeneratorCkeditorPluginsListLangThJs,
	"static/generator/ckeditor/plugins/list/lang/tr.js": staticGeneratorCkeditorPluginsListLangTrJs,
	"static/generator/ckeditor/plugins/list/lang/tt.js": staticGeneratorCkeditorPluginsListLangTtJs,
	"static/generator/ckeditor/plugins/list/lang/ug.js": staticGeneratorCkeditorPluginsListLangUgJs,
	"static/generator/ckeditor/plugins/list/lang/uk.js": staticGeneratorCkeditorPluginsListLangUkJs,
	"static/generator/ckeditor/plugins/list/lang/vi.js": staticGeneratorCkeditorPluginsListLangViJs,
	"static/generator/ckeditor/plugins/list/lang/zh-cn.js": staticGeneratorCkeditorPluginsListLangZhCnJs,
	"static/generator/ckeditor/plugins/list/lang/zh.js": staticGeneratorCkeditorPluginsListLangZhJs,
	"static/generator/ckeditor/plugins/list/plugin.js": staticGeneratorCkeditorPluginsListPluginJs,
	"static/generator/ckeditor/plugins/listblock/plugin.js": staticGeneratorCkeditorPluginsListblockPluginJs,
	"static/generator/ckeditor/plugins/liststyle/dialogs/liststyle.js": staticGeneratorCkeditorPluginsListstyleDialogsListstyleJs,
	"static/generator/ckeditor/plugins/liststyle/lang/af.js": staticGeneratorCkeditorPluginsListstyleLangAfJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ar.js": staticGeneratorCkeditorPluginsListstyleLangArJs,
	"static/generator/ckeditor/plugins/liststyle/lang/az.js": staticGeneratorCkeditorPluginsListstyleLangAzJs,
	"static/generator/ckeditor/plugins/liststyle/lang/bg.js": staticGeneratorCkeditorPluginsListstyleLangBgJs,
	"static/generator/ckeditor/plugins/liststyle/lang/bn.js": staticGeneratorCkeditorPluginsListstyleLangBnJs,
	"static/generator/ckeditor/plugins/liststyle/lang/bs.js": staticGeneratorCkeditorPluginsListstyleLangBsJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ca.js": staticGeneratorCkeditorPluginsListstyleLangCaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/cs.js": staticGeneratorCkeditorPluginsListstyleLangCsJs,
	"static/generator/ckeditor/plugins/liststyle/lang/cy.js": staticGeneratorCkeditorPluginsListstyleLangCyJs,
	"static/generator/ckeditor/plugins/liststyle/lang/da.js": staticGeneratorCkeditorPluginsListstyleLangDaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/de-ch.js": staticGeneratorCkeditorPluginsListstyleLangDeChJs,
	"static/generator/ckeditor/plugins/liststyle/lang/de.js": staticGeneratorCkeditorPluginsListstyleLangDeJs,
	"static/generator/ckeditor/plugins/liststyle/lang/el.js": staticGeneratorCkeditorPluginsListstyleLangElJs,
	"static/generator/ckeditor/plugins/liststyle/lang/en-au.js": staticGeneratorCkeditorPluginsListstyleLangEnAuJs,
	"static/generator/ckeditor/plugins/liststyle/lang/en-ca.js": staticGeneratorCkeditorPluginsListstyleLangEnCaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/en-gb.js": staticGeneratorCkeditorPluginsListstyleLangEnGbJs,
	"static/generator/ckeditor/plugins/liststyle/lang/en.js": staticGeneratorCkeditorPluginsListstyleLangEnJs,
	"static/generator/ckeditor/plugins/liststyle/lang/eo.js": staticGeneratorCkeditorPluginsListstyleLangEoJs,
	"static/generator/ckeditor/plugins/liststyle/lang/es.js": staticGeneratorCkeditorPluginsListstyleLangEsJs,
	"static/generator/ckeditor/plugins/liststyle/lang/et.js": staticGeneratorCkeditorPluginsListstyleLangEtJs,
	"static/generator/ckeditor/plugins/liststyle/lang/eu.js": staticGeneratorCkeditorPluginsListstyleLangEuJs,
	"static/generator/ckeditor/plugins/liststyle/lang/fa.js": staticGeneratorCkeditorPluginsListstyleLangFaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/fi.js": staticGeneratorCkeditorPluginsListstyleLangFiJs,
	"static/generator/ckeditor/plugins/liststyle/lang/fo.js": staticGeneratorCkeditorPluginsListstyleLangFoJs,
	"static/generator/ckeditor/plugins/liststyle/lang/fr-ca.js": staticGeneratorCkeditorPluginsListstyleLangFrCaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/fr.js": staticGeneratorCkeditorPluginsListstyleLangFrJs,
	"static/generator/ckeditor/plugins/liststyle/lang/gl.js": staticGeneratorCkeditorPluginsListstyleLangGlJs,
	"static/generator/ckeditor/plugins/liststyle/lang/gu.js": staticGeneratorCkeditorPluginsListstyleLangGuJs,
	"static/generator/ckeditor/plugins/liststyle/lang/he.js": staticGeneratorCkeditorPluginsListstyleLangHeJs,
	"static/generator/ckeditor/plugins/liststyle/lang/hi.js": staticGeneratorCkeditorPluginsListstyleLangHiJs,
	"static/generator/ckeditor/plugins/liststyle/lang/hr.js": staticGeneratorCkeditorPluginsListstyleLangHrJs,
	"static/generator/ckeditor/plugins/liststyle/lang/hu.js": staticGeneratorCkeditorPluginsListstyleLangHuJs,
	"static/generator/ckeditor/plugins/liststyle/lang/id.js": staticGeneratorCkeditorPluginsListstyleLangIdJs,
	"static/generator/ckeditor/plugins/liststyle/lang/is.js": staticGeneratorCkeditorPluginsListstyleLangIsJs,
	"static/generator/ckeditor/plugins/liststyle/lang/it.js": staticGeneratorCkeditorPluginsListstyleLangItJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ja.js": staticGeneratorCkeditorPluginsListstyleLangJaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ka.js": staticGeneratorCkeditorPluginsListstyleLangKaJs,
	"static/generator/ckeditor/plugins/liststyle/lang/km.js": staticGeneratorCkeditorPluginsListstyleLangKmJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ko.js": staticGeneratorCkeditorPluginsListstyleLangKoJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ku.js": staticGeneratorCkeditorPluginsListstyleLangKuJs,
	"static/generator/ckeditor/plugins/liststyle/lang/lt.js": staticGeneratorCkeditorPluginsListstyleLangLtJs,
	"static/generator/ckeditor/plugins/liststyle/lang/lv.js": staticGeneratorCkeditorPluginsListstyleLangLvJs,
	"static/generator/ckeditor/plugins/liststyle/lang/mk.js": staticGeneratorCkeditorPluginsListstyleLangMkJs,
	"static/generator/ckeditor/plugins/liststyle/lang/mn.js": staticGeneratorCkeditorPluginsListstyleLangMnJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ms.js": staticGeneratorCkeditorPluginsListstyleLangMsJs,
	"static/generator/ckeditor/plugins/liststyle/lang/nb.js": staticGeneratorCkeditorPluginsListstyleLangNbJs,
	"static/generator/ckeditor/plugins/liststyle/lang/nl.js": staticGeneratorCkeditorPluginsListstyleLangNlJs,
	"static/generator/ckeditor/plugins/liststyle/lang/no.js": staticGeneratorCkeditorPluginsListstyleLangNoJs,
	"static/generator/ckeditor/plugins/liststyle/lang/oc.js": staticGeneratorCkeditorPluginsListstyleLangOcJs,
	"static/generator/ckeditor/plugins/liststyle/lang/pl.js": staticGeneratorCkeditorPluginsListstyleLangPlJs,
	"static/generator/ckeditor/plugins/liststyle/lang/pt-br.js": staticGeneratorCkeditorPluginsListstyleLangPtBrJs,
	"static/generator/ckeditor/plugins/liststyle/lang/pt.js": staticGeneratorCkeditorPluginsListstyleLangPtJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ro.js": staticGeneratorCkeditorPluginsListstyleLangRoJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ru.js": staticGeneratorCkeditorPluginsListstyleLangRuJs,
	"static/generator/ckeditor/plugins/liststyle/lang/si.js": staticGeneratorCkeditorPluginsListstyleLangSiJs,
	"static/generator/ckeditor/plugins/liststyle/lang/sk.js": staticGeneratorCkeditorPluginsListstyleLangSkJs,
	"static/generator/ckeditor/plugins/liststyle/lang/sl.js": staticGeneratorCkeditorPluginsListstyleLangSlJs,
	"static/generator/ckeditor/plugins/liststyle/lang/sq.js": staticGeneratorCkeditorPluginsListstyleLangSqJs,
	"static/generator/ckeditor/plugins/liststyle/lang/sr-latn.js": staticGeneratorCkeditorPluginsListstyleLangSrLatnJs,
	"static/generator/ckeditor/plugins/liststyle/lang/sr.js": staticGeneratorCkeditorPluginsListstyleLangSrJs,
	"static/generator/ckeditor/plugins/liststyle/lang/sv.js": staticGeneratorCkeditorPluginsListstyleLangSvJs,
	"static/generator/ckeditor/plugins/liststyle/lang/th.js": staticGeneratorCkeditorPluginsListstyleLangThJs,
	"static/generator/ckeditor/plugins/liststyle/lang/tr.js": staticGeneratorCkeditorPluginsListstyleLangTrJs,
	"static/generator/ckeditor/plugins/liststyle/lang/tt.js": staticGeneratorCkeditorPluginsListstyleLangTtJs,
	"static/generator/ckeditor/plugins/liststyle/lang/ug.js": staticGeneratorCkeditorPluginsListstyleLangUgJs,
	"static/generator/ckeditor/plugins/liststyle/lang/uk.js": staticGeneratorCkeditorPluginsListstyleLangUkJs,
	"static/generator/ckeditor/plugins/liststyle/lang/vi.js": staticGeneratorCkeditorPluginsListstyleLangViJs,
	"static/generator/ckeditor/plugins/liststyle/lang/zh-cn.js": staticGeneratorCkeditorPluginsListstyleLangZhCnJs,
	"static/generator/ckeditor/plugins/liststyle/lang/zh.js": staticGeneratorCkeditorPluginsListstyleLangZhJs,
	"static/generator/ckeditor/plugins/liststyle/plugin.js": staticGeneratorCkeditorPluginsListstylePluginJs,
	"static/generator/ckeditor/plugins/magicline/dev/magicline.html": staticGeneratorCkeditorPluginsMagiclineDevMagiclineHtml,
	"static/generator/ckeditor/plugins/magicline/images/hidpi/icon-rtl.png": staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconRtlPng,
	"static/generator/ckeditor/plugins/magicline/images/hidpi/icon.png": staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconPng,
	"static/generator/ckeditor/plugins/magicline/images/icon-rtl.png": staticGeneratorCkeditorPluginsMagiclineImagesIconRtlPng,
	"static/generator/ckeditor/plugins/magicline/images/icon.png": staticGeneratorCkeditorPluginsMagiclineImagesIconPng,
	"static/generator/ckeditor/plugins/magicline/lang/af.js": staticGeneratorCkeditorPluginsMagiclineLangAfJs,
	"static/generator/ckeditor/plugins/magicline/lang/ar.js": staticGeneratorCkeditorPluginsMagiclineLangArJs,
	"static/generator/ckeditor/plugins/magicline/lang/az.js": staticGeneratorCkeditorPluginsMagiclineLangAzJs,
	"static/generator/ckeditor/plugins/magicline/lang/bg.js": staticGeneratorCkeditorPluginsMagiclineLangBgJs,
	"static/generator/ckeditor/plugins/magicline/lang/ca.js": staticGeneratorCkeditorPluginsMagiclineLangCaJs,
	"static/generator/ckeditor/plugins/magicline/lang/cs.js": staticGeneratorCkeditorPluginsMagiclineLangCsJs,
	"static/generator/ckeditor/plugins/magicline/lang/cy.js": staticGeneratorCkeditorPluginsMagiclineLangCyJs,
	"static/generator/ckeditor/plugins/magicline/lang/da.js": staticGeneratorCkeditorPluginsMagiclineLangDaJs,
	"static/generator/ckeditor/plugins/magicline/lang/de-ch.js": staticGeneratorCkeditorPluginsMagiclineLangDeChJs,
	"static/generator/ckeditor/plugins/magicline/lang/de.js": staticGeneratorCkeditorPluginsMagiclineLangDeJs,
	"static/generator/ckeditor/plugins/magicline/lang/el.js": staticGeneratorCkeditorPluginsMagiclineLangElJs,
	"static/generator/ckeditor/plugins/magicline/lang/en-gb.js": staticGeneratorCkeditorPluginsMagiclineLangEnGbJs,
	"static/generator/ckeditor/plugins/magicline/lang/en.js": staticGeneratorCkeditorPluginsMagiclineLangEnJs,
	"static/generator/ckeditor/plugins/magicline/lang/eo.js": staticGeneratorCkeditorPluginsMagiclineLangEoJs,
	"static/generator/ckeditor/plugins/magicline/lang/es.js": staticGeneratorCkeditorPluginsMagiclineLangEsJs,
	"static/generator/ckeditor/plugins/magicline/lang/et.js": staticGeneratorCkeditorPluginsMagiclineLangEtJs,
	"static/generator/ckeditor/plugins/magicline/lang/eu.js": staticGeneratorCkeditorPluginsMagiclineLangEuJs,
	"static/generator/ckeditor/plugins/magicline/lang/fa.js": staticGeneratorCkeditorPluginsMagiclineLangFaJs,
	"static/generator/ckeditor/plugins/magicline/lang/fi.js": staticGeneratorCkeditorPluginsMagiclineLangFiJs,
	"static/generator/ckeditor/plugins/magicline/lang/fr-ca.js": staticGeneratorCkeditorPluginsMagiclineLangFrCaJs,
	"static/generator/ckeditor/plugins/magicline/lang/fr.js": staticGeneratorCkeditorPluginsMagiclineLangFrJs,
	"static/generator/ckeditor/plugins/magicline/lang/gl.js": staticGeneratorCkeditorPluginsMagiclineLangGlJs,
	"static/generator/ckeditor/plugins/magicline/lang/he.js": staticGeneratorCkeditorPluginsMagiclineLangHeJs,
	"static/generator/ckeditor/plugins/magicline/lang/hr.js": staticGeneratorCkeditorPluginsMagiclineLangHrJs,
	"static/generator/ckeditor/plugins/magicline/lang/hu.js": staticGeneratorCkeditorPluginsMagiclineLangHuJs,
	"static/generator/ckeditor/plugins/magicline/lang/id.js": staticGeneratorCkeditorPluginsMagiclineLangIdJs,
	"static/generator/ckeditor/plugins/magicline/lang/it.js": staticGeneratorCkeditorPluginsMagiclineLangItJs,
	"static/generator/ckeditor/plugins/magicline/lang/ja.js": staticGeneratorCkeditorPluginsMagiclineLangJaJs,
	"static/generator/ckeditor/plugins/magicline/lang/km.js": staticGeneratorCkeditorPluginsMagiclineLangKmJs,
	"static/generator/ckeditor/plugins/magicline/lang/ko.js": staticGeneratorCkeditorPluginsMagiclineLangKoJs,
	"static/generator/ckeditor/plugins/magicline/lang/ku.js": staticGeneratorCkeditorPluginsMagiclineLangKuJs,
	"static/generator/ckeditor/plugins/magicline/lang/lv.js": staticGeneratorCkeditorPluginsMagiclineLangLvJs,
	"static/generator/ckeditor/plugins/magicline/lang/nb.js": staticGeneratorCkeditorPluginsMagiclineLangNbJs,
	"static/generator/ckeditor/plugins/magicline/lang/nl.js": staticGeneratorCkeditorPluginsMagiclineLangNlJs,
	"static/generator/ckeditor/plugins/magicline/lang/no.js": staticGeneratorCkeditorPluginsMagiclineLangNoJs,
	"static/generator/ckeditor/plugins/magicline/lang/oc.js": staticGeneratorCkeditorPluginsMagiclineLangOcJs,
	"static/generator/ckeditor/plugins/magicline/lang/pl.js": staticGeneratorCkeditorPluginsMagiclineLangPlJs,
	"static/generator/ckeditor/plugins/magicline/lang/pt-br.js": staticGeneratorCkeditorPluginsMagiclineLangPtBrJs,
	"static/generator/ckeditor/plugins/magicline/lang/pt.js": staticGeneratorCkeditorPluginsMagiclineLangPtJs,
	"static/generator/ckeditor/plugins/magicline/lang/ru.js": staticGeneratorCkeditorPluginsMagiclineLangRuJs,
	"static/generator/ckeditor/plugins/magicline/lang/si.js": staticGeneratorCkeditorPluginsMagiclineLangSiJs,
	"static/generator/ckeditor/plugins/magicline/lang/sk.js": staticGeneratorCkeditorPluginsMagiclineLangSkJs,
	"static/generator/ckeditor/plugins/magicline/lang/sl.js": staticGeneratorCkeditorPluginsMagiclineLangSlJs,
	"static/generator/ckeditor/plugins/magicline/lang/sq.js": staticGeneratorCkeditorPluginsMagiclineLangSqJs,
	"static/generator/ckeditor/plugins/magicline/lang/sv.js": staticGeneratorCkeditorPluginsMagiclineLangSvJs,
	"static/generator/ckeditor/plugins/magicline/lang/tr.js": staticGeneratorCkeditorPluginsMagiclineLangTrJs,
	"static/generator/ckeditor/plugins/magicline/lang/tt.js": staticGeneratorCkeditorPluginsMagiclineLangTtJs,
	"static/generator/ckeditor/plugins/magicline/lang/ug.js": staticGeneratorCkeditorPluginsMagiclineLangUgJs,
	"static/generator/ckeditor/plugins/magicline/lang/uk.js": staticGeneratorCkeditorPluginsMagiclineLangUkJs,
	"static/generator/ckeditor/plugins/magicline/lang/vi.js": staticGeneratorCkeditorPluginsMagiclineLangViJs,
	"static/generator/ckeditor/plugins/magicline/lang/zh-cn.js": staticGeneratorCkeditorPluginsMagiclineLangZhCnJs,
	"static/generator/ckeditor/plugins/magicline/lang/zh.js": staticGeneratorCkeditorPluginsMagiclineLangZhJs,
	"static/generator/ckeditor/plugins/magicline/plugin.js": staticGeneratorCkeditorPluginsMagiclinePluginJs,
	"static/generator/ckeditor/plugins/magicline/samples/magicline.html": staticGeneratorCkeditorPluginsMagiclineSamplesMagiclineHtml,
	"static/generator/ckeditor/plugins/maximize/icons/hidpi/maximize.png": staticGeneratorCkeditorPluginsMaximizeIconsHidpiMaximizePng,
	"static/generator/ckeditor/plugins/maximize/icons/maximize.png": staticGeneratorCkeditorPluginsMaximizeIconsMaximizePng,
	"static/generator/ckeditor/plugins/maximize/lang/af.js": staticGeneratorCkeditorPluginsMaximizeLangAfJs,
	"static/generator/ckeditor/plugins/maximize/lang/ar.js": staticGeneratorCkeditorPluginsMaximizeLangArJs,
	"static/generator/ckeditor/plugins/maximize/lang/az.js": staticGeneratorCkeditorPluginsMaximizeLangAzJs,
	"static/generator/ckeditor/plugins/maximize/lang/bg.js": staticGeneratorCkeditorPluginsMaximizeLangBgJs,
	"static/generator/ckeditor/plugins/maximize/lang/bn.js": staticGeneratorCkeditorPluginsMaximizeLangBnJs,
	"static/generator/ckeditor/plugins/maximize/lang/bs.js": staticGeneratorCkeditorPluginsMaximizeLangBsJs,
	"static/generator/ckeditor/plugins/maximize/lang/ca.js": staticGeneratorCkeditorPluginsMaximizeLangCaJs,
	"static/generator/ckeditor/plugins/maximize/lang/cs.js": staticGeneratorCkeditorPluginsMaximizeLangCsJs,
	"static/generator/ckeditor/plugins/maximize/lang/cy.js": staticGeneratorCkeditorPluginsMaximizeLangCyJs,
	"static/generator/ckeditor/plugins/maximize/lang/da.js": staticGeneratorCkeditorPluginsMaximizeLangDaJs,
	"static/generator/ckeditor/plugins/maximize/lang/de-ch.js": staticGeneratorCkeditorPluginsMaximizeLangDeChJs,
	"static/generator/ckeditor/plugins/maximize/lang/de.js": staticGeneratorCkeditorPluginsMaximizeLangDeJs,
	"static/generator/ckeditor/plugins/maximize/lang/el.js": staticGeneratorCkeditorPluginsMaximizeLangElJs,
	"static/generator/ckeditor/plugins/maximize/lang/en-au.js": staticGeneratorCkeditorPluginsMaximizeLangEnAuJs,
	"static/generator/ckeditor/plugins/maximize/lang/en-ca.js": staticGeneratorCkeditorPluginsMaximizeLangEnCaJs,
	"static/generator/ckeditor/plugins/maximize/lang/en-gb.js": staticGeneratorCkeditorPluginsMaximizeLangEnGbJs,
	"static/generator/ckeditor/plugins/maximize/lang/en.js": staticGeneratorCkeditorPluginsMaximizeLangEnJs,
	"static/generator/ckeditor/plugins/maximize/lang/eo.js": staticGeneratorCkeditorPluginsMaximizeLangEoJs,
	"static/generator/ckeditor/plugins/maximize/lang/es.js": staticGeneratorCkeditorPluginsMaximizeLangEsJs,
	"static/generator/ckeditor/plugins/maximize/lang/et.js": staticGeneratorCkeditorPluginsMaximizeLangEtJs,
	"static/generator/ckeditor/plugins/maximize/lang/eu.js": staticGeneratorCkeditorPluginsMaximizeLangEuJs,
	"static/generator/ckeditor/plugins/maximize/lang/fa.js": staticGeneratorCkeditorPluginsMaximizeLangFaJs,
	"static/generator/ckeditor/plugins/maximize/lang/fi.js": staticGeneratorCkeditorPluginsMaximizeLangFiJs,
	"static/generator/ckeditor/plugins/maximize/lang/fo.js": staticGeneratorCkeditorPluginsMaximizeLangFoJs,
	"static/generator/ckeditor/plugins/maximize/lang/fr-ca.js": staticGeneratorCkeditorPluginsMaximizeLangFrCaJs,
	"static/generator/ckeditor/plugins/maximize/lang/fr.js": staticGeneratorCkeditorPluginsMaximizeLangFrJs,
	"static/generator/ckeditor/plugins/maximize/lang/gl.js": staticGeneratorCkeditorPluginsMaximizeLangGlJs,
	"static/generator/ckeditor/plugins/maximize/lang/gu.js": staticGeneratorCkeditorPluginsMaximizeLangGuJs,
	"static/generator/ckeditor/plugins/maximize/lang/he.js": staticGeneratorCkeditorPluginsMaximizeLangHeJs,
	"static/generator/ckeditor/plugins/maximize/lang/hi.js": staticGeneratorCkeditorPluginsMaximizeLangHiJs,
	"static/generator/ckeditor/plugins/maximize/lang/hr.js": staticGeneratorCkeditorPluginsMaximizeLangHrJs,
	"static/generator/ckeditor/plugins/maximize/lang/hu.js": staticGeneratorCkeditorPluginsMaximizeLangHuJs,
	"static/generator/ckeditor/plugins/maximize/lang/id.js": staticGeneratorCkeditorPluginsMaximizeLangIdJs,
	"static/generator/ckeditor/plugins/maximize/lang/is.js": staticGeneratorCkeditorPluginsMaximizeLangIsJs,
	"static/generator/ckeditor/plugins/maximize/lang/it.js": staticGeneratorCkeditorPluginsMaximizeLangItJs,
	"static/generator/ckeditor/plugins/maximize/lang/ja.js": staticGeneratorCkeditorPluginsMaximizeLangJaJs,
	"static/generator/ckeditor/plugins/maximize/lang/ka.js": staticGeneratorCkeditorPluginsMaximizeLangKaJs,
	"static/generator/ckeditor/plugins/maximize/lang/km.js": staticGeneratorCkeditorPluginsMaximizeLangKmJs,
	"static/generator/ckeditor/plugins/maximize/lang/ko.js": staticGeneratorCkeditorPluginsMaximizeLangKoJs,
	"static/generator/ckeditor/plugins/maximize/lang/ku.js": staticGeneratorCkeditorPluginsMaximizeLangKuJs,
	"static/generator/ckeditor/plugins/maximize/lang/lt.js": staticGeneratorCkeditorPluginsMaximizeLangLtJs,
	"static/generator/ckeditor/plugins/maximize/lang/lv.js": staticGeneratorCkeditorPluginsMaximizeLangLvJs,
	"static/generator/ckeditor/plugins/maximize/lang/mk.js": staticGeneratorCkeditorPluginsMaximizeLangMkJs,
	"static/generator/ckeditor/plugins/maximize/lang/mn.js": staticGeneratorCkeditorPluginsMaximizeLangMnJs,
	"static/generator/ckeditor/plugins/maximize/lang/ms.js": staticGeneratorCkeditorPluginsMaximizeLangMsJs,
	"static/generator/ckeditor/plugins/maximize/lang/nb.js": staticGeneratorCkeditorPluginsMaximizeLangNbJs,
	"static/generator/ckeditor/plugins/maximize/lang/nl.js": staticGeneratorCkeditorPluginsMaximizeLangNlJs,
	"static/generator/ckeditor/plugins/maximize/lang/no.js": staticGeneratorCkeditorPluginsMaximizeLangNoJs,
	"static/generator/ckeditor/plugins/maximize/lang/oc.js": staticGeneratorCkeditorPluginsMaximizeLangOcJs,
	"static/generator/ckeditor/plugins/maximize/lang/pl.js": staticGeneratorCkeditorPluginsMaximizeLangPlJs,
	"static/generator/ckeditor/plugins/maximize/lang/pt-br.js": staticGeneratorCkeditorPluginsMaximizeLangPtBrJs,
	"static/generator/ckeditor/plugins/maximize/lang/pt.js": staticGeneratorCkeditorPluginsMaximizeLangPtJs,
	"static/generator/ckeditor/plugins/maximize/lang/ro.js": staticGeneratorCkeditorPluginsMaximizeLangRoJs,
	"static/generator/ckeditor/plugins/maximize/lang/ru.js": staticGeneratorCkeditorPluginsMaximizeLangRuJs,
	"static/generator/ckeditor/plugins/maximize/lang/si.js": staticGeneratorCkeditorPluginsMaximizeLangSiJs,
	"static/generator/ckeditor/plugins/maximize/lang/sk.js": staticGeneratorCkeditorPluginsMaximizeLangSkJs,
	"static/generator/ckeditor/plugins/maximize/lang/sl.js": staticGeneratorCkeditorPluginsMaximizeLangSlJs,
	"static/generator/ckeditor/plugins/maximize/lang/sq.js": staticGeneratorCkeditorPluginsMaximizeLangSqJs,
	"static/generator/ckeditor/plugins/maximize/lang/sr-latn.js": staticGeneratorCkeditorPluginsMaximizeLangSrLatnJs,
	"static/generator/ckeditor/plugins/maximize/lang/sr.js": staticGeneratorCkeditorPluginsMaximizeLangSrJs,
	"static/generator/ckeditor/plugins/maximize/lang/sv.js": staticGeneratorCkeditorPluginsMaximizeLangSvJs,
	"static/generator/ckeditor/plugins/maximize/lang/th.js": staticGeneratorCkeditorPluginsMaximizeLangThJs,
	"static/generator/ckeditor/plugins/maximize/lang/tr.js": staticGeneratorCkeditorPluginsMaximizeLangTrJs,
	"static/generator/ckeditor/plugins/maximize/lang/tt.js": staticGeneratorCkeditorPluginsMaximizeLangTtJs,
	"static/generator/ckeditor/plugins/maximize/lang/ug.js": staticGeneratorCkeditorPluginsMaximizeLangUgJs,
	"static/generator/ckeditor/plugins/maximize/lang/uk.js": staticGeneratorCkeditorPluginsMaximizeLangUkJs,
	"static/generator/ckeditor/plugins/maximize/lang/vi.js": staticGeneratorCkeditorPluginsMaximizeLangViJs,
	"static/generator/ckeditor/plugins/maximize/lang/zh-cn.js": staticGeneratorCkeditorPluginsMaximizeLangZhCnJs,
	"static/generator/ckeditor/plugins/maximize/lang/zh.js": staticGeneratorCkeditorPluginsMaximizeLangZhJs,
	"static/generator/ckeditor/plugins/maximize/plugin.js": staticGeneratorCkeditorPluginsMaximizePluginJs,
	"static/generator/ckeditor/plugins/menu/plugin.js": staticGeneratorCkeditorPluginsMenuPluginJs,
	"static/generator/ckeditor/plugins/menubutton/plugin.js": staticGeneratorCkeditorPluginsMenubuttonPluginJs,
	"static/generator/ckeditor/plugins/newpage/icons/hidpi/newpage-rtl.png": staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpageRtlPng,
	"static/generator/ckeditor/plugins/newpage/icons/hidpi/newpage.png": staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpagePng,
	"static/generator/ckeditor/plugins/newpage/icons/newpage-rtl.png": staticGeneratorCkeditorPluginsNewpageIconsNewpageRtlPng,
	"static/generator/ckeditor/plugins/newpage/icons/newpage.png": staticGeneratorCkeditorPluginsNewpageIconsNewpagePng,
	"static/generator/ckeditor/plugins/newpage/lang/af.js": staticGeneratorCkeditorPluginsNewpageLangAfJs,
	"static/generator/ckeditor/plugins/newpage/lang/ar.js": staticGeneratorCkeditorPluginsNewpageLangArJs,
	"static/generator/ckeditor/plugins/newpage/lang/az.js": staticGeneratorCkeditorPluginsNewpageLangAzJs,
	"static/generator/ckeditor/plugins/newpage/lang/bg.js": staticGeneratorCkeditorPluginsNewpageLangBgJs,
	"static/generator/ckeditor/plugins/newpage/lang/bn.js": staticGeneratorCkeditorPluginsNewpageLangBnJs,
	"static/generator/ckeditor/plugins/newpage/lang/bs.js": staticGeneratorCkeditorPluginsNewpageLangBsJs,
	"static/generator/ckeditor/plugins/newpage/lang/ca.js": staticGeneratorCkeditorPluginsNewpageLangCaJs,
	"static/generator/ckeditor/plugins/newpage/lang/cs.js": staticGeneratorCkeditorPluginsNewpageLangCsJs,
	"static/generator/ckeditor/plugins/newpage/lang/cy.js": staticGeneratorCkeditorPluginsNewpageLangCyJs,
	"static/generator/ckeditor/plugins/newpage/lang/da.js": staticGeneratorCkeditorPluginsNewpageLangDaJs,
	"static/generator/ckeditor/plugins/newpage/lang/de-ch.js": staticGeneratorCkeditorPluginsNewpageLangDeChJs,
	"static/generator/ckeditor/plugins/newpage/lang/de.js": staticGeneratorCkeditorPluginsNewpageLangDeJs,
	"static/generator/ckeditor/plugins/newpage/lang/el.js": staticGeneratorCkeditorPluginsNewpageLangElJs,
	"static/generator/ckeditor/plugins/newpage/lang/en-au.js": staticGeneratorCkeditorPluginsNewpageLangEnAuJs,
	"static/generator/ckeditor/plugins/newpage/lang/en-ca.js": staticGeneratorCkeditorPluginsNewpageLangEnCaJs,
	"static/generator/ckeditor/plugins/newpage/lang/en-gb.js": staticGeneratorCkeditorPluginsNewpageLangEnGbJs,
	"static/generator/ckeditor/plugins/newpage/lang/en.js": staticGeneratorCkeditorPluginsNewpageLangEnJs,
	"static/generator/ckeditor/plugins/newpage/lang/eo.js": staticGeneratorCkeditorPluginsNewpageLangEoJs,
	"static/generator/ckeditor/plugins/newpage/lang/es.js": staticGeneratorCkeditorPluginsNewpageLangEsJs,
	"static/generator/ckeditor/plugins/newpage/lang/et.js": staticGeneratorCkeditorPluginsNewpageLangEtJs,
	"static/generator/ckeditor/plugins/newpage/lang/eu.js": staticGeneratorCkeditorPluginsNewpageLangEuJs,
	"static/generator/ckeditor/plugins/newpage/lang/fa.js": staticGeneratorCkeditorPluginsNewpageLangFaJs,
	"static/generator/ckeditor/plugins/newpage/lang/fi.js": staticGeneratorCkeditorPluginsNewpageLangFiJs,
	"static/generator/ckeditor/plugins/newpage/lang/fo.js": staticGeneratorCkeditorPluginsNewpageLangFoJs,
	"static/generator/ckeditor/plugins/newpage/lang/fr-ca.js": staticGeneratorCkeditorPluginsNewpageLangFrCaJs,
	"static/generator/ckeditor/plugins/newpage/lang/fr.js": staticGeneratorCkeditorPluginsNewpageLangFrJs,
	"static/generator/ckeditor/plugins/newpage/lang/gl.js": staticGeneratorCkeditorPluginsNewpageLangGlJs,
	"static/generator/ckeditor/plugins/newpage/lang/gu.js": staticGeneratorCkeditorPluginsNewpageLangGuJs,
	"static/generator/ckeditor/plugins/newpage/lang/he.js": staticGeneratorCkeditorPluginsNewpageLangHeJs,
	"static/generator/ckeditor/plugins/newpage/lang/hi.js": staticGeneratorCkeditorPluginsNewpageLangHiJs,
	"static/generator/ckeditor/plugins/newpage/lang/hr.js": staticGeneratorCkeditorPluginsNewpageLangHrJs,
	"static/generator/ckeditor/plugins/newpage/lang/hu.js": staticGeneratorCkeditorPluginsNewpageLangHuJs,
	"static/generator/ckeditor/plugins/newpage/lang/id.js": staticGeneratorCkeditorPluginsNewpageLangIdJs,
	"static/generator/ckeditor/plugins/newpage/lang/is.js": staticGeneratorCkeditorPluginsNewpageLangIsJs,
	"static/generator/ckeditor/plugins/newpage/lang/it.js": staticGeneratorCkeditorPluginsNewpageLangItJs,
	"static/generator/ckeditor/plugins/newpage/lang/ja.js": staticGeneratorCkeditorPluginsNewpageLangJaJs,
	"static/generator/ckeditor/plugins/newpage/lang/ka.js": staticGeneratorCkeditorPluginsNewpageLangKaJs,
	"static/generator/ckeditor/plugins/newpage/lang/km.js": staticGeneratorCkeditorPluginsNewpageLangKmJs,
	"static/generator/ckeditor/plugins/newpage/lang/ko.js": staticGeneratorCkeditorPluginsNewpageLangKoJs,
	"static/generator/ckeditor/plugins/newpage/lang/ku.js": staticGeneratorCkeditorPluginsNewpageLangKuJs,
	"static/generator/ckeditor/plugins/newpage/lang/lt.js": staticGeneratorCkeditorPluginsNewpageLangLtJs,
	"static/generator/ckeditor/plugins/newpage/lang/lv.js": staticGeneratorCkeditorPluginsNewpageLangLvJs,
	"static/generator/ckeditor/plugins/newpage/lang/mk.js": staticGeneratorCkeditorPluginsNewpageLangMkJs,
	"static/generator/ckeditor/plugins/newpage/lang/mn.js": staticGeneratorCkeditorPluginsNewpageLangMnJs,
	"static/generator/ckeditor/plugins/newpage/lang/ms.js": staticGeneratorCkeditorPluginsNewpageLangMsJs,
	"static/generator/ckeditor/plugins/newpage/lang/nb.js": staticGeneratorCkeditorPluginsNewpageLangNbJs,
	"static/generator/ckeditor/plugins/newpage/lang/nl.js": staticGeneratorCkeditorPluginsNewpageLangNlJs,
	"static/generator/ckeditor/plugins/newpage/lang/no.js": staticGeneratorCkeditorPluginsNewpageLangNoJs,
	"static/generator/ckeditor/plugins/newpage/lang/oc.js": staticGeneratorCkeditorPluginsNewpageLangOcJs,
	"static/generator/ckeditor/plugins/newpage/lang/pl.js": staticGeneratorCkeditorPluginsNewpageLangPlJs,
	"static/generator/ckeditor/plugins/newpage/lang/pt-br.js": staticGeneratorCkeditorPluginsNewpageLangPtBrJs,
	"static/generator/ckeditor/plugins/newpage/lang/pt.js": staticGeneratorCkeditorPluginsNewpageLangPtJs,
	"static/generator/ckeditor/plugins/newpage/lang/ro.js": staticGeneratorCkeditorPluginsNewpageLangRoJs,
	"static/generator/ckeditor/plugins/newpage/lang/ru.js": staticGeneratorCkeditorPluginsNewpageLangRuJs,
	"static/generator/ckeditor/plugins/newpage/lang/si.js": staticGeneratorCkeditorPluginsNewpageLangSiJs,
	"static/generator/ckeditor/plugins/newpage/lang/sk.js": staticGeneratorCkeditorPluginsNewpageLangSkJs,
	"static/generator/ckeditor/plugins/newpage/lang/sl.js": staticGeneratorCkeditorPluginsNewpageLangSlJs,
	"static/generator/ckeditor/plugins/newpage/lang/sq.js": staticGeneratorCkeditorPluginsNewpageLangSqJs,
	"static/generator/ckeditor/plugins/newpage/lang/sr-latn.js": staticGeneratorCkeditorPluginsNewpageLangSrLatnJs,
	"static/generator/ckeditor/plugins/newpage/lang/sr.js": staticGeneratorCkeditorPluginsNewpageLangSrJs,
	"static/generator/ckeditor/plugins/newpage/lang/sv.js": staticGeneratorCkeditorPluginsNewpageLangSvJs,
	"static/generator/ckeditor/plugins/newpage/lang/th.js": staticGeneratorCkeditorPluginsNewpageLangThJs,
	"static/generator/ckeditor/plugins/newpage/lang/tr.js": staticGeneratorCkeditorPluginsNewpageLangTrJs,
	"static/generator/ckeditor/plugins/newpage/lang/tt.js": staticGeneratorCkeditorPluginsNewpageLangTtJs,
	"static/generator/ckeditor/plugins/newpage/lang/ug.js": staticGeneratorCkeditorPluginsNewpageLangUgJs,
	"static/generator/ckeditor/plugins/newpage/lang/uk.js": staticGeneratorCkeditorPluginsNewpageLangUkJs,
	"static/generator/ckeditor/plugins/newpage/lang/vi.js": staticGeneratorCkeditorPluginsNewpageLangViJs,
	"static/generator/ckeditor/plugins/newpage/lang/zh-cn.js": staticGeneratorCkeditorPluginsNewpageLangZhCnJs,
	"static/generator/ckeditor/plugins/newpage/lang/zh.js": staticGeneratorCkeditorPluginsNewpageLangZhJs,
	"static/generator/ckeditor/plugins/newpage/plugin.js": staticGeneratorCkeditorPluginsNewpagePluginJs,
	"static/generator/ckeditor/plugins/pagebreak/icons/hidpi/pagebreak-rtl.png": staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakRtlPng,
	"static/generator/ckeditor/plugins/pagebreak/icons/hidpi/pagebreak.png": staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakPng,
	"static/generator/ckeditor/plugins/pagebreak/icons/pagebreak-rtl.png": staticGeneratorCkeditorPluginsPagebreakIconsPagebreakRtlPng,
	"static/generator/ckeditor/plugins/pagebreak/icons/pagebreak.png": staticGeneratorCkeditorPluginsPagebreakIconsPagebreakPng,
	"static/generator/ckeditor/plugins/pagebreak/images/pagebreak.gif": staticGeneratorCkeditorPluginsPagebreakImagesPagebreakGif,
	"static/generator/ckeditor/plugins/pagebreak/lang/af.js": staticGeneratorCkeditorPluginsPagebreakLangAfJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ar.js": staticGeneratorCkeditorPluginsPagebreakLangArJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/az.js": staticGeneratorCkeditorPluginsPagebreakLangAzJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/bg.js": staticGeneratorCkeditorPluginsPagebreakLangBgJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/bn.js": staticGeneratorCkeditorPluginsPagebreakLangBnJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/bs.js": staticGeneratorCkeditorPluginsPagebreakLangBsJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ca.js": staticGeneratorCkeditorPluginsPagebreakLangCaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/cs.js": staticGeneratorCkeditorPluginsPagebreakLangCsJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/cy.js": staticGeneratorCkeditorPluginsPagebreakLangCyJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/da.js": staticGeneratorCkeditorPluginsPagebreakLangDaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/de-ch.js": staticGeneratorCkeditorPluginsPagebreakLangDeChJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/de.js": staticGeneratorCkeditorPluginsPagebreakLangDeJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/el.js": staticGeneratorCkeditorPluginsPagebreakLangElJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/en-au.js": staticGeneratorCkeditorPluginsPagebreakLangEnAuJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/en-ca.js": staticGeneratorCkeditorPluginsPagebreakLangEnCaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/en-gb.js": staticGeneratorCkeditorPluginsPagebreakLangEnGbJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/en.js": staticGeneratorCkeditorPluginsPagebreakLangEnJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/eo.js": staticGeneratorCkeditorPluginsPagebreakLangEoJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/es.js": staticGeneratorCkeditorPluginsPagebreakLangEsJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/et.js": staticGeneratorCkeditorPluginsPagebreakLangEtJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/eu.js": staticGeneratorCkeditorPluginsPagebreakLangEuJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/fa.js": staticGeneratorCkeditorPluginsPagebreakLangFaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/fi.js": staticGeneratorCkeditorPluginsPagebreakLangFiJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/fo.js": staticGeneratorCkeditorPluginsPagebreakLangFoJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/fr-ca.js": staticGeneratorCkeditorPluginsPagebreakLangFrCaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/fr.js": staticGeneratorCkeditorPluginsPagebreakLangFrJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/gl.js": staticGeneratorCkeditorPluginsPagebreakLangGlJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/gu.js": staticGeneratorCkeditorPluginsPagebreakLangGuJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/he.js": staticGeneratorCkeditorPluginsPagebreakLangHeJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/hi.js": staticGeneratorCkeditorPluginsPagebreakLangHiJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/hr.js": staticGeneratorCkeditorPluginsPagebreakLangHrJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/hu.js": staticGeneratorCkeditorPluginsPagebreakLangHuJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/id.js": staticGeneratorCkeditorPluginsPagebreakLangIdJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/is.js": staticGeneratorCkeditorPluginsPagebreakLangIsJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/it.js": staticGeneratorCkeditorPluginsPagebreakLangItJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ja.js": staticGeneratorCkeditorPluginsPagebreakLangJaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ka.js": staticGeneratorCkeditorPluginsPagebreakLangKaJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/km.js": staticGeneratorCkeditorPluginsPagebreakLangKmJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ko.js": staticGeneratorCkeditorPluginsPagebreakLangKoJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ku.js": staticGeneratorCkeditorPluginsPagebreakLangKuJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/lt.js": staticGeneratorCkeditorPluginsPagebreakLangLtJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/lv.js": staticGeneratorCkeditorPluginsPagebreakLangLvJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/mk.js": staticGeneratorCkeditorPluginsPagebreakLangMkJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/mn.js": staticGeneratorCkeditorPluginsPagebreakLangMnJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ms.js": staticGeneratorCkeditorPluginsPagebreakLangMsJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/nb.js": staticGeneratorCkeditorPluginsPagebreakLangNbJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/nl.js": staticGeneratorCkeditorPluginsPagebreakLangNlJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/no.js": staticGeneratorCkeditorPluginsPagebreakLangNoJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/oc.js": staticGeneratorCkeditorPluginsPagebreakLangOcJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/pl.js": staticGeneratorCkeditorPluginsPagebreakLangPlJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/pt-br.js": staticGeneratorCkeditorPluginsPagebreakLangPtBrJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/pt.js": staticGeneratorCkeditorPluginsPagebreakLangPtJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ro.js": staticGeneratorCkeditorPluginsPagebreakLangRoJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ru.js": staticGeneratorCkeditorPluginsPagebreakLangRuJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/si.js": staticGeneratorCkeditorPluginsPagebreakLangSiJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/sk.js": staticGeneratorCkeditorPluginsPagebreakLangSkJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/sl.js": staticGeneratorCkeditorPluginsPagebreakLangSlJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/sq.js": staticGeneratorCkeditorPluginsPagebreakLangSqJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/sr-latn.js": staticGeneratorCkeditorPluginsPagebreakLangSrLatnJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/sr.js": staticGeneratorCkeditorPluginsPagebreakLangSrJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/sv.js": staticGeneratorCkeditorPluginsPagebreakLangSvJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/th.js": staticGeneratorCkeditorPluginsPagebreakLangThJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/tr.js": staticGeneratorCkeditorPluginsPagebreakLangTrJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/tt.js": staticGeneratorCkeditorPluginsPagebreakLangTtJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/ug.js": staticGeneratorCkeditorPluginsPagebreakLangUgJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/uk.js": staticGeneratorCkeditorPluginsPagebreakLangUkJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/vi.js": staticGeneratorCkeditorPluginsPagebreakLangViJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/zh-cn.js": staticGeneratorCkeditorPluginsPagebreakLangZhCnJs,
	"static/generator/ckeditor/plugins/pagebreak/lang/zh.js": staticGeneratorCkeditorPluginsPagebreakLangZhJs,
	"static/generator/ckeditor/plugins/pagebreak/plugin.js": staticGeneratorCkeditorPluginsPagebreakPluginJs,
	"static/generator/ckeditor/plugins/panel/plugin.js": staticGeneratorCkeditorPluginsPanelPluginJs,
	"static/generator/ckeditor/plugins/panelbutton/plugin.js": staticGeneratorCkeditorPluginsPanelbuttonPluginJs,
	"static/generator/ckeditor/plugins/pastefromword/filter/default.js": staticGeneratorCkeditorPluginsPastefromwordFilterDefaultJs,
	"static/generator/ckeditor/plugins/pastefromword/icons/hidpi/pastefromword-rtl.png": staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordRtlPng,
	"static/generator/ckeditor/plugins/pastefromword/icons/hidpi/pastefromword.png": staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordPng,
	"static/generator/ckeditor/plugins/pastefromword/icons/pastefromword-rtl.png": staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordRtlPng,
	"static/generator/ckeditor/plugins/pastefromword/icons/pastefromword.png": staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordPng,
	"static/generator/ckeditor/plugins/pastefromword/lang/af.js": staticGeneratorCkeditorPluginsPastefromwordLangAfJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ar.js": staticGeneratorCkeditorPluginsPastefromwordLangArJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/az.js": staticGeneratorCkeditorPluginsPastefromwordLangAzJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/bg.js": staticGeneratorCkeditorPluginsPastefromwordLangBgJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/bn.js": staticGeneratorCkeditorPluginsPastefromwordLangBnJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/bs.js": staticGeneratorCkeditorPluginsPastefromwordLangBsJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ca.js": staticGeneratorCkeditorPluginsPastefromwordLangCaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/cs.js": staticGeneratorCkeditorPluginsPastefromwordLangCsJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/cy.js": staticGeneratorCkeditorPluginsPastefromwordLangCyJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/da.js": staticGeneratorCkeditorPluginsPastefromwordLangDaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/de-ch.js": staticGeneratorCkeditorPluginsPastefromwordLangDeChJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/de.js": staticGeneratorCkeditorPluginsPastefromwordLangDeJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/el.js": staticGeneratorCkeditorPluginsPastefromwordLangElJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/en-au.js": staticGeneratorCkeditorPluginsPastefromwordLangEnAuJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/en-ca.js": staticGeneratorCkeditorPluginsPastefromwordLangEnCaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/en-gb.js": staticGeneratorCkeditorPluginsPastefromwordLangEnGbJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/en.js": staticGeneratorCkeditorPluginsPastefromwordLangEnJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/eo.js": staticGeneratorCkeditorPluginsPastefromwordLangEoJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/es.js": staticGeneratorCkeditorPluginsPastefromwordLangEsJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/et.js": staticGeneratorCkeditorPluginsPastefromwordLangEtJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/eu.js": staticGeneratorCkeditorPluginsPastefromwordLangEuJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/fa.js": staticGeneratorCkeditorPluginsPastefromwordLangFaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/fi.js": staticGeneratorCkeditorPluginsPastefromwordLangFiJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/fo.js": staticGeneratorCkeditorPluginsPastefromwordLangFoJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/fr-ca.js": staticGeneratorCkeditorPluginsPastefromwordLangFrCaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/fr.js": staticGeneratorCkeditorPluginsPastefromwordLangFrJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/gl.js": staticGeneratorCkeditorPluginsPastefromwordLangGlJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/gu.js": staticGeneratorCkeditorPluginsPastefromwordLangGuJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/he.js": staticGeneratorCkeditorPluginsPastefromwordLangHeJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/hi.js": staticGeneratorCkeditorPluginsPastefromwordLangHiJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/hr.js": staticGeneratorCkeditorPluginsPastefromwordLangHrJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/hu.js": staticGeneratorCkeditorPluginsPastefromwordLangHuJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/id.js": staticGeneratorCkeditorPluginsPastefromwordLangIdJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/is.js": staticGeneratorCkeditorPluginsPastefromwordLangIsJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/it.js": staticGeneratorCkeditorPluginsPastefromwordLangItJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ja.js": staticGeneratorCkeditorPluginsPastefromwordLangJaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ka.js": staticGeneratorCkeditorPluginsPastefromwordLangKaJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/km.js": staticGeneratorCkeditorPluginsPastefromwordLangKmJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ko.js": staticGeneratorCkeditorPluginsPastefromwordLangKoJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ku.js": staticGeneratorCkeditorPluginsPastefromwordLangKuJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/lt.js": staticGeneratorCkeditorPluginsPastefromwordLangLtJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/lv.js": staticGeneratorCkeditorPluginsPastefromwordLangLvJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/mk.js": staticGeneratorCkeditorPluginsPastefromwordLangMkJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/mn.js": staticGeneratorCkeditorPluginsPastefromwordLangMnJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ms.js": staticGeneratorCkeditorPluginsPastefromwordLangMsJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/nb.js": staticGeneratorCkeditorPluginsPastefromwordLangNbJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/nl.js": staticGeneratorCkeditorPluginsPastefromwordLangNlJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/no.js": staticGeneratorCkeditorPluginsPastefromwordLangNoJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/oc.js": staticGeneratorCkeditorPluginsPastefromwordLangOcJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/pl.js": staticGeneratorCkeditorPluginsPastefromwordLangPlJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/pt-br.js": staticGeneratorCkeditorPluginsPastefromwordLangPtBrJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/pt.js": staticGeneratorCkeditorPluginsPastefromwordLangPtJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ro.js": staticGeneratorCkeditorPluginsPastefromwordLangRoJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ru.js": staticGeneratorCkeditorPluginsPastefromwordLangRuJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/si.js": staticGeneratorCkeditorPluginsPastefromwordLangSiJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/sk.js": staticGeneratorCkeditorPluginsPastefromwordLangSkJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/sl.js": staticGeneratorCkeditorPluginsPastefromwordLangSlJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/sq.js": staticGeneratorCkeditorPluginsPastefromwordLangSqJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/sr-latn.js": staticGeneratorCkeditorPluginsPastefromwordLangSrLatnJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/sr.js": staticGeneratorCkeditorPluginsPastefromwordLangSrJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/sv.js": staticGeneratorCkeditorPluginsPastefromwordLangSvJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/th.js": staticGeneratorCkeditorPluginsPastefromwordLangThJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/tr.js": staticGeneratorCkeditorPluginsPastefromwordLangTrJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/tt.js": staticGeneratorCkeditorPluginsPastefromwordLangTtJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/ug.js": staticGeneratorCkeditorPluginsPastefromwordLangUgJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/uk.js": staticGeneratorCkeditorPluginsPastefromwordLangUkJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/vi.js": staticGeneratorCkeditorPluginsPastefromwordLangViJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/zh-cn.js": staticGeneratorCkeditorPluginsPastefromwordLangZhCnJs,
	"static/generator/ckeditor/plugins/pastefromword/lang/zh.js": staticGeneratorCkeditorPluginsPastefromwordLangZhJs,
	"static/generator/ckeditor/plugins/pastefromword/plugin.js": staticGeneratorCkeditorPluginsPastefromwordPluginJs,
	"static/generator/ckeditor/plugins/pastetext/icons/hidpi/pastetext-rtl.png": staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextRtlPng,
	"static/generator/ckeditor/plugins/pastetext/icons/hidpi/pastetext.png": staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextPng,
	"static/generator/ckeditor/plugins/pastetext/icons/pastetext-rtl.png": staticGeneratorCkeditorPluginsPastetextIconsPastetextRtlPng,
	"static/generator/ckeditor/plugins/pastetext/icons/pastetext.png": staticGeneratorCkeditorPluginsPastetextIconsPastetextPng,
	"static/generator/ckeditor/plugins/pastetext/lang/af.js": staticGeneratorCkeditorPluginsPastetextLangAfJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ar.js": staticGeneratorCkeditorPluginsPastetextLangArJs,
	"static/generator/ckeditor/plugins/pastetext/lang/az.js": staticGeneratorCkeditorPluginsPastetextLangAzJs,
	"static/generator/ckeditor/plugins/pastetext/lang/bg.js": staticGeneratorCkeditorPluginsPastetextLangBgJs,
	"static/generator/ckeditor/plugins/pastetext/lang/bn.js": staticGeneratorCkeditorPluginsPastetextLangBnJs,
	"static/generator/ckeditor/plugins/pastetext/lang/bs.js": staticGeneratorCkeditorPluginsPastetextLangBsJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ca.js": staticGeneratorCkeditorPluginsPastetextLangCaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/cs.js": staticGeneratorCkeditorPluginsPastetextLangCsJs,
	"static/generator/ckeditor/plugins/pastetext/lang/cy.js": staticGeneratorCkeditorPluginsPastetextLangCyJs,
	"static/generator/ckeditor/plugins/pastetext/lang/da.js": staticGeneratorCkeditorPluginsPastetextLangDaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/de-ch.js": staticGeneratorCkeditorPluginsPastetextLangDeChJs,
	"static/generator/ckeditor/plugins/pastetext/lang/de.js": staticGeneratorCkeditorPluginsPastetextLangDeJs,
	"static/generator/ckeditor/plugins/pastetext/lang/el.js": staticGeneratorCkeditorPluginsPastetextLangElJs,
	"static/generator/ckeditor/plugins/pastetext/lang/en-au.js": staticGeneratorCkeditorPluginsPastetextLangEnAuJs,
	"static/generator/ckeditor/plugins/pastetext/lang/en-ca.js": staticGeneratorCkeditorPluginsPastetextLangEnCaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/en-gb.js": staticGeneratorCkeditorPluginsPastetextLangEnGbJs,
	"static/generator/ckeditor/plugins/pastetext/lang/en.js": staticGeneratorCkeditorPluginsPastetextLangEnJs,
	"static/generator/ckeditor/plugins/pastetext/lang/eo.js": staticGeneratorCkeditorPluginsPastetextLangEoJs,
	"static/generator/ckeditor/plugins/pastetext/lang/es.js": staticGeneratorCkeditorPluginsPastetextLangEsJs,
	"static/generator/ckeditor/plugins/pastetext/lang/et.js": staticGeneratorCkeditorPluginsPastetextLangEtJs,
	"static/generator/ckeditor/plugins/pastetext/lang/eu.js": staticGeneratorCkeditorPluginsPastetextLangEuJs,
	"static/generator/ckeditor/plugins/pastetext/lang/fa.js": staticGeneratorCkeditorPluginsPastetextLangFaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/fi.js": staticGeneratorCkeditorPluginsPastetextLangFiJs,
	"static/generator/ckeditor/plugins/pastetext/lang/fo.js": staticGeneratorCkeditorPluginsPastetextLangFoJs,
	"static/generator/ckeditor/plugins/pastetext/lang/fr-ca.js": staticGeneratorCkeditorPluginsPastetextLangFrCaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/fr.js": staticGeneratorCkeditorPluginsPastetextLangFrJs,
	"static/generator/ckeditor/plugins/pastetext/lang/gl.js": staticGeneratorCkeditorPluginsPastetextLangGlJs,
	"static/generator/ckeditor/plugins/pastetext/lang/gu.js": staticGeneratorCkeditorPluginsPastetextLangGuJs,
	"static/generator/ckeditor/plugins/pastetext/lang/he.js": staticGeneratorCkeditorPluginsPastetextLangHeJs,
	"static/generator/ckeditor/plugins/pastetext/lang/hi.js": staticGeneratorCkeditorPluginsPastetextLangHiJs,
	"static/generator/ckeditor/plugins/pastetext/lang/hr.js": staticGeneratorCkeditorPluginsPastetextLangHrJs,
	"static/generator/ckeditor/plugins/pastetext/lang/hu.js": staticGeneratorCkeditorPluginsPastetextLangHuJs,
	"static/generator/ckeditor/plugins/pastetext/lang/id.js": staticGeneratorCkeditorPluginsPastetextLangIdJs,
	"static/generator/ckeditor/plugins/pastetext/lang/is.js": staticGeneratorCkeditorPluginsPastetextLangIsJs,
	"static/generator/ckeditor/plugins/pastetext/lang/it.js": staticGeneratorCkeditorPluginsPastetextLangItJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ja.js": staticGeneratorCkeditorPluginsPastetextLangJaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ka.js": staticGeneratorCkeditorPluginsPastetextLangKaJs,
	"static/generator/ckeditor/plugins/pastetext/lang/km.js": staticGeneratorCkeditorPluginsPastetextLangKmJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ko.js": staticGeneratorCkeditorPluginsPastetextLangKoJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ku.js": staticGeneratorCkeditorPluginsPastetextLangKuJs,
	"static/generator/ckeditor/plugins/pastetext/lang/lt.js": staticGeneratorCkeditorPluginsPastetextLangLtJs,
	"static/generator/ckeditor/plugins/pastetext/lang/lv.js": staticGeneratorCkeditorPluginsPastetextLangLvJs,
	"static/generator/ckeditor/plugins/pastetext/lang/mk.js": staticGeneratorCkeditorPluginsPastetextLangMkJs,
	"static/generator/ckeditor/plugins/pastetext/lang/mn.js": staticGeneratorCkeditorPluginsPastetextLangMnJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ms.js": staticGeneratorCkeditorPluginsPastetextLangMsJs,
	"static/generator/ckeditor/plugins/pastetext/lang/nb.js": staticGeneratorCkeditorPluginsPastetextLangNbJs,
	"static/generator/ckeditor/plugins/pastetext/lang/nl.js": staticGeneratorCkeditorPluginsPastetextLangNlJs,
	"static/generator/ckeditor/plugins/pastetext/lang/no.js": staticGeneratorCkeditorPluginsPastetextLangNoJs,
	"static/generator/ckeditor/plugins/pastetext/lang/oc.js": staticGeneratorCkeditorPluginsPastetextLangOcJs,
	"static/generator/ckeditor/plugins/pastetext/lang/pl.js": staticGeneratorCkeditorPluginsPastetextLangPlJs,
	"static/generator/ckeditor/plugins/pastetext/lang/pt-br.js": staticGeneratorCkeditorPluginsPastetextLangPtBrJs,
	"static/generator/ckeditor/plugins/pastetext/lang/pt.js": staticGeneratorCkeditorPluginsPastetextLangPtJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ro.js": staticGeneratorCkeditorPluginsPastetextLangRoJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ru.js": staticGeneratorCkeditorPluginsPastetextLangRuJs,
	"static/generator/ckeditor/plugins/pastetext/lang/si.js": staticGeneratorCkeditorPluginsPastetextLangSiJs,
	"static/generator/ckeditor/plugins/pastetext/lang/sk.js": staticGeneratorCkeditorPluginsPastetextLangSkJs,
	"static/generator/ckeditor/plugins/pastetext/lang/sl.js": staticGeneratorCkeditorPluginsPastetextLangSlJs,
	"static/generator/ckeditor/plugins/pastetext/lang/sq.js": staticGeneratorCkeditorPluginsPastetextLangSqJs,
	"static/generator/ckeditor/plugins/pastetext/lang/sr-latn.js": staticGeneratorCkeditorPluginsPastetextLangSrLatnJs,
	"static/generator/ckeditor/plugins/pastetext/lang/sr.js": staticGeneratorCkeditorPluginsPastetextLangSrJs,
	"static/generator/ckeditor/plugins/pastetext/lang/sv.js": staticGeneratorCkeditorPluginsPastetextLangSvJs,
	"static/generator/ckeditor/plugins/pastetext/lang/th.js": staticGeneratorCkeditorPluginsPastetextLangThJs,
	"static/generator/ckeditor/plugins/pastetext/lang/tr.js": staticGeneratorCkeditorPluginsPastetextLangTrJs,
	"static/generator/ckeditor/plugins/pastetext/lang/tt.js": staticGeneratorCkeditorPluginsPastetextLangTtJs,
	"static/generator/ckeditor/plugins/pastetext/lang/ug.js": staticGeneratorCkeditorPluginsPastetextLangUgJs,
	"static/generator/ckeditor/plugins/pastetext/lang/uk.js": staticGeneratorCkeditorPluginsPastetextLangUkJs,
	"static/generator/ckeditor/plugins/pastetext/lang/vi.js": staticGeneratorCkeditorPluginsPastetextLangViJs,
	"static/generator/ckeditor/plugins/pastetext/lang/zh-cn.js": staticGeneratorCkeditorPluginsPastetextLangZhCnJs,
	"static/generator/ckeditor/plugins/pastetext/lang/zh.js": staticGeneratorCkeditorPluginsPastetextLangZhJs,
	"static/generator/ckeditor/plugins/pastetext/plugin.js": staticGeneratorCkeditorPluginsPastetextPluginJs,
	"static/generator/ckeditor/plugins/popup/plugin.js": staticGeneratorCkeditorPluginsPopupPluginJs,
	"static/generator/ckeditor/plugins/preview/icons/hidpi/preview-rtl.png": staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewRtlPng,
	"static/generator/ckeditor/plugins/preview/icons/hidpi/preview.png": staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewPng,
	"static/generator/ckeditor/plugins/preview/icons/preview-rtl.png": staticGeneratorCkeditorPluginsPreviewIconsPreviewRtlPng,
	"static/generator/ckeditor/plugins/preview/icons/preview.png": staticGeneratorCkeditorPluginsPreviewIconsPreviewPng,
	"static/generator/ckeditor/plugins/preview/lang/af.js": staticGeneratorCkeditorPluginsPreviewLangAfJs,
	"static/generator/ckeditor/plugins/preview/lang/ar.js": staticGeneratorCkeditorPluginsPreviewLangArJs,
	"static/generator/ckeditor/plugins/preview/lang/az.js": staticGeneratorCkeditorPluginsPreviewLangAzJs,
	"static/generator/ckeditor/plugins/preview/lang/bg.js": staticGeneratorCkeditorPluginsPreviewLangBgJs,
	"static/generator/ckeditor/plugins/preview/lang/bn.js": staticGeneratorCkeditorPluginsPreviewLangBnJs,
	"static/generator/ckeditor/plugins/preview/lang/bs.js": staticGeneratorCkeditorPluginsPreviewLangBsJs,
	"static/generator/ckeditor/plugins/preview/lang/ca.js": staticGeneratorCkeditorPluginsPreviewLangCaJs,
	"static/generator/ckeditor/plugins/preview/lang/cs.js": staticGeneratorCkeditorPluginsPreviewLangCsJs,
	"static/generator/ckeditor/plugins/preview/lang/cy.js": staticGeneratorCkeditorPluginsPreviewLangCyJs,
	"static/generator/ckeditor/plugins/preview/lang/da.js": staticGeneratorCkeditorPluginsPreviewLangDaJs,
	"static/generator/ckeditor/plugins/preview/lang/de-ch.js": staticGeneratorCkeditorPluginsPreviewLangDeChJs,
	"static/generator/ckeditor/plugins/preview/lang/de.js": staticGeneratorCkeditorPluginsPreviewLangDeJs,
	"static/generator/ckeditor/plugins/preview/lang/el.js": staticGeneratorCkeditorPluginsPreviewLangElJs,
	"static/generator/ckeditor/plugins/preview/lang/en-au.js": staticGeneratorCkeditorPluginsPreviewLangEnAuJs,
	"static/generator/ckeditor/plugins/preview/lang/en-ca.js": staticGeneratorCkeditorPluginsPreviewLangEnCaJs,
	"static/generator/ckeditor/plugins/preview/lang/en-gb.js": staticGeneratorCkeditorPluginsPreviewLangEnGbJs,
	"static/generator/ckeditor/plugins/preview/lang/en.js": staticGeneratorCkeditorPluginsPreviewLangEnJs,
	"static/generator/ckeditor/plugins/preview/lang/eo.js": staticGeneratorCkeditorPluginsPreviewLangEoJs,
	"static/generator/ckeditor/plugins/preview/lang/es.js": staticGeneratorCkeditorPluginsPreviewLangEsJs,
	"static/generator/ckeditor/plugins/preview/lang/et.js": staticGeneratorCkeditorPluginsPreviewLangEtJs,
	"static/generator/ckeditor/plugins/preview/lang/eu.js": staticGeneratorCkeditorPluginsPreviewLangEuJs,
	"static/generator/ckeditor/plugins/preview/lang/fa.js": staticGeneratorCkeditorPluginsPreviewLangFaJs,
	"static/generator/ckeditor/plugins/preview/lang/fi.js": staticGeneratorCkeditorPluginsPreviewLangFiJs,
	"static/generator/ckeditor/plugins/preview/lang/fo.js": staticGeneratorCkeditorPluginsPreviewLangFoJs,
	"static/generator/ckeditor/plugins/preview/lang/fr-ca.js": staticGeneratorCkeditorPluginsPreviewLangFrCaJs,
	"static/generator/ckeditor/plugins/preview/lang/fr.js": staticGeneratorCkeditorPluginsPreviewLangFrJs,
	"static/generator/ckeditor/plugins/preview/lang/gl.js": staticGeneratorCkeditorPluginsPreviewLangGlJs,
	"static/generator/ckeditor/plugins/preview/lang/gu.js": staticGeneratorCkeditorPluginsPreviewLangGuJs,
	"static/generator/ckeditor/plugins/preview/lang/he.js": staticGeneratorCkeditorPluginsPreviewLangHeJs,
	"static/generator/ckeditor/plugins/preview/lang/hi.js": staticGeneratorCkeditorPluginsPreviewLangHiJs,
	"static/generator/ckeditor/plugins/preview/lang/hr.js": staticGeneratorCkeditorPluginsPreviewLangHrJs,
	"static/generator/ckeditor/plugins/preview/lang/hu.js": staticGeneratorCkeditorPluginsPreviewLangHuJs,
	"static/generator/ckeditor/plugins/preview/lang/id.js": staticGeneratorCkeditorPluginsPreviewLangIdJs,
	"static/generator/ckeditor/plugins/preview/lang/is.js": staticGeneratorCkeditorPluginsPreviewLangIsJs,
	"static/generator/ckeditor/plugins/preview/lang/it.js": staticGeneratorCkeditorPluginsPreviewLangItJs,
	"static/generator/ckeditor/plugins/preview/lang/ja.js": staticGeneratorCkeditorPluginsPreviewLangJaJs,
	"static/generator/ckeditor/plugins/preview/lang/ka.js": staticGeneratorCkeditorPluginsPreviewLangKaJs,
	"static/generator/ckeditor/plugins/preview/lang/km.js": staticGeneratorCkeditorPluginsPreviewLangKmJs,
	"static/generator/ckeditor/plugins/preview/lang/ko.js": staticGeneratorCkeditorPluginsPreviewLangKoJs,
	"static/generator/ckeditor/plugins/preview/lang/ku.js": staticGeneratorCkeditorPluginsPreviewLangKuJs,
	"static/generator/ckeditor/plugins/preview/lang/lt.js": staticGeneratorCkeditorPluginsPreviewLangLtJs,
	"static/generator/ckeditor/plugins/preview/lang/lv.js": staticGeneratorCkeditorPluginsPreviewLangLvJs,
	"static/generator/ckeditor/plugins/preview/lang/mk.js": staticGeneratorCkeditorPluginsPreviewLangMkJs,
	"static/generator/ckeditor/plugins/preview/lang/mn.js": staticGeneratorCkeditorPluginsPreviewLangMnJs,
	"static/generator/ckeditor/plugins/preview/lang/ms.js": staticGeneratorCkeditorPluginsPreviewLangMsJs,
	"static/generator/ckeditor/plugins/preview/lang/nb.js": staticGeneratorCkeditorPluginsPreviewLangNbJs,
	"static/generator/ckeditor/plugins/preview/lang/nl.js": staticGeneratorCkeditorPluginsPreviewLangNlJs,
	"static/generator/ckeditor/plugins/preview/lang/no.js": staticGeneratorCkeditorPluginsPreviewLangNoJs,
	"static/generator/ckeditor/plugins/preview/lang/oc.js": staticGeneratorCkeditorPluginsPreviewLangOcJs,
	"static/generator/ckeditor/plugins/preview/lang/pl.js": staticGeneratorCkeditorPluginsPreviewLangPlJs,
	"static/generator/ckeditor/plugins/preview/lang/pt-br.js": staticGeneratorCkeditorPluginsPreviewLangPtBrJs,
	"static/generator/ckeditor/plugins/preview/lang/pt.js": staticGeneratorCkeditorPluginsPreviewLangPtJs,
	"static/generator/ckeditor/plugins/preview/lang/ro.js": staticGeneratorCkeditorPluginsPreviewLangRoJs,
	"static/generator/ckeditor/plugins/preview/lang/ru.js": staticGeneratorCkeditorPluginsPreviewLangRuJs,
	"static/generator/ckeditor/plugins/preview/lang/si.js": staticGeneratorCkeditorPluginsPreviewLangSiJs,
	"static/generator/ckeditor/plugins/preview/lang/sk.js": staticGeneratorCkeditorPluginsPreviewLangSkJs,
	"static/generator/ckeditor/plugins/preview/lang/sl.js": staticGeneratorCkeditorPluginsPreviewLangSlJs,
	"static/generator/ckeditor/plugins/preview/lang/sq.js": staticGeneratorCkeditorPluginsPreviewLangSqJs,
	"static/generator/ckeditor/plugins/preview/lang/sr-latn.js": staticGeneratorCkeditorPluginsPreviewLangSrLatnJs,
	"static/generator/ckeditor/plugins/preview/lang/sr.js": staticGeneratorCkeditorPluginsPreviewLangSrJs,
	"static/generator/ckeditor/plugins/preview/lang/sv.js": staticGeneratorCkeditorPluginsPreviewLangSvJs,
	"static/generator/ckeditor/plugins/preview/lang/th.js": staticGeneratorCkeditorPluginsPreviewLangThJs,
	"static/generator/ckeditor/plugins/preview/lang/tr.js": staticGeneratorCkeditorPluginsPreviewLangTrJs,
	"static/generator/ckeditor/plugins/preview/lang/tt.js": staticGeneratorCkeditorPluginsPreviewLangTtJs,
	"static/generator/ckeditor/plugins/preview/lang/ug.js": staticGeneratorCkeditorPluginsPreviewLangUgJs,
	"static/generator/ckeditor/plugins/preview/lang/uk.js": staticGeneratorCkeditorPluginsPreviewLangUkJs,
	"static/generator/ckeditor/plugins/preview/lang/vi.js": staticGeneratorCkeditorPluginsPreviewLangViJs,
	"static/generator/ckeditor/plugins/preview/lang/zh-cn.js": staticGeneratorCkeditorPluginsPreviewLangZhCnJs,
	"static/generator/ckeditor/plugins/preview/lang/zh.js": staticGeneratorCkeditorPluginsPreviewLangZhJs,
	"static/generator/ckeditor/plugins/preview/plugin.js": staticGeneratorCkeditorPluginsPreviewPluginJs,
	"static/generator/ckeditor/plugins/preview/preview.html": staticGeneratorCkeditorPluginsPreviewPreviewHtml,
	"static/generator/ckeditor/plugins/print/icons/hidpi/print.png": staticGeneratorCkeditorPluginsPrintIconsHidpiPrintPng,
	"static/generator/ckeditor/plugins/print/icons/print.png": staticGeneratorCkeditorPluginsPrintIconsPrintPng,
	"static/generator/ckeditor/plugins/print/lang/af.js": staticGeneratorCkeditorPluginsPrintLangAfJs,
	"static/generator/ckeditor/plugins/print/lang/ar.js": staticGeneratorCkeditorPluginsPrintLangArJs,
	"static/generator/ckeditor/plugins/print/lang/az.js": staticGeneratorCkeditorPluginsPrintLangAzJs,
	"static/generator/ckeditor/plugins/print/lang/bg.js": staticGeneratorCkeditorPluginsPrintLangBgJs,
	"static/generator/ckeditor/plugins/print/lang/bn.js": staticGeneratorCkeditorPluginsPrintLangBnJs,
	"static/generator/ckeditor/plugins/print/lang/bs.js": staticGeneratorCkeditorPluginsPrintLangBsJs,
	"static/generator/ckeditor/plugins/print/lang/ca.js": staticGeneratorCkeditorPluginsPrintLangCaJs,
	"static/generator/ckeditor/plugins/print/lang/cs.js": staticGeneratorCkeditorPluginsPrintLangCsJs,
	"static/generator/ckeditor/plugins/print/lang/cy.js": staticGeneratorCkeditorPluginsPrintLangCyJs,
	"static/generator/ckeditor/plugins/print/lang/da.js": staticGeneratorCkeditorPluginsPrintLangDaJs,
	"static/generator/ckeditor/plugins/print/lang/de-ch.js": staticGeneratorCkeditorPluginsPrintLangDeChJs,
	"static/generator/ckeditor/plugins/print/lang/de.js": staticGeneratorCkeditorPluginsPrintLangDeJs,
	"static/generator/ckeditor/plugins/print/lang/el.js": staticGeneratorCkeditorPluginsPrintLangElJs,
	"static/generator/ckeditor/plugins/print/lang/en-au.js": staticGeneratorCkeditorPluginsPrintLangEnAuJs,
	"static/generator/ckeditor/plugins/print/lang/en-ca.js": staticGeneratorCkeditorPluginsPrintLangEnCaJs,
	"static/generator/ckeditor/plugins/print/lang/en-gb.js": staticGeneratorCkeditorPluginsPrintLangEnGbJs,
	"static/generator/ckeditor/plugins/print/lang/en.js": staticGeneratorCkeditorPluginsPrintLangEnJs,
	"static/generator/ckeditor/plugins/print/lang/eo.js": staticGeneratorCkeditorPluginsPrintLangEoJs,
	"static/generator/ckeditor/plugins/print/lang/es.js": staticGeneratorCkeditorPluginsPrintLangEsJs,
	"static/generator/ckeditor/plugins/print/lang/et.js": staticGeneratorCkeditorPluginsPrintLangEtJs,
	"static/generator/ckeditor/plugins/print/lang/eu.js": staticGeneratorCkeditorPluginsPrintLangEuJs,
	"static/generator/ckeditor/plugins/print/lang/fa.js": staticGeneratorCkeditorPluginsPrintLangFaJs,
	"static/generator/ckeditor/plugins/print/lang/fi.js": staticGeneratorCkeditorPluginsPrintLangFiJs,
	"static/generator/ckeditor/plugins/print/lang/fo.js": staticGeneratorCkeditorPluginsPrintLangFoJs,
	"static/generator/ckeditor/plugins/print/lang/fr-ca.js": staticGeneratorCkeditorPluginsPrintLangFrCaJs,
	"static/generator/ckeditor/plugins/print/lang/fr.js": staticGeneratorCkeditorPluginsPrintLangFrJs,
	"static/generator/ckeditor/plugins/print/lang/gl.js": staticGeneratorCkeditorPluginsPrintLangGlJs,
	"static/generator/ckeditor/plugins/print/lang/gu.js": staticGeneratorCkeditorPluginsPrintLangGuJs,
	"static/generator/ckeditor/plugins/print/lang/he.js": staticGeneratorCkeditorPluginsPrintLangHeJs,
	"static/generator/ckeditor/plugins/print/lang/hi.js": staticGeneratorCkeditorPluginsPrintLangHiJs,
	"static/generator/ckeditor/plugins/print/lang/hr.js": staticGeneratorCkeditorPluginsPrintLangHrJs,
	"static/generator/ckeditor/plugins/print/lang/hu.js": staticGeneratorCkeditorPluginsPrintLangHuJs,
	"static/generator/ckeditor/plugins/print/lang/id.js": staticGeneratorCkeditorPluginsPrintLangIdJs,
	"static/generator/ckeditor/plugins/print/lang/is.js": staticGeneratorCkeditorPluginsPrintLangIsJs,
	"static/generator/ckeditor/plugins/print/lang/it.js": staticGeneratorCkeditorPluginsPrintLangItJs,
	"static/generator/ckeditor/plugins/print/lang/ja.js": staticGeneratorCkeditorPluginsPrintLangJaJs,
	"static/generator/ckeditor/plugins/print/lang/ka.js": staticGeneratorCkeditorPluginsPrintLangKaJs,
	"static/generator/ckeditor/plugins/print/lang/km.js": staticGeneratorCkeditorPluginsPrintLangKmJs,
	"static/generator/ckeditor/plugins/print/lang/ko.js": staticGeneratorCkeditorPluginsPrintLangKoJs,
	"static/generator/ckeditor/plugins/print/lang/ku.js": staticGeneratorCkeditorPluginsPrintLangKuJs,
	"static/generator/ckeditor/plugins/print/lang/lt.js": staticGeneratorCkeditorPluginsPrintLangLtJs,
	"static/generator/ckeditor/plugins/print/lang/lv.js": staticGeneratorCkeditorPluginsPrintLangLvJs,
	"static/generator/ckeditor/plugins/print/lang/mk.js": staticGeneratorCkeditorPluginsPrintLangMkJs,
	"static/generator/ckeditor/plugins/print/lang/mn.js": staticGeneratorCkeditorPluginsPrintLangMnJs,
	"static/generator/ckeditor/plugins/print/lang/ms.js": staticGeneratorCkeditorPluginsPrintLangMsJs,
	"static/generator/ckeditor/plugins/print/lang/nb.js": staticGeneratorCkeditorPluginsPrintLangNbJs,
	"static/generator/ckeditor/plugins/print/lang/nl.js": staticGeneratorCkeditorPluginsPrintLangNlJs,
	"static/generator/ckeditor/plugins/print/lang/no.js": staticGeneratorCkeditorPluginsPrintLangNoJs,
	"static/generator/ckeditor/plugins/print/lang/oc.js": staticGeneratorCkeditorPluginsPrintLangOcJs,
	"static/generator/ckeditor/plugins/print/lang/pl.js": staticGeneratorCkeditorPluginsPrintLangPlJs,
	"static/generator/ckeditor/plugins/print/lang/pt-br.js": staticGeneratorCkeditorPluginsPrintLangPtBrJs,
	"static/generator/ckeditor/plugins/print/lang/pt.js": staticGeneratorCkeditorPluginsPrintLangPtJs,
	"static/generator/ckeditor/plugins/print/lang/ro.js": staticGeneratorCkeditorPluginsPrintLangRoJs,
	"static/generator/ckeditor/plugins/print/lang/ru.js": staticGeneratorCkeditorPluginsPrintLangRuJs,
	"static/generator/ckeditor/plugins/print/lang/si.js": staticGeneratorCkeditorPluginsPrintLangSiJs,
	"static/generator/ckeditor/plugins/print/lang/sk.js": staticGeneratorCkeditorPluginsPrintLangSkJs,
	"static/generator/ckeditor/plugins/print/lang/sl.js": staticGeneratorCkeditorPluginsPrintLangSlJs,
	"static/generator/ckeditor/plugins/print/lang/sq.js": staticGeneratorCkeditorPluginsPrintLangSqJs,
	"static/generator/ckeditor/plugins/print/lang/sr-latn.js": staticGeneratorCkeditorPluginsPrintLangSrLatnJs,
	"static/generator/ckeditor/plugins/print/lang/sr.js": staticGeneratorCkeditorPluginsPrintLangSrJs,
	"static/generator/ckeditor/plugins/print/lang/sv.js": staticGeneratorCkeditorPluginsPrintLangSvJs,
	"static/generator/ckeditor/plugins/print/lang/th.js": staticGeneratorCkeditorPluginsPrintLangThJs,
	"static/generator/ckeditor/plugins/print/lang/tr.js": staticGeneratorCkeditorPluginsPrintLangTrJs,
	"static/generator/ckeditor/plugins/print/lang/tt.js": staticGeneratorCkeditorPluginsPrintLangTtJs,
	"static/generator/ckeditor/plugins/print/lang/ug.js": staticGeneratorCkeditorPluginsPrintLangUgJs,
	"static/generator/ckeditor/plugins/print/lang/uk.js": staticGeneratorCkeditorPluginsPrintLangUkJs,
	"static/generator/ckeditor/plugins/print/lang/vi.js": staticGeneratorCkeditorPluginsPrintLangViJs,
	"static/generator/ckeditor/plugins/print/lang/zh-cn.js": staticGeneratorCkeditorPluginsPrintLangZhCnJs,
	"static/generator/ckeditor/plugins/print/lang/zh.js": staticGeneratorCkeditorPluginsPrintLangZhJs,
	"static/generator/ckeditor/plugins/print/plugin.js": staticGeneratorCkeditorPluginsPrintPluginJs,
	"static/generator/ckeditor/plugins/removeformat/icons/hidpi/removeformat.png": staticGeneratorCkeditorPluginsRemoveformatIconsHidpiRemoveformatPng,
	"static/generator/ckeditor/plugins/removeformat/icons/removeformat.png": staticGeneratorCkeditorPluginsRemoveformatIconsRemoveformatPng,
	"static/generator/ckeditor/plugins/removeformat/lang/af.js": staticGeneratorCkeditorPluginsRemoveformatLangAfJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ar.js": staticGeneratorCkeditorPluginsRemoveformatLangArJs,
	"static/generator/ckeditor/plugins/removeformat/lang/az.js": staticGeneratorCkeditorPluginsRemoveformatLangAzJs,
	"static/generator/ckeditor/plugins/removeformat/lang/bg.js": staticGeneratorCkeditorPluginsRemoveformatLangBgJs,
	"static/generator/ckeditor/plugins/removeformat/lang/bn.js": staticGeneratorCkeditorPluginsRemoveformatLangBnJs,
	"static/generator/ckeditor/plugins/removeformat/lang/bs.js": staticGeneratorCkeditorPluginsRemoveformatLangBsJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ca.js": staticGeneratorCkeditorPluginsRemoveformatLangCaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/cs.js": staticGeneratorCkeditorPluginsRemoveformatLangCsJs,
	"static/generator/ckeditor/plugins/removeformat/lang/cy.js": staticGeneratorCkeditorPluginsRemoveformatLangCyJs,
	"static/generator/ckeditor/plugins/removeformat/lang/da.js": staticGeneratorCkeditorPluginsRemoveformatLangDaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/de-ch.js": staticGeneratorCkeditorPluginsRemoveformatLangDeChJs,
	"static/generator/ckeditor/plugins/removeformat/lang/de.js": staticGeneratorCkeditorPluginsRemoveformatLangDeJs,
	"static/generator/ckeditor/plugins/removeformat/lang/el.js": staticGeneratorCkeditorPluginsRemoveformatLangElJs,
	"static/generator/ckeditor/plugins/removeformat/lang/en-au.js": staticGeneratorCkeditorPluginsRemoveformatLangEnAuJs,
	"static/generator/ckeditor/plugins/removeformat/lang/en-ca.js": staticGeneratorCkeditorPluginsRemoveformatLangEnCaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/en-gb.js": staticGeneratorCkeditorPluginsRemoveformatLangEnGbJs,
	"static/generator/ckeditor/plugins/removeformat/lang/en.js": staticGeneratorCkeditorPluginsRemoveformatLangEnJs,
	"static/generator/ckeditor/plugins/removeformat/lang/eo.js": staticGeneratorCkeditorPluginsRemoveformatLangEoJs,
	"static/generator/ckeditor/plugins/removeformat/lang/es.js": staticGeneratorCkeditorPluginsRemoveformatLangEsJs,
	"static/generator/ckeditor/plugins/removeformat/lang/et.js": staticGeneratorCkeditorPluginsRemoveformatLangEtJs,
	"static/generator/ckeditor/plugins/removeformat/lang/eu.js": staticGeneratorCkeditorPluginsRemoveformatLangEuJs,
	"static/generator/ckeditor/plugins/removeformat/lang/fa.js": staticGeneratorCkeditorPluginsRemoveformatLangFaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/fi.js": staticGeneratorCkeditorPluginsRemoveformatLangFiJs,
	"static/generator/ckeditor/plugins/removeformat/lang/fo.js": staticGeneratorCkeditorPluginsRemoveformatLangFoJs,
	"static/generator/ckeditor/plugins/removeformat/lang/fr-ca.js": staticGeneratorCkeditorPluginsRemoveformatLangFrCaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/fr.js": staticGeneratorCkeditorPluginsRemoveformatLangFrJs,
	"static/generator/ckeditor/plugins/removeformat/lang/gl.js": staticGeneratorCkeditorPluginsRemoveformatLangGlJs,
	"static/generator/ckeditor/plugins/removeformat/lang/gu.js": staticGeneratorCkeditorPluginsRemoveformatLangGuJs,
	"static/generator/ckeditor/plugins/removeformat/lang/he.js": staticGeneratorCkeditorPluginsRemoveformatLangHeJs,
	"static/generator/ckeditor/plugins/removeformat/lang/hi.js": staticGeneratorCkeditorPluginsRemoveformatLangHiJs,
	"static/generator/ckeditor/plugins/removeformat/lang/hr.js": staticGeneratorCkeditorPluginsRemoveformatLangHrJs,
	"static/generator/ckeditor/plugins/removeformat/lang/hu.js": staticGeneratorCkeditorPluginsRemoveformatLangHuJs,
	"static/generator/ckeditor/plugins/removeformat/lang/id.js": staticGeneratorCkeditorPluginsRemoveformatLangIdJs,
	"static/generator/ckeditor/plugins/removeformat/lang/is.js": staticGeneratorCkeditorPluginsRemoveformatLangIsJs,
	"static/generator/ckeditor/plugins/removeformat/lang/it.js": staticGeneratorCkeditorPluginsRemoveformatLangItJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ja.js": staticGeneratorCkeditorPluginsRemoveformatLangJaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ka.js": staticGeneratorCkeditorPluginsRemoveformatLangKaJs,
	"static/generator/ckeditor/plugins/removeformat/lang/km.js": staticGeneratorCkeditorPluginsRemoveformatLangKmJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ko.js": staticGeneratorCkeditorPluginsRemoveformatLangKoJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ku.js": staticGeneratorCkeditorPluginsRemoveformatLangKuJs,
	"static/generator/ckeditor/plugins/removeformat/lang/lt.js": staticGeneratorCkeditorPluginsRemoveformatLangLtJs,
	"static/generator/ckeditor/plugins/removeformat/lang/lv.js": staticGeneratorCkeditorPluginsRemoveformatLangLvJs,
	"static/generator/ckeditor/plugins/removeformat/lang/mk.js": staticGeneratorCkeditorPluginsRemoveformatLangMkJs,
	"static/generator/ckeditor/plugins/removeformat/lang/mn.js": staticGeneratorCkeditorPluginsRemoveformatLangMnJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ms.js": staticGeneratorCkeditorPluginsRemoveformatLangMsJs,
	"static/generator/ckeditor/plugins/removeformat/lang/nb.js": staticGeneratorCkeditorPluginsRemoveformatLangNbJs,
	"static/generator/ckeditor/plugins/removeformat/lang/nl.js": staticGeneratorCkeditorPluginsRemoveformatLangNlJs,
	"static/generator/ckeditor/plugins/removeformat/lang/no.js": staticGeneratorCkeditorPluginsRemoveformatLangNoJs,
	"static/generator/ckeditor/plugins/removeformat/lang/oc.js": staticGeneratorCkeditorPluginsRemoveformatLangOcJs,
	"static/generator/ckeditor/plugins/removeformat/lang/pl.js": staticGeneratorCkeditorPluginsRemoveformatLangPlJs,
	"static/generator/ckeditor/plugins/removeformat/lang/pt-br.js": staticGeneratorCkeditorPluginsRemoveformatLangPtBrJs,
	"static/generator/ckeditor/plugins/removeformat/lang/pt.js": staticGeneratorCkeditorPluginsRemoveformatLangPtJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ro.js": staticGeneratorCkeditorPluginsRemoveformatLangRoJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ru.js": staticGeneratorCkeditorPluginsRemoveformatLangRuJs,
	"static/generator/ckeditor/plugins/removeformat/lang/si.js": staticGeneratorCkeditorPluginsRemoveformatLangSiJs,
	"static/generator/ckeditor/plugins/removeformat/lang/sk.js": staticGeneratorCkeditorPluginsRemoveformatLangSkJs,
	"static/generator/ckeditor/plugins/removeformat/lang/sl.js": staticGeneratorCkeditorPluginsRemoveformatLangSlJs,
	"static/generator/ckeditor/plugins/removeformat/lang/sq.js": staticGeneratorCkeditorPluginsRemoveformatLangSqJs,
	"static/generator/ckeditor/plugins/removeformat/lang/sr-latn.js": staticGeneratorCkeditorPluginsRemoveformatLangSrLatnJs,
	"static/generator/ckeditor/plugins/removeformat/lang/sr.js": staticGeneratorCkeditorPluginsRemoveformatLangSrJs,
	"static/generator/ckeditor/plugins/removeformat/lang/sv.js": staticGeneratorCkeditorPluginsRemoveformatLangSvJs,
	"static/generator/ckeditor/plugins/removeformat/lang/th.js": staticGeneratorCkeditorPluginsRemoveformatLangThJs,
	"static/generator/ckeditor/plugins/removeformat/lang/tr.js": staticGeneratorCkeditorPluginsRemoveformatLangTrJs,
	"static/generator/ckeditor/plugins/removeformat/lang/tt.js": staticGeneratorCkeditorPluginsRemoveformatLangTtJs,
	"static/generator/ckeditor/plugins/removeformat/lang/ug.js": staticGeneratorCkeditorPluginsRemoveformatLangUgJs,
	"static/generator/ckeditor/plugins/removeformat/lang/uk.js": staticGeneratorCkeditorPluginsRemoveformatLangUkJs,
	"static/generator/ckeditor/plugins/removeformat/lang/vi.js": staticGeneratorCkeditorPluginsRemoveformatLangViJs,
	"static/generator/ckeditor/plugins/removeformat/lang/zh-cn.js": staticGeneratorCkeditorPluginsRemoveformatLangZhCnJs,
	"static/generator/ckeditor/plugins/removeformat/lang/zh.js": staticGeneratorCkeditorPluginsRemoveformatLangZhJs,
	"static/generator/ckeditor/plugins/removeformat/plugin.js": staticGeneratorCkeditorPluginsRemoveformatPluginJs,
	"static/generator/ckeditor/plugins/resize/plugin.js": staticGeneratorCkeditorPluginsResizePluginJs,
	"static/generator/ckeditor/plugins/richcombo/plugin.js": staticGeneratorCkeditorPluginsRichcomboPluginJs,
	"static/generator/ckeditor/plugins/save/icons/hidpi/save.png": staticGeneratorCkeditorPluginsSaveIconsHidpiSavePng,
	"static/generator/ckeditor/plugins/save/icons/save.png": staticGeneratorCkeditorPluginsSaveIconsSavePng,
	"static/generator/ckeditor/plugins/save/lang/af.js": staticGeneratorCkeditorPluginsSaveLangAfJs,
	"static/generator/ckeditor/plugins/save/lang/ar.js": staticGeneratorCkeditorPluginsSaveLangArJs,
	"static/generator/ckeditor/plugins/save/lang/az.js": staticGeneratorCkeditorPluginsSaveLangAzJs,
	"static/generator/ckeditor/plugins/save/lang/bg.js": staticGeneratorCkeditorPluginsSaveLangBgJs,
	"static/generator/ckeditor/plugins/save/lang/bn.js": staticGeneratorCkeditorPluginsSaveLangBnJs,
	"static/generator/ckeditor/plugins/save/lang/bs.js": staticGeneratorCkeditorPluginsSaveLangBsJs,
	"static/generator/ckeditor/plugins/save/lang/ca.js": staticGeneratorCkeditorPluginsSaveLangCaJs,
	"static/generator/ckeditor/plugins/save/lang/cs.js": staticGeneratorCkeditorPluginsSaveLangCsJs,
	"static/generator/ckeditor/plugins/save/lang/cy.js": staticGeneratorCkeditorPluginsSaveLangCyJs,
	"static/generator/ckeditor/plugins/save/lang/da.js": staticGeneratorCkeditorPluginsSaveLangDaJs,
	"static/generator/ckeditor/plugins/save/lang/de-ch.js": staticGeneratorCkeditorPluginsSaveLangDeChJs,
	"static/generator/ckeditor/plugins/save/lang/de.js": staticGeneratorCkeditorPluginsSaveLangDeJs,
	"static/generator/ckeditor/plugins/save/lang/el.js": staticGeneratorCkeditorPluginsSaveLangElJs,
	"static/generator/ckeditor/plugins/save/lang/en-au.js": staticGeneratorCkeditorPluginsSaveLangEnAuJs,
	"static/generator/ckeditor/plugins/save/lang/en-ca.js": staticGeneratorCkeditorPluginsSaveLangEnCaJs,
	"static/generator/ckeditor/plugins/save/lang/en-gb.js": staticGeneratorCkeditorPluginsSaveLangEnGbJs,
	"static/generator/ckeditor/plugins/save/lang/en.js": staticGeneratorCkeditorPluginsSaveLangEnJs,
	"static/generator/ckeditor/plugins/save/lang/eo.js": staticGeneratorCkeditorPluginsSaveLangEoJs,
	"static/generator/ckeditor/plugins/save/lang/es.js": staticGeneratorCkeditorPluginsSaveLangEsJs,
	"static/generator/ckeditor/plugins/save/lang/et.js": staticGeneratorCkeditorPluginsSaveLangEtJs,
	"static/generator/ckeditor/plugins/save/lang/eu.js": staticGeneratorCkeditorPluginsSaveLangEuJs,
	"static/generator/ckeditor/plugins/save/lang/fa.js": staticGeneratorCkeditorPluginsSaveLangFaJs,
	"static/generator/ckeditor/plugins/save/lang/fi.js": staticGeneratorCkeditorPluginsSaveLangFiJs,
	"static/generator/ckeditor/plugins/save/lang/fo.js": staticGeneratorCkeditorPluginsSaveLangFoJs,
	"static/generator/ckeditor/plugins/save/lang/fr-ca.js": staticGeneratorCkeditorPluginsSaveLangFrCaJs,
	"static/generator/ckeditor/plugins/save/lang/fr.js": staticGeneratorCkeditorPluginsSaveLangFrJs,
	"static/generator/ckeditor/plugins/save/lang/gl.js": staticGeneratorCkeditorPluginsSaveLangGlJs,
	"static/generator/ckeditor/plugins/save/lang/gu.js": staticGeneratorCkeditorPluginsSaveLangGuJs,
	"static/generator/ckeditor/plugins/save/lang/he.js": staticGeneratorCkeditorPluginsSaveLangHeJs,
	"static/generator/ckeditor/plugins/save/lang/hi.js": staticGeneratorCkeditorPluginsSaveLangHiJs,
	"static/generator/ckeditor/plugins/save/lang/hr.js": staticGeneratorCkeditorPluginsSaveLangHrJs,
	"static/generator/ckeditor/plugins/save/lang/hu.js": staticGeneratorCkeditorPluginsSaveLangHuJs,
	"static/generator/ckeditor/plugins/save/lang/id.js": staticGeneratorCkeditorPluginsSaveLangIdJs,
	"static/generator/ckeditor/plugins/save/lang/is.js": staticGeneratorCkeditorPluginsSaveLangIsJs,
	"static/generator/ckeditor/plugins/save/lang/it.js": staticGeneratorCkeditorPluginsSaveLangItJs,
	"static/generator/ckeditor/plugins/save/lang/ja.js": staticGeneratorCkeditorPluginsSaveLangJaJs,
	"static/generator/ckeditor/plugins/save/lang/ka.js": staticGeneratorCkeditorPluginsSaveLangKaJs,
	"static/generator/ckeditor/plugins/save/lang/km.js": staticGeneratorCkeditorPluginsSaveLangKmJs,
	"static/generator/ckeditor/plugins/save/lang/ko.js": staticGeneratorCkeditorPluginsSaveLangKoJs,
	"static/generator/ckeditor/plugins/save/lang/ku.js": staticGeneratorCkeditorPluginsSaveLangKuJs,
	"static/generator/ckeditor/plugins/save/lang/lt.js": staticGeneratorCkeditorPluginsSaveLangLtJs,
	"static/generator/ckeditor/plugins/save/lang/lv.js": staticGeneratorCkeditorPluginsSaveLangLvJs,
	"static/generator/ckeditor/plugins/save/lang/mk.js": staticGeneratorCkeditorPluginsSaveLangMkJs,
	"static/generator/ckeditor/plugins/save/lang/mn.js": staticGeneratorCkeditorPluginsSaveLangMnJs,
	"static/generator/ckeditor/plugins/save/lang/ms.js": staticGeneratorCkeditorPluginsSaveLangMsJs,
	"static/generator/ckeditor/plugins/save/lang/nb.js": staticGeneratorCkeditorPluginsSaveLangNbJs,
	"static/generator/ckeditor/plugins/save/lang/nl.js": staticGeneratorCkeditorPluginsSaveLangNlJs,
	"static/generator/ckeditor/plugins/save/lang/no.js": staticGeneratorCkeditorPluginsSaveLangNoJs,
	"static/generator/ckeditor/plugins/save/lang/oc.js": staticGeneratorCkeditorPluginsSaveLangOcJs,
	"static/generator/ckeditor/plugins/save/lang/pl.js": staticGeneratorCkeditorPluginsSaveLangPlJs,
	"static/generator/ckeditor/plugins/save/lang/pt-br.js": staticGeneratorCkeditorPluginsSaveLangPtBrJs,
	"static/generator/ckeditor/plugins/save/lang/pt.js": staticGeneratorCkeditorPluginsSaveLangPtJs,
	"static/generator/ckeditor/plugins/save/lang/ro.js": staticGeneratorCkeditorPluginsSaveLangRoJs,
	"static/generator/ckeditor/plugins/save/lang/ru.js": staticGeneratorCkeditorPluginsSaveLangRuJs,
	"static/generator/ckeditor/plugins/save/lang/si.js": staticGeneratorCkeditorPluginsSaveLangSiJs,
	"static/generator/ckeditor/plugins/save/lang/sk.js": staticGeneratorCkeditorPluginsSaveLangSkJs,
	"static/generator/ckeditor/plugins/save/lang/sl.js": staticGeneratorCkeditorPluginsSaveLangSlJs,
	"static/generator/ckeditor/plugins/save/lang/sq.js": staticGeneratorCkeditorPluginsSaveLangSqJs,
	"static/generator/ckeditor/plugins/save/lang/sr-latn.js": staticGeneratorCkeditorPluginsSaveLangSrLatnJs,
	"static/generator/ckeditor/plugins/save/lang/sr.js": staticGeneratorCkeditorPluginsSaveLangSrJs,
	"static/generator/ckeditor/plugins/save/lang/sv.js": staticGeneratorCkeditorPluginsSaveLangSvJs,
	"static/generator/ckeditor/plugins/save/lang/th.js": staticGeneratorCkeditorPluginsSaveLangThJs,
	"static/generator/ckeditor/plugins/save/lang/tr.js": staticGeneratorCkeditorPluginsSaveLangTrJs,
	"static/generator/ckeditor/plugins/save/lang/tt.js": staticGeneratorCkeditorPluginsSaveLangTtJs,
	"static/generator/ckeditor/plugins/save/lang/ug.js": staticGeneratorCkeditorPluginsSaveLangUgJs,
	"static/generator/ckeditor/plugins/save/lang/uk.js": staticGeneratorCkeditorPluginsSaveLangUkJs,
	"static/generator/ckeditor/plugins/save/lang/vi.js": staticGeneratorCkeditorPluginsSaveLangViJs,
	"static/generator/ckeditor/plugins/save/lang/zh-cn.js": staticGeneratorCkeditorPluginsSaveLangZhCnJs,
	"static/generator/ckeditor/plugins/save/lang/zh.js": staticGeneratorCkeditorPluginsSaveLangZhJs,
	"static/generator/ckeditor/plugins/save/plugin.js": staticGeneratorCkeditorPluginsSavePluginJs,
	"static/generator/ckeditor/plugins/scayt/CHANGELOG.md": staticGeneratorCkeditorPluginsScaytChangelogMd,
	"static/generator/ckeditor/plugins/scayt/LICENSE.md": staticGeneratorCkeditorPluginsScaytLicenseMd,
	"static/generator/ckeditor/plugins/scayt/README.md": staticGeneratorCkeditorPluginsScaytReadmeMd,
	"static/generator/ckeditor/plugins/scayt/dialogs/options.js": staticGeneratorCkeditorPluginsScaytDialogsOptionsJs,
	"static/generator/ckeditor/plugins/scayt/dialogs/toolbar.css": staticGeneratorCkeditorPluginsScaytDialogsToolbarCss,
	"static/generator/ckeditor/plugins/scayt/icons/hidpi/scayt.png": staticGeneratorCkeditorPluginsScaytIconsHidpiScaytPng,
	"static/generator/ckeditor/plugins/scayt/icons/scayt.png": staticGeneratorCkeditorPluginsScaytIconsScaytPng,
	"static/generator/ckeditor/plugins/scayt/lang/af.js": staticGeneratorCkeditorPluginsScaytLangAfJs,
	"static/generator/ckeditor/plugins/scayt/lang/ar.js": staticGeneratorCkeditorPluginsScaytLangArJs,
	"static/generator/ckeditor/plugins/scayt/lang/bg.js": staticGeneratorCkeditorPluginsScaytLangBgJs,
	"static/generator/ckeditor/plugins/scayt/lang/bn.js": staticGeneratorCkeditorPluginsScaytLangBnJs,
	"static/generator/ckeditor/plugins/scayt/lang/bs.js": staticGeneratorCkeditorPluginsScaytLangBsJs,
	"static/generator/ckeditor/plugins/scayt/lang/ca.js": staticGeneratorCkeditorPluginsScaytLangCaJs,
	"static/generator/ckeditor/plugins/scayt/lang/cs.js": staticGeneratorCkeditorPluginsScaytLangCsJs,
	"static/generator/ckeditor/plugins/scayt/lang/cy.js": staticGeneratorCkeditorPluginsScaytLangCyJs,
	"static/generator/ckeditor/plugins/scayt/lang/da.js": staticGeneratorCkeditorPluginsScaytLangDaJs,
	"static/generator/ckeditor/plugins/scayt/lang/de.js": staticGeneratorCkeditorPluginsScaytLangDeJs,
	"static/generator/ckeditor/plugins/scayt/lang/el.js": staticGeneratorCkeditorPluginsScaytLangElJs,
	"static/generator/ckeditor/plugins/scayt/lang/en-au.js": staticGeneratorCkeditorPluginsScaytLangEnAuJs,
	"static/generator/ckeditor/plugins/scayt/lang/en-ca.js": staticGeneratorCkeditorPluginsScaytLangEnCaJs,
	"static/generator/ckeditor/plugins/scayt/lang/en-gb.js": staticGeneratorCkeditorPluginsScaytLangEnGbJs,
	"static/generator/ckeditor/plugins/scayt/lang/en.js": staticGeneratorCkeditorPluginsScaytLangEnJs,
	"static/generator/ckeditor/plugins/scayt/lang/eo.js": staticGeneratorCkeditorPluginsScaytLangEoJs,
	"static/generator/ckeditor/plugins/scayt/lang/es.js": staticGeneratorCkeditorPluginsScaytLangEsJs,
	"static/generator/ckeditor/plugins/scayt/lang/et.js": staticGeneratorCkeditorPluginsScaytLangEtJs,
	"static/generator/ckeditor/plugins/scayt/lang/eu.js": staticGeneratorCkeditorPluginsScaytLangEuJs,
	"static/generator/ckeditor/plugins/scayt/lang/fa.js": staticGeneratorCkeditorPluginsScaytLangFaJs,
	"static/generator/ckeditor/plugins/scayt/lang/fi.js": staticGeneratorCkeditorPluginsScaytLangFiJs,
	"static/generator/ckeditor/plugins/scayt/lang/fo.js": staticGeneratorCkeditorPluginsScaytLangFoJs,
	"static/generator/ckeditor/plugins/scayt/lang/fr-ca.js": staticGeneratorCkeditorPluginsScaytLangFrCaJs,
	"static/generator/ckeditor/plugins/scayt/lang/fr.js": staticGeneratorCkeditorPluginsScaytLangFrJs,
	"static/generator/ckeditor/plugins/scayt/lang/gl.js": staticGeneratorCkeditorPluginsScaytLangGlJs,
	"static/generator/ckeditor/plugins/scayt/lang/gu.js": staticGeneratorCkeditorPluginsScaytLangGuJs,
	"static/generator/ckeditor/plugins/scayt/lang/he.js": staticGeneratorCkeditorPluginsScaytLangHeJs,
	"static/generator/ckeditor/plugins/scayt/lang/hi.js": staticGeneratorCkeditorPluginsScaytLangHiJs,
	"static/generator/ckeditor/plugins/scayt/lang/hr.js": staticGeneratorCkeditorPluginsScaytLangHrJs,
	"static/generator/ckeditor/plugins/scayt/lang/hu.js": staticGeneratorCkeditorPluginsScaytLangHuJs,
	"static/generator/ckeditor/plugins/scayt/lang/is.js": staticGeneratorCkeditorPluginsScaytLangIsJs,
	"static/generator/ckeditor/plugins/scayt/lang/it.js": staticGeneratorCkeditorPluginsScaytLangItJs,
	"static/generator/ckeditor/plugins/scayt/lang/ja.js": staticGeneratorCkeditorPluginsScaytLangJaJs,
	"static/generator/ckeditor/plugins/scayt/lang/ka.js": staticGeneratorCkeditorPluginsScaytLangKaJs,
	"static/generator/ckeditor/plugins/scayt/lang/km.js": staticGeneratorCkeditorPluginsScaytLangKmJs,
	"static/generator/ckeditor/plugins/scayt/lang/ko.js": staticGeneratorCkeditorPluginsScaytLangKoJs,
	"static/generator/ckeditor/plugins/scayt/lang/ku.js": staticGeneratorCkeditorPluginsScaytLangKuJs,
	"static/generator/ckeditor/plugins/scayt/lang/lt.js": staticGeneratorCkeditorPluginsScaytLangLtJs,
	"static/generator/ckeditor/plugins/scayt/lang/lv.js": staticGeneratorCkeditorPluginsScaytLangLvJs,
	"static/generator/ckeditor/plugins/scayt/lang/mk.js": staticGeneratorCkeditorPluginsScaytLangMkJs,
	"static/generator/ckeditor/plugins/scayt/lang/mn.js": staticGeneratorCkeditorPluginsScaytLangMnJs,
	"static/generator/ckeditor/plugins/scayt/lang/ms.js": staticGeneratorCkeditorPluginsScaytLangMsJs,
	"static/generator/ckeditor/plugins/scayt/lang/nb.js": staticGeneratorCkeditorPluginsScaytLangNbJs,
	"static/generator/ckeditor/plugins/scayt/lang/nl.js": staticGeneratorCkeditorPluginsScaytLangNlJs,
	"static/generator/ckeditor/plugins/scayt/lang/no.js": staticGeneratorCkeditorPluginsScaytLangNoJs,
	"static/generator/ckeditor/plugins/scayt/lang/pl.js": staticGeneratorCkeditorPluginsScaytLangPlJs,
	"static/generator/ckeditor/plugins/scayt/lang/pt-br.js": staticGeneratorCkeditorPluginsScaytLangPtBrJs,
	"static/generator/ckeditor/plugins/scayt/lang/pt.js": staticGeneratorCkeditorPluginsScaytLangPtJs,
	"static/generator/ckeditor/plugins/scayt/lang/ro.js": staticGeneratorCkeditorPluginsScaytLangRoJs,
	"static/generator/ckeditor/plugins/scayt/lang/ru.js": staticGeneratorCkeditorPluginsScaytLangRuJs,
	"static/generator/ckeditor/plugins/scayt/lang/sk.js": staticGeneratorCkeditorPluginsScaytLangSkJs,
	"static/generator/ckeditor/plugins/scayt/lang/sl.js": staticGeneratorCkeditorPluginsScaytLangSlJs,
	"static/generator/ckeditor/plugins/scayt/lang/sr-latn.js": staticGeneratorCkeditorPluginsScaytLangSrLatnJs,
	"static/generator/ckeditor/plugins/scayt/lang/sr.js": staticGeneratorCkeditorPluginsScaytLangSrJs,
	"static/generator/ckeditor/plugins/scayt/lang/sv.js": staticGeneratorCkeditorPluginsScaytLangSvJs,
	"static/generator/ckeditor/plugins/scayt/lang/th.js": staticGeneratorCkeditorPluginsScaytLangThJs,
	"static/generator/ckeditor/plugins/scayt/lang/tr.js": staticGeneratorCkeditorPluginsScaytLangTrJs,
	"static/generator/ckeditor/plugins/scayt/lang/ug.js": staticGeneratorCkeditorPluginsScaytLangUgJs,
	"static/generator/ckeditor/plugins/scayt/lang/uk.js": staticGeneratorCkeditorPluginsScaytLangUkJs,
	"static/generator/ckeditor/plugins/scayt/lang/vi.js": staticGeneratorCkeditorPluginsScaytLangViJs,
	"static/generator/ckeditor/plugins/scayt/lang/zh-cn.js": staticGeneratorCkeditorPluginsScaytLangZhCnJs,
	"static/generator/ckeditor/plugins/scayt/lang/zh.js": staticGeneratorCkeditorPluginsScaytLangZhJs,
	"static/generator/ckeditor/plugins/scayt/plugin.js": staticGeneratorCkeditorPluginsScaytPluginJs,
	"static/generator/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css": staticGeneratorCkeditorPluginsScaytSkinsMoonoLisaScaytCss,
	"static/generator/ckeditor/plugins/selectall/icons/hidpi/selectall.png": staticGeneratorCkeditorPluginsSelectallIconsHidpiSelectallPng,
	"static/generator/ckeditor/plugins/selectall/icons/selectall.png": staticGeneratorCkeditorPluginsSelectallIconsSelectallPng,
	"static/generator/ckeditor/plugins/selectall/lang/af.js": staticGeneratorCkeditorPluginsSelectallLangAfJs,
	"static/generator/ckeditor/plugins/selectall/lang/ar.js": staticGeneratorCkeditorPluginsSelectallLangArJs,
	"static/generator/ckeditor/plugins/selectall/lang/az.js": staticGeneratorCkeditorPluginsSelectallLangAzJs,
	"static/generator/ckeditor/plugins/selectall/lang/bg.js": staticGeneratorCkeditorPluginsSelectallLangBgJs,
	"static/generator/ckeditor/plugins/selectall/lang/bn.js": staticGeneratorCkeditorPluginsSelectallLangBnJs,
	"static/generator/ckeditor/plugins/selectall/lang/bs.js": staticGeneratorCkeditorPluginsSelectallLangBsJs,
	"static/generator/ckeditor/plugins/selectall/lang/ca.js": staticGeneratorCkeditorPluginsSelectallLangCaJs,
	"static/generator/ckeditor/plugins/selectall/lang/cs.js": staticGeneratorCkeditorPluginsSelectallLangCsJs,
	"static/generator/ckeditor/plugins/selectall/lang/cy.js": staticGeneratorCkeditorPluginsSelectallLangCyJs,
	"static/generator/ckeditor/plugins/selectall/lang/da.js": staticGeneratorCkeditorPluginsSelectallLangDaJs,
	"static/generator/ckeditor/plugins/selectall/lang/de-ch.js": staticGeneratorCkeditorPluginsSelectallLangDeChJs,
	"static/generator/ckeditor/plugins/selectall/lang/de.js": staticGeneratorCkeditorPluginsSelectallLangDeJs,
	"static/generator/ckeditor/plugins/selectall/lang/el.js": staticGeneratorCkeditorPluginsSelectallLangElJs,
	"static/generator/ckeditor/plugins/selectall/lang/en-au.js": staticGeneratorCkeditorPluginsSelectallLangEnAuJs,
	"static/generator/ckeditor/plugins/selectall/lang/en-ca.js": staticGeneratorCkeditorPluginsSelectallLangEnCaJs,
	"static/generator/ckeditor/plugins/selectall/lang/en-gb.js": staticGeneratorCkeditorPluginsSelectallLangEnGbJs,
	"static/generator/ckeditor/plugins/selectall/lang/en.js": staticGeneratorCkeditorPluginsSelectallLangEnJs,
	"static/generator/ckeditor/plugins/selectall/lang/eo.js": staticGeneratorCkeditorPluginsSelectallLangEoJs,
	"static/generator/ckeditor/plugins/selectall/lang/es.js": staticGeneratorCkeditorPluginsSelectallLangEsJs,
	"static/generator/ckeditor/plugins/selectall/lang/et.js": staticGeneratorCkeditorPluginsSelectallLangEtJs,
	"static/generator/ckeditor/plugins/selectall/lang/eu.js": staticGeneratorCkeditorPluginsSelectallLangEuJs,
	"static/generator/ckeditor/plugins/selectall/lang/fa.js": staticGeneratorCkeditorPluginsSelectallLangFaJs,
	"static/generator/ckeditor/plugins/selectall/lang/fi.js": staticGeneratorCkeditorPluginsSelectallLangFiJs,
	"static/generator/ckeditor/plugins/selectall/lang/fo.js": staticGeneratorCkeditorPluginsSelectallLangFoJs,
	"static/generator/ckeditor/plugins/selectall/lang/fr-ca.js": staticGeneratorCkeditorPluginsSelectallLangFrCaJs,
	"static/generator/ckeditor/plugins/selectall/lang/fr.js": staticGeneratorCkeditorPluginsSelectallLangFrJs,
	"static/generator/ckeditor/plugins/selectall/lang/gl.js": staticGeneratorCkeditorPluginsSelectallLangGlJs,
	"static/generator/ckeditor/plugins/selectall/lang/gu.js": staticGeneratorCkeditorPluginsSelectallLangGuJs,
	"static/generator/ckeditor/plugins/selectall/lang/he.js": staticGeneratorCkeditorPluginsSelectallLangHeJs,
	"static/generator/ckeditor/plugins/selectall/lang/hi.js": staticGeneratorCkeditorPluginsSelectallLangHiJs,
	"static/generator/ckeditor/plugins/selectall/lang/hr.js": staticGeneratorCkeditorPluginsSelectallLangHrJs,
	"static/generator/ckeditor/plugins/selectall/lang/hu.js": staticGeneratorCkeditorPluginsSelectallLangHuJs,
	"static/generator/ckeditor/plugins/selectall/lang/id.js": staticGeneratorCkeditorPluginsSelectallLangIdJs,
	"static/generator/ckeditor/plugins/selectall/lang/is.js": staticGeneratorCkeditorPluginsSelectallLangIsJs,
	"static/generator/ckeditor/plugins/selectall/lang/it.js": staticGeneratorCkeditorPluginsSelectallLangItJs,
	"static/generator/ckeditor/plugins/selectall/lang/ja.js": staticGeneratorCkeditorPluginsSelectallLangJaJs,
	"static/generator/ckeditor/plugins/selectall/lang/ka.js": staticGeneratorCkeditorPluginsSelectallLangKaJs,
	"static/generator/ckeditor/plugins/selectall/lang/km.js": staticGeneratorCkeditorPluginsSelectallLangKmJs,
	"static/generator/ckeditor/plugins/selectall/lang/ko.js": staticGeneratorCkeditorPluginsSelectallLangKoJs,
	"static/generator/ckeditor/plugins/selectall/lang/ku.js": staticGeneratorCkeditorPluginsSelectallLangKuJs,
	"static/generator/ckeditor/plugins/selectall/lang/lt.js": staticGeneratorCkeditorPluginsSelectallLangLtJs,
	"static/generator/ckeditor/plugins/selectall/lang/lv.js": staticGeneratorCkeditorPluginsSelectallLangLvJs,
	"static/generator/ckeditor/plugins/selectall/lang/mk.js": staticGeneratorCkeditorPluginsSelectallLangMkJs,
	"static/generator/ckeditor/plugins/selectall/lang/mn.js": staticGeneratorCkeditorPluginsSelectallLangMnJs,
	"static/generator/ckeditor/plugins/selectall/lang/ms.js": staticGeneratorCkeditorPluginsSelectallLangMsJs,
	"static/generator/ckeditor/plugins/selectall/lang/nb.js": staticGeneratorCkeditorPluginsSelectallLangNbJs,
	"static/generator/ckeditor/plugins/selectall/lang/nl.js": staticGeneratorCkeditorPluginsSelectallLangNlJs,
	"static/generator/ckeditor/plugins/selectall/lang/no.js": staticGeneratorCkeditorPluginsSelectallLangNoJs,
	"static/generator/ckeditor/plugins/selectall/lang/oc.js": staticGeneratorCkeditorPluginsSelectallLangOcJs,
	"static/generator/ckeditor/plugins/selectall/lang/pl.js": staticGeneratorCkeditorPluginsSelectallLangPlJs,
	"static/generator/ckeditor/plugins/selectall/lang/pt-br.js": staticGeneratorCkeditorPluginsSelectallLangPtBrJs,
	"static/generator/ckeditor/plugins/selectall/lang/pt.js": staticGeneratorCkeditorPluginsSelectallLangPtJs,
	"static/generator/ckeditor/plugins/selectall/lang/ro.js": staticGeneratorCkeditorPluginsSelectallLangRoJs,
	"static/generator/ckeditor/plugins/selectall/lang/ru.js": staticGeneratorCkeditorPluginsSelectallLangRuJs,
	"static/generator/ckeditor/plugins/selectall/lang/si.js": staticGeneratorCkeditorPluginsSelectallLangSiJs,
	"static/generator/ckeditor/plugins/selectall/lang/sk.js": staticGeneratorCkeditorPluginsSelectallLangSkJs,
	"static/generator/ckeditor/plugins/selectall/lang/sl.js": staticGeneratorCkeditorPluginsSelectallLangSlJs,
	"static/generator/ckeditor/plugins/selectall/lang/sq.js": staticGeneratorCkeditorPluginsSelectallLangSqJs,
	"static/generator/ckeditor/plugins/selectall/lang/sr-latn.js": staticGeneratorCkeditorPluginsSelectallLangSrLatnJs,
	"static/generator/ckeditor/plugins/selectall/lang/sr.js": staticGeneratorCkeditorPluginsSelectallLangSrJs,
	"static/generator/ckeditor/plugins/selectall/lang/sv.js": staticGeneratorCkeditorPluginsSelectallLangSvJs,
	"static/generator/ckeditor/plugins/selectall/lang/th.js": staticGeneratorCkeditorPluginsSelectallLangThJs,
	"static/generator/ckeditor/plugins/selectall/lang/tr.js": staticGeneratorCkeditorPluginsSelectallLangTrJs,
	"static/generator/ckeditor/plugins/selectall/lang/tt.js": staticGeneratorCkeditorPluginsSelectallLangTtJs,
	"static/generator/ckeditor/plugins/selectall/lang/ug.js": staticGeneratorCkeditorPluginsSelectallLangUgJs,
	"static/generator/ckeditor/plugins/selectall/lang/uk.js": staticGeneratorCkeditorPluginsSelectallLangUkJs,
	"static/generator/ckeditor/plugins/selectall/lang/vi.js": staticGeneratorCkeditorPluginsSelectallLangViJs,
	"static/generator/ckeditor/plugins/selectall/lang/zh-cn.js": staticGeneratorCkeditorPluginsSelectallLangZhCnJs,
	"static/generator/ckeditor/plugins/selectall/lang/zh.js": staticGeneratorCkeditorPluginsSelectallLangZhJs,
	"static/generator/ckeditor/plugins/selectall/plugin.js": staticGeneratorCkeditorPluginsSelectallPluginJs,
	"static/generator/ckeditor/plugins/showblocks/icons/hidpi/showblocks-rtl.png": staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksRtlPng,
	"static/generator/ckeditor/plugins/showblocks/icons/hidpi/showblocks.png": staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksPng,
	"static/generator/ckeditor/plugins/showblocks/icons/showblocks-rtl.png": staticGeneratorCkeditorPluginsShowblocksIconsShowblocksRtlPng,
	"static/generator/ckeditor/plugins/showblocks/icons/showblocks.png": staticGeneratorCkeditorPluginsShowblocksIconsShowblocksPng,
	"static/generator/ckeditor/plugins/showblocks/images/block_address.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_addressPng,
	"static/generator/ckeditor/plugins/showblocks/images/block_blockquote.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_blockquotePng,
	"static/generator/ckeditor/plugins/showblocks/images/block_div.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_divPng,
	"static/generator/ckeditor/plugins/showblocks/images/block_h1.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_h1Png,
	"static/generator/ckeditor/plugins/showblocks/images/block_h2.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_h2Png,
	"static/generator/ckeditor/plugins/showblocks/images/block_h3.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_h3Png,
	"static/generator/ckeditor/plugins/showblocks/images/block_h4.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_h4Png,
	"static/generator/ckeditor/plugins/showblocks/images/block_h5.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_h5Png,
	"static/generator/ckeditor/plugins/showblocks/images/block_h6.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_h6Png,
	"static/generator/ckeditor/plugins/showblocks/images/block_p.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_pPng,
	"static/generator/ckeditor/plugins/showblocks/images/block_pre.png": staticGeneratorCkeditorPluginsShowblocksImagesBlock_prePng,
	"static/generator/ckeditor/plugins/showblocks/lang/af.js": staticGeneratorCkeditorPluginsShowblocksLangAfJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ar.js": staticGeneratorCkeditorPluginsShowblocksLangArJs,
	"static/generator/ckeditor/plugins/showblocks/lang/az.js": staticGeneratorCkeditorPluginsShowblocksLangAzJs,
	"static/generator/ckeditor/plugins/showblocks/lang/bg.js": staticGeneratorCkeditorPluginsShowblocksLangBgJs,
	"static/generator/ckeditor/plugins/showblocks/lang/bn.js": staticGeneratorCkeditorPluginsShowblocksLangBnJs,
	"static/generator/ckeditor/plugins/showblocks/lang/bs.js": staticGeneratorCkeditorPluginsShowblocksLangBsJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ca.js": staticGeneratorCkeditorPluginsShowblocksLangCaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/cs.js": staticGeneratorCkeditorPluginsShowblocksLangCsJs,
	"static/generator/ckeditor/plugins/showblocks/lang/cy.js": staticGeneratorCkeditorPluginsShowblocksLangCyJs,
	"static/generator/ckeditor/plugins/showblocks/lang/da.js": staticGeneratorCkeditorPluginsShowblocksLangDaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/de-ch.js": staticGeneratorCkeditorPluginsShowblocksLangDeChJs,
	"static/generator/ckeditor/plugins/showblocks/lang/de.js": staticGeneratorCkeditorPluginsShowblocksLangDeJs,
	"static/generator/ckeditor/plugins/showblocks/lang/el.js": staticGeneratorCkeditorPluginsShowblocksLangElJs,
	"static/generator/ckeditor/plugins/showblocks/lang/en-au.js": staticGeneratorCkeditorPluginsShowblocksLangEnAuJs,
	"static/generator/ckeditor/plugins/showblocks/lang/en-ca.js": staticGeneratorCkeditorPluginsShowblocksLangEnCaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/en-gb.js": staticGeneratorCkeditorPluginsShowblocksLangEnGbJs,
	"static/generator/ckeditor/plugins/showblocks/lang/en.js": staticGeneratorCkeditorPluginsShowblocksLangEnJs,
	"static/generator/ckeditor/plugins/showblocks/lang/eo.js": staticGeneratorCkeditorPluginsShowblocksLangEoJs,
	"static/generator/ckeditor/plugins/showblocks/lang/es.js": staticGeneratorCkeditorPluginsShowblocksLangEsJs,
	"static/generator/ckeditor/plugins/showblocks/lang/et.js": staticGeneratorCkeditorPluginsShowblocksLangEtJs,
	"static/generator/ckeditor/plugins/showblocks/lang/eu.js": staticGeneratorCkeditorPluginsShowblocksLangEuJs,
	"static/generator/ckeditor/plugins/showblocks/lang/fa.js": staticGeneratorCkeditorPluginsShowblocksLangFaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/fi.js": staticGeneratorCkeditorPluginsShowblocksLangFiJs,
	"static/generator/ckeditor/plugins/showblocks/lang/fo.js": staticGeneratorCkeditorPluginsShowblocksLangFoJs,
	"static/generator/ckeditor/plugins/showblocks/lang/fr-ca.js": staticGeneratorCkeditorPluginsShowblocksLangFrCaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/fr.js": staticGeneratorCkeditorPluginsShowblocksLangFrJs,
	"static/generator/ckeditor/plugins/showblocks/lang/gl.js": staticGeneratorCkeditorPluginsShowblocksLangGlJs,
	"static/generator/ckeditor/plugins/showblocks/lang/gu.js": staticGeneratorCkeditorPluginsShowblocksLangGuJs,
	"static/generator/ckeditor/plugins/showblocks/lang/he.js": staticGeneratorCkeditorPluginsShowblocksLangHeJs,
	"static/generator/ckeditor/plugins/showblocks/lang/hi.js": staticGeneratorCkeditorPluginsShowblocksLangHiJs,
	"static/generator/ckeditor/plugins/showblocks/lang/hr.js": staticGeneratorCkeditorPluginsShowblocksLangHrJs,
	"static/generator/ckeditor/plugins/showblocks/lang/hu.js": staticGeneratorCkeditorPluginsShowblocksLangHuJs,
	"static/generator/ckeditor/plugins/showblocks/lang/id.js": staticGeneratorCkeditorPluginsShowblocksLangIdJs,
	"static/generator/ckeditor/plugins/showblocks/lang/is.js": staticGeneratorCkeditorPluginsShowblocksLangIsJs,
	"static/generator/ckeditor/plugins/showblocks/lang/it.js": staticGeneratorCkeditorPluginsShowblocksLangItJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ja.js": staticGeneratorCkeditorPluginsShowblocksLangJaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ka.js": staticGeneratorCkeditorPluginsShowblocksLangKaJs,
	"static/generator/ckeditor/plugins/showblocks/lang/km.js": staticGeneratorCkeditorPluginsShowblocksLangKmJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ko.js": staticGeneratorCkeditorPluginsShowblocksLangKoJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ku.js": staticGeneratorCkeditorPluginsShowblocksLangKuJs,
	"static/generator/ckeditor/plugins/showblocks/lang/lt.js": staticGeneratorCkeditorPluginsShowblocksLangLtJs,
	"static/generator/ckeditor/plugins/showblocks/lang/lv.js": staticGeneratorCkeditorPluginsShowblocksLangLvJs,
	"static/generator/ckeditor/plugins/showblocks/lang/mk.js": staticGeneratorCkeditorPluginsShowblocksLangMkJs,
	"static/generator/ckeditor/plugins/showblocks/lang/mn.js": staticGeneratorCkeditorPluginsShowblocksLangMnJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ms.js": staticGeneratorCkeditorPluginsShowblocksLangMsJs,
	"static/generator/ckeditor/plugins/showblocks/lang/nb.js": staticGeneratorCkeditorPluginsShowblocksLangNbJs,
	"static/generator/ckeditor/plugins/showblocks/lang/nl.js": staticGeneratorCkeditorPluginsShowblocksLangNlJs,
	"static/generator/ckeditor/plugins/showblocks/lang/no.js": staticGeneratorCkeditorPluginsShowblocksLangNoJs,
	"static/generator/ckeditor/plugins/showblocks/lang/oc.js": staticGeneratorCkeditorPluginsShowblocksLangOcJs,
	"static/generator/ckeditor/plugins/showblocks/lang/pl.js": staticGeneratorCkeditorPluginsShowblocksLangPlJs,
	"static/generator/ckeditor/plugins/showblocks/lang/pt-br.js": staticGeneratorCkeditorPluginsShowblocksLangPtBrJs,
	"static/generator/ckeditor/plugins/showblocks/lang/pt.js": staticGeneratorCkeditorPluginsShowblocksLangPtJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ro.js": staticGeneratorCkeditorPluginsShowblocksLangRoJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ru.js": staticGeneratorCkeditorPluginsShowblocksLangRuJs,
	"static/generator/ckeditor/plugins/showblocks/lang/si.js": staticGeneratorCkeditorPluginsShowblocksLangSiJs,
	"static/generator/ckeditor/plugins/showblocks/lang/sk.js": staticGeneratorCkeditorPluginsShowblocksLangSkJs,
	"static/generator/ckeditor/plugins/showblocks/lang/sl.js": staticGeneratorCkeditorPluginsShowblocksLangSlJs,
	"static/generator/ckeditor/plugins/showblocks/lang/sq.js": staticGeneratorCkeditorPluginsShowblocksLangSqJs,
	"static/generator/ckeditor/plugins/showblocks/lang/sr-latn.js": staticGeneratorCkeditorPluginsShowblocksLangSrLatnJs,
	"static/generator/ckeditor/plugins/showblocks/lang/sr.js": staticGeneratorCkeditorPluginsShowblocksLangSrJs,
	"static/generator/ckeditor/plugins/showblocks/lang/sv.js": staticGeneratorCkeditorPluginsShowblocksLangSvJs,
	"static/generator/ckeditor/plugins/showblocks/lang/th.js": staticGeneratorCkeditorPluginsShowblocksLangThJs,
	"static/generator/ckeditor/plugins/showblocks/lang/tr.js": staticGeneratorCkeditorPluginsShowblocksLangTrJs,
	"static/generator/ckeditor/plugins/showblocks/lang/tt.js": staticGeneratorCkeditorPluginsShowblocksLangTtJs,
	"static/generator/ckeditor/plugins/showblocks/lang/ug.js": staticGeneratorCkeditorPluginsShowblocksLangUgJs,
	"static/generator/ckeditor/plugins/showblocks/lang/uk.js": staticGeneratorCkeditorPluginsShowblocksLangUkJs,
	"static/generator/ckeditor/plugins/showblocks/lang/vi.js": staticGeneratorCkeditorPluginsShowblocksLangViJs,
	"static/generator/ckeditor/plugins/showblocks/lang/zh-cn.js": staticGeneratorCkeditorPluginsShowblocksLangZhCnJs,
	"static/generator/ckeditor/plugins/showblocks/lang/zh.js": staticGeneratorCkeditorPluginsShowblocksLangZhJs,
	"static/generator/ckeditor/plugins/showblocks/plugin.js": staticGeneratorCkeditorPluginsShowblocksPluginJs,
	"static/generator/ckeditor/plugins/showborders/plugin.js": staticGeneratorCkeditorPluginsShowbordersPluginJs,
	"static/generator/ckeditor/plugins/smiley/dialogs/smiley.js": staticGeneratorCkeditorPluginsSmileyDialogsSmileyJs,
	"static/generator/ckeditor/plugins/smiley/icons/hidpi/smiley.png": staticGeneratorCkeditorPluginsSmileyIconsHidpiSmileyPng,
	"static/generator/ckeditor/plugins/smiley/icons/smiley.png": staticGeneratorCkeditorPluginsSmileyIconsSmileyPng,
	"static/generator/ckeditor/plugins/smiley/images/angel_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesAngel_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/angel_smile.png": staticGeneratorCkeditorPluginsSmileyImagesAngel_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/angry_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesAngry_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/angry_smile.png": staticGeneratorCkeditorPluginsSmileyImagesAngry_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/broken_heart.gif": staticGeneratorCkeditorPluginsSmileyImagesBroken_heartGif,
	"static/generator/ckeditor/plugins/smiley/images/broken_heart.png": staticGeneratorCkeditorPluginsSmileyImagesBroken_heartPng,
	"static/generator/ckeditor/plugins/smiley/images/confused_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesConfused_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/confused_smile.png": staticGeneratorCkeditorPluginsSmileyImagesConfused_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/cry_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesCry_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/cry_smile.png": staticGeneratorCkeditorPluginsSmileyImagesCry_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/devil_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesDevil_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/devil_smile.png": staticGeneratorCkeditorPluginsSmileyImagesDevil_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/embaressed_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesEmbaressed_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/embarrassed_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/embarrassed_smile.png": staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/envelope.gif": staticGeneratorCkeditorPluginsSmileyImagesEnvelopeGif,
	"static/generator/ckeditor/plugins/smiley/images/envelope.png": staticGeneratorCkeditorPluginsSmileyImagesEnvelopePng,
	"static/generator/ckeditor/plugins/smiley/images/heart.gif": staticGeneratorCkeditorPluginsSmileyImagesHeartGif,
	"static/generator/ckeditor/plugins/smiley/images/heart.png": staticGeneratorCkeditorPluginsSmileyImagesHeartPng,
	"static/generator/ckeditor/plugins/smiley/images/kiss.gif": staticGeneratorCkeditorPluginsSmileyImagesKissGif,
	"static/generator/ckeditor/plugins/smiley/images/kiss.png": staticGeneratorCkeditorPluginsSmileyImagesKissPng,
	"static/generator/ckeditor/plugins/smiley/images/lightbulb.gif": staticGeneratorCkeditorPluginsSmileyImagesLightbulbGif,
	"static/generator/ckeditor/plugins/smiley/images/lightbulb.png": staticGeneratorCkeditorPluginsSmileyImagesLightbulbPng,
	"static/generator/ckeditor/plugins/smiley/images/omg_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesOmg_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/omg_smile.png": staticGeneratorCkeditorPluginsSmileyImagesOmg_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/regular_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesRegular_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/regular_smile.png": staticGeneratorCkeditorPluginsSmileyImagesRegular_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/sad_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesSad_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/sad_smile.png": staticGeneratorCkeditorPluginsSmileyImagesSad_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/shades_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesShades_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/shades_smile.png": staticGeneratorCkeditorPluginsSmileyImagesShades_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/teeth_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesTeeth_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/teeth_smile.png": staticGeneratorCkeditorPluginsSmileyImagesTeeth_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/thumbs_down.gif": staticGeneratorCkeditorPluginsSmileyImagesThumbs_downGif,
	"static/generator/ckeditor/plugins/smiley/images/thumbs_down.png": staticGeneratorCkeditorPluginsSmileyImagesThumbs_downPng,
	"static/generator/ckeditor/plugins/smiley/images/thumbs_up.gif": staticGeneratorCkeditorPluginsSmileyImagesThumbs_upGif,
	"static/generator/ckeditor/plugins/smiley/images/thumbs_up.png": staticGeneratorCkeditorPluginsSmileyImagesThumbs_upPng,
	"static/generator/ckeditor/plugins/smiley/images/tongue_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesTongue_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/tongue_smile.png": staticGeneratorCkeditorPluginsSmileyImagesTongue_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/tounge_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesTounge_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/whatchutalkingabout_smile.png": staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smilePng,
	"static/generator/ckeditor/plugins/smiley/images/wink_smile.gif": staticGeneratorCkeditorPluginsSmileyImagesWink_smileGif,
	"static/generator/ckeditor/plugins/smiley/images/wink_smile.png": staticGeneratorCkeditorPluginsSmileyImagesWink_smilePng,
	"static/generator/ckeditor/plugins/smiley/lang/af.js": staticGeneratorCkeditorPluginsSmileyLangAfJs,
	"static/generator/ckeditor/plugins/smiley/lang/ar.js": staticGeneratorCkeditorPluginsSmileyLangArJs,
	"static/generator/ckeditor/plugins/smiley/lang/az.js": staticGeneratorCkeditorPluginsSmileyLangAzJs,
	"static/generator/ckeditor/plugins/smiley/lang/bg.js": staticGeneratorCkeditorPluginsSmileyLangBgJs,
	"static/generator/ckeditor/plugins/smiley/lang/bn.js": staticGeneratorCkeditorPluginsSmileyLangBnJs,
	"static/generator/ckeditor/plugins/smiley/lang/bs.js": staticGeneratorCkeditorPluginsSmileyLangBsJs,
	"static/generator/ckeditor/plugins/smiley/lang/ca.js": staticGeneratorCkeditorPluginsSmileyLangCaJs,
	"static/generator/ckeditor/plugins/smiley/lang/cs.js": staticGeneratorCkeditorPluginsSmileyLangCsJs,
	"static/generator/ckeditor/plugins/smiley/lang/cy.js": staticGeneratorCkeditorPluginsSmileyLangCyJs,
	"static/generator/ckeditor/plugins/smiley/lang/da.js": staticGeneratorCkeditorPluginsSmileyLangDaJs,
	"static/generator/ckeditor/plugins/smiley/lang/de-ch.js": staticGeneratorCkeditorPluginsSmileyLangDeChJs,
	"static/generator/ckeditor/plugins/smiley/lang/de.js": staticGeneratorCkeditorPluginsSmileyLangDeJs,
	"static/generator/ckeditor/plugins/smiley/lang/el.js": staticGeneratorCkeditorPluginsSmileyLangElJs,
	"static/generator/ckeditor/plugins/smiley/lang/en-au.js": staticGeneratorCkeditorPluginsSmileyLangEnAuJs,
	"static/generator/ckeditor/plugins/smiley/lang/en-ca.js": staticGeneratorCkeditorPluginsSmileyLangEnCaJs,
	"static/generator/ckeditor/plugins/smiley/lang/en-gb.js": staticGeneratorCkeditorPluginsSmileyLangEnGbJs,
	"static/generator/ckeditor/plugins/smiley/lang/en.js": staticGeneratorCkeditorPluginsSmileyLangEnJs,
	"static/generator/ckeditor/plugins/smiley/lang/eo.js": staticGeneratorCkeditorPluginsSmileyLangEoJs,
	"static/generator/ckeditor/plugins/smiley/lang/es.js": staticGeneratorCkeditorPluginsSmileyLangEsJs,
	"static/generator/ckeditor/plugins/smiley/lang/et.js": staticGeneratorCkeditorPluginsSmileyLangEtJs,
	"static/generator/ckeditor/plugins/smiley/lang/eu.js": staticGeneratorCkeditorPluginsSmileyLangEuJs,
	"static/generator/ckeditor/plugins/smiley/lang/fa.js": staticGeneratorCkeditorPluginsSmileyLangFaJs,
	"static/generator/ckeditor/plugins/smiley/lang/fi.js": staticGeneratorCkeditorPluginsSmileyLangFiJs,
	"static/generator/ckeditor/plugins/smiley/lang/fo.js": staticGeneratorCkeditorPluginsSmileyLangFoJs,
	"static/generator/ckeditor/plugins/smiley/lang/fr-ca.js": staticGeneratorCkeditorPluginsSmileyLangFrCaJs,
	"static/generator/ckeditor/plugins/smiley/lang/fr.js": staticGeneratorCkeditorPluginsSmileyLangFrJs,
	"static/generator/ckeditor/plugins/smiley/lang/gl.js": staticGeneratorCkeditorPluginsSmileyLangGlJs,
	"static/generator/ckeditor/plugins/smiley/lang/gu.js": staticGeneratorCkeditorPluginsSmileyLangGuJs,
	"static/generator/ckeditor/plugins/smiley/lang/he.js": staticGeneratorCkeditorPluginsSmileyLangHeJs,
	"static/generator/ckeditor/plugins/smiley/lang/hi.js": staticGeneratorCkeditorPluginsSmileyLangHiJs,
	"static/generator/ckeditor/plugins/smiley/lang/hr.js": staticGeneratorCkeditorPluginsSmileyLangHrJs,
	"static/generator/ckeditor/plugins/smiley/lang/hu.js": staticGeneratorCkeditorPluginsSmileyLangHuJs,
	"static/generator/ckeditor/plugins/smiley/lang/id.js": staticGeneratorCkeditorPluginsSmileyLangIdJs,
	"static/generator/ckeditor/plugins/smiley/lang/is.js": staticGeneratorCkeditorPluginsSmileyLangIsJs,
	"static/generator/ckeditor/plugins/smiley/lang/it.js": staticGeneratorCkeditorPluginsSmileyLangItJs,
	"static/generator/ckeditor/plugins/smiley/lang/ja.js": staticGeneratorCkeditorPluginsSmileyLangJaJs,
	"static/generator/ckeditor/plugins/smiley/lang/ka.js": staticGeneratorCkeditorPluginsSmileyLangKaJs,
	"static/generator/ckeditor/plugins/smiley/lang/km.js": staticGeneratorCkeditorPluginsSmileyLangKmJs,
	"static/generator/ckeditor/plugins/smiley/lang/ko.js": staticGeneratorCkeditorPluginsSmileyLangKoJs,
	"static/generator/ckeditor/plugins/smiley/lang/ku.js": staticGeneratorCkeditorPluginsSmileyLangKuJs,
	"static/generator/ckeditor/plugins/smiley/lang/lt.js": staticGeneratorCkeditorPluginsSmileyLangLtJs,
	"static/generator/ckeditor/plugins/smiley/lang/lv.js": staticGeneratorCkeditorPluginsSmileyLangLvJs,
	"static/generator/ckeditor/plugins/smiley/lang/mk.js": staticGeneratorCkeditorPluginsSmileyLangMkJs,
	"static/generator/ckeditor/plugins/smiley/lang/mn.js": staticGeneratorCkeditorPluginsSmileyLangMnJs,
	"static/generator/ckeditor/plugins/smiley/lang/ms.js": staticGeneratorCkeditorPluginsSmileyLangMsJs,
	"static/generator/ckeditor/plugins/smiley/lang/nb.js": staticGeneratorCkeditorPluginsSmileyLangNbJs,
	"static/generator/ckeditor/plugins/smiley/lang/nl.js": staticGeneratorCkeditorPluginsSmileyLangNlJs,
	"static/generator/ckeditor/plugins/smiley/lang/no.js": staticGeneratorCkeditorPluginsSmileyLangNoJs,
	"static/generator/ckeditor/plugins/smiley/lang/oc.js": staticGeneratorCkeditorPluginsSmileyLangOcJs,
	"static/generator/ckeditor/plugins/smiley/lang/pl.js": staticGeneratorCkeditorPluginsSmileyLangPlJs,
	"static/generator/ckeditor/plugins/smiley/lang/pt-br.js": staticGeneratorCkeditorPluginsSmileyLangPtBrJs,
	"static/generator/ckeditor/plugins/smiley/lang/pt.js": staticGeneratorCkeditorPluginsSmileyLangPtJs,
	"static/generator/ckeditor/plugins/smiley/lang/ro.js": staticGeneratorCkeditorPluginsSmileyLangRoJs,
	"static/generator/ckeditor/plugins/smiley/lang/ru.js": staticGeneratorCkeditorPluginsSmileyLangRuJs,
	"static/generator/ckeditor/plugins/smiley/lang/si.js": staticGeneratorCkeditorPluginsSmileyLangSiJs,
	"static/generator/ckeditor/plugins/smiley/lang/sk.js": staticGeneratorCkeditorPluginsSmileyLangSkJs,
	"static/generator/ckeditor/plugins/smiley/lang/sl.js": staticGeneratorCkeditorPluginsSmileyLangSlJs,
	"static/generator/ckeditor/plugins/smiley/lang/sq.js": staticGeneratorCkeditorPluginsSmileyLangSqJs,
	"static/generator/ckeditor/plugins/smiley/lang/sr-latn.js": staticGeneratorCkeditorPluginsSmileyLangSrLatnJs,
	"static/generator/ckeditor/plugins/smiley/lang/sr.js": staticGeneratorCkeditorPluginsSmileyLangSrJs,
	"static/generator/ckeditor/plugins/smiley/lang/sv.js": staticGeneratorCkeditorPluginsSmileyLangSvJs,
	"static/generator/ckeditor/plugins/smiley/lang/th.js": staticGeneratorCkeditorPluginsSmileyLangThJs,
	"static/generator/ckeditor/plugins/smiley/lang/tr.js": staticGeneratorCkeditorPluginsSmileyLangTrJs,
	"static/generator/ckeditor/plugins/smiley/lang/tt.js": staticGeneratorCkeditorPluginsSmileyLangTtJs,
	"static/generator/ckeditor/plugins/smiley/lang/ug.js": staticGeneratorCkeditorPluginsSmileyLangUgJs,
	"static/generator/ckeditor/plugins/smiley/lang/uk.js": staticGeneratorCkeditorPluginsSmileyLangUkJs,
	"static/generator/ckeditor/plugins/smiley/lang/vi.js": staticGeneratorCkeditorPluginsSmileyLangViJs,
	"static/generator/ckeditor/plugins/smiley/lang/zh-cn.js": staticGeneratorCkeditorPluginsSmileyLangZhCnJs,
	"static/generator/ckeditor/plugins/smiley/lang/zh.js": staticGeneratorCkeditorPluginsSmileyLangZhJs,
	"static/generator/ckeditor/plugins/smiley/plugin.js": staticGeneratorCkeditorPluginsSmileyPluginJs,
	"static/generator/ckeditor/plugins/sourcearea/icons/hidpi/source-rtl.png": staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourceRtlPng,
	"static/generator/ckeditor/plugins/sourcearea/icons/hidpi/source.png": staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourcePng,
	"static/generator/ckeditor/plugins/sourcearea/icons/source-rtl.png": staticGeneratorCkeditorPluginsSourceareaIconsSourceRtlPng,
	"static/generator/ckeditor/plugins/sourcearea/icons/source.png": staticGeneratorCkeditorPluginsSourceareaIconsSourcePng,
	"static/generator/ckeditor/plugins/sourcearea/lang/af.js": staticGeneratorCkeditorPluginsSourceareaLangAfJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ar.js": staticGeneratorCkeditorPluginsSourceareaLangArJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/az.js": staticGeneratorCkeditorPluginsSourceareaLangAzJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/bg.js": staticGeneratorCkeditorPluginsSourceareaLangBgJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/bn.js": staticGeneratorCkeditorPluginsSourceareaLangBnJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/bs.js": staticGeneratorCkeditorPluginsSourceareaLangBsJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ca.js": staticGeneratorCkeditorPluginsSourceareaLangCaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/cs.js": staticGeneratorCkeditorPluginsSourceareaLangCsJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/cy.js": staticGeneratorCkeditorPluginsSourceareaLangCyJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/da.js": staticGeneratorCkeditorPluginsSourceareaLangDaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/de-ch.js": staticGeneratorCkeditorPluginsSourceareaLangDeChJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/de.js": staticGeneratorCkeditorPluginsSourceareaLangDeJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/el.js": staticGeneratorCkeditorPluginsSourceareaLangElJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/en-au.js": staticGeneratorCkeditorPluginsSourceareaLangEnAuJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/en-ca.js": staticGeneratorCkeditorPluginsSourceareaLangEnCaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/en-gb.js": staticGeneratorCkeditorPluginsSourceareaLangEnGbJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/en.js": staticGeneratorCkeditorPluginsSourceareaLangEnJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/eo.js": staticGeneratorCkeditorPluginsSourceareaLangEoJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/es.js": staticGeneratorCkeditorPluginsSourceareaLangEsJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/et.js": staticGeneratorCkeditorPluginsSourceareaLangEtJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/eu.js": staticGeneratorCkeditorPluginsSourceareaLangEuJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/fa.js": staticGeneratorCkeditorPluginsSourceareaLangFaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/fi.js": staticGeneratorCkeditorPluginsSourceareaLangFiJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/fo.js": staticGeneratorCkeditorPluginsSourceareaLangFoJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/fr-ca.js": staticGeneratorCkeditorPluginsSourceareaLangFrCaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/fr.js": staticGeneratorCkeditorPluginsSourceareaLangFrJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/gl.js": staticGeneratorCkeditorPluginsSourceareaLangGlJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/gu.js": staticGeneratorCkeditorPluginsSourceareaLangGuJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/he.js": staticGeneratorCkeditorPluginsSourceareaLangHeJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/hi.js": staticGeneratorCkeditorPluginsSourceareaLangHiJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/hr.js": staticGeneratorCkeditorPluginsSourceareaLangHrJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/hu.js": staticGeneratorCkeditorPluginsSourceareaLangHuJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/id.js": staticGeneratorCkeditorPluginsSourceareaLangIdJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/is.js": staticGeneratorCkeditorPluginsSourceareaLangIsJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/it.js": staticGeneratorCkeditorPluginsSourceareaLangItJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ja.js": staticGeneratorCkeditorPluginsSourceareaLangJaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ka.js": staticGeneratorCkeditorPluginsSourceareaLangKaJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/km.js": staticGeneratorCkeditorPluginsSourceareaLangKmJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ko.js": staticGeneratorCkeditorPluginsSourceareaLangKoJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ku.js": staticGeneratorCkeditorPluginsSourceareaLangKuJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/lt.js": staticGeneratorCkeditorPluginsSourceareaLangLtJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/lv.js": staticGeneratorCkeditorPluginsSourceareaLangLvJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/mk.js": staticGeneratorCkeditorPluginsSourceareaLangMkJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/mn.js": staticGeneratorCkeditorPluginsSourceareaLangMnJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ms.js": staticGeneratorCkeditorPluginsSourceareaLangMsJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/nb.js": staticGeneratorCkeditorPluginsSourceareaLangNbJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/nl.js": staticGeneratorCkeditorPluginsSourceareaLangNlJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/no.js": staticGeneratorCkeditorPluginsSourceareaLangNoJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/oc.js": staticGeneratorCkeditorPluginsSourceareaLangOcJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/pl.js": staticGeneratorCkeditorPluginsSourceareaLangPlJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/pt-br.js": staticGeneratorCkeditorPluginsSourceareaLangPtBrJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/pt.js": staticGeneratorCkeditorPluginsSourceareaLangPtJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ro.js": staticGeneratorCkeditorPluginsSourceareaLangRoJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ru.js": staticGeneratorCkeditorPluginsSourceareaLangRuJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/si.js": staticGeneratorCkeditorPluginsSourceareaLangSiJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/sk.js": staticGeneratorCkeditorPluginsSourceareaLangSkJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/sl.js": staticGeneratorCkeditorPluginsSourceareaLangSlJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/sq.js": staticGeneratorCkeditorPluginsSourceareaLangSqJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/sr-latn.js": staticGeneratorCkeditorPluginsSourceareaLangSrLatnJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/sr.js": staticGeneratorCkeditorPluginsSourceareaLangSrJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/sv.js": staticGeneratorCkeditorPluginsSourceareaLangSvJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/th.js": staticGeneratorCkeditorPluginsSourceareaLangThJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/tr.js": staticGeneratorCkeditorPluginsSourceareaLangTrJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/tt.js": staticGeneratorCkeditorPluginsSourceareaLangTtJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/ug.js": staticGeneratorCkeditorPluginsSourceareaLangUgJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/uk.js": staticGeneratorCkeditorPluginsSourceareaLangUkJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/vi.js": staticGeneratorCkeditorPluginsSourceareaLangViJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/zh-cn.js": staticGeneratorCkeditorPluginsSourceareaLangZhCnJs,
	"static/generator/ckeditor/plugins/sourcearea/lang/zh.js": staticGeneratorCkeditorPluginsSourceareaLangZhJs,
	"static/generator/ckeditor/plugins/sourcearea/plugin.js": staticGeneratorCkeditorPluginsSourceareaPluginJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/_translationstatus.txt": staticGeneratorCkeditorPluginsSpecialcharDialogsLang_translationstatusTxt,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/af.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangAfJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ar.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangArJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/az.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangAzJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/bg.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangBgJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ca.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangCaJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/cs.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangCsJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/cy.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangCyJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/da.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangDaJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/de-ch.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeChJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/de.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/el.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangElJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/en-gb.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnGbJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/en.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/eo.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangEoJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/es.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangEsJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/et.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangEtJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/eu.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangEuJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/fa.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangFaJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/fi.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangFiJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/fr-ca.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrCaJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/fr.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/gl.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangGlJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/he.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangHeJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/hr.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangHrJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/hu.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangHuJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/id.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangIdJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/it.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangItJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ja.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangJaJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/km.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangKmJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ko.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangKoJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ku.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangKuJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/lt.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangLtJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/lv.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangLvJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/nb.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangNbJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/nl.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangNlJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/no.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangNoJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/oc.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangOcJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/pl.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangPlJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/pt-br.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtBrJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/pt.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ru.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangRuJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/si.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangSiJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/sk.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangSkJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/sl.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangSlJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/sq.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangSqJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/sv.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangSvJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/th.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangThJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/tr.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangTrJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/tt.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangTtJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/ug.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangUgJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/uk.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangUkJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/vi.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangViJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/zh-cn.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhCnJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/lang/zh.js": staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhJs,
	"static/generator/ckeditor/plugins/specialchar/dialogs/specialchar.js": staticGeneratorCkeditorPluginsSpecialcharDialogsSpecialcharJs,
	"static/generator/ckeditor/plugins/specialchar/icons/hidpi/specialchar.png": staticGeneratorCkeditorPluginsSpecialcharIconsHidpiSpecialcharPng,
	"static/generator/ckeditor/plugins/specialchar/icons/specialchar.png": staticGeneratorCkeditorPluginsSpecialcharIconsSpecialcharPng,
	"static/generator/ckeditor/plugins/specialchar/lang/_translationstatus.txt": staticGeneratorCkeditorPluginsSpecialcharLang_translationstatusTxt,
	"static/generator/ckeditor/plugins/specialchar/lang/af.js": staticGeneratorCkeditorPluginsSpecialcharLangAfJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ar.js": staticGeneratorCkeditorPluginsSpecialcharLangArJs,
	"static/generator/ckeditor/plugins/specialchar/lang/az.js": staticGeneratorCkeditorPluginsSpecialcharLangAzJs,
	"static/generator/ckeditor/plugins/specialchar/lang/bg.js": staticGeneratorCkeditorPluginsSpecialcharLangBgJs,
	"static/generator/ckeditor/plugins/specialchar/lang/bn.js": staticGeneratorCkeditorPluginsSpecialcharLangBnJs,
	"static/generator/ckeditor/plugins/specialchar/lang/bs.js": staticGeneratorCkeditorPluginsSpecialcharLangBsJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ca.js": staticGeneratorCkeditorPluginsSpecialcharLangCaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/cs.js": staticGeneratorCkeditorPluginsSpecialcharLangCsJs,
	"static/generator/ckeditor/plugins/specialchar/lang/cy.js": staticGeneratorCkeditorPluginsSpecialcharLangCyJs,
	"static/generator/ckeditor/plugins/specialchar/lang/da.js": staticGeneratorCkeditorPluginsSpecialcharLangDaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/de-ch.js": staticGeneratorCkeditorPluginsSpecialcharLangDeChJs,
	"static/generator/ckeditor/plugins/specialchar/lang/de.js": staticGeneratorCkeditorPluginsSpecialcharLangDeJs,
	"static/generator/ckeditor/plugins/specialchar/lang/el.js": staticGeneratorCkeditorPluginsSpecialcharLangElJs,
	"static/generator/ckeditor/plugins/specialchar/lang/en-au.js": staticGeneratorCkeditorPluginsSpecialcharLangEnAuJs,
	"static/generator/ckeditor/plugins/specialchar/lang/en-ca.js": staticGeneratorCkeditorPluginsSpecialcharLangEnCaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/en-gb.js": staticGeneratorCkeditorPluginsSpecialcharLangEnGbJs,
	"static/generator/ckeditor/plugins/specialchar/lang/en.js": staticGeneratorCkeditorPluginsSpecialcharLangEnJs,
	"static/generator/ckeditor/plugins/specialchar/lang/eo.js": staticGeneratorCkeditorPluginsSpecialcharLangEoJs,
	"static/generator/ckeditor/plugins/specialchar/lang/es.js": staticGeneratorCkeditorPluginsSpecialcharLangEsJs,
	"static/generator/ckeditor/plugins/specialchar/lang/et.js": staticGeneratorCkeditorPluginsSpecialcharLangEtJs,
	"static/generator/ckeditor/plugins/specialchar/lang/eu.js": staticGeneratorCkeditorPluginsSpecialcharLangEuJs,
	"static/generator/ckeditor/plugins/specialchar/lang/fa.js": staticGeneratorCkeditorPluginsSpecialcharLangFaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/fi.js": staticGeneratorCkeditorPluginsSpecialcharLangFiJs,
	"static/generator/ckeditor/plugins/specialchar/lang/fo.js": staticGeneratorCkeditorPluginsSpecialcharLangFoJs,
	"static/generator/ckeditor/plugins/specialchar/lang/fr-ca.js": staticGeneratorCkeditorPluginsSpecialcharLangFrCaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/fr.js": staticGeneratorCkeditorPluginsSpecialcharLangFrJs,
	"static/generator/ckeditor/plugins/specialchar/lang/gl.js": staticGeneratorCkeditorPluginsSpecialcharLangGlJs,
	"static/generator/ckeditor/plugins/specialchar/lang/gu.js": staticGeneratorCkeditorPluginsSpecialcharLangGuJs,
	"static/generator/ckeditor/plugins/specialchar/lang/he.js": staticGeneratorCkeditorPluginsSpecialcharLangHeJs,
	"static/generator/ckeditor/plugins/specialchar/lang/hi.js": staticGeneratorCkeditorPluginsSpecialcharLangHiJs,
	"static/generator/ckeditor/plugins/specialchar/lang/hr.js": staticGeneratorCkeditorPluginsSpecialcharLangHrJs,
	"static/generator/ckeditor/plugins/specialchar/lang/hu.js": staticGeneratorCkeditorPluginsSpecialcharLangHuJs,
	"static/generator/ckeditor/plugins/specialchar/lang/id.js": staticGeneratorCkeditorPluginsSpecialcharLangIdJs,
	"static/generator/ckeditor/plugins/specialchar/lang/is.js": staticGeneratorCkeditorPluginsSpecialcharLangIsJs,
	"static/generator/ckeditor/plugins/specialchar/lang/it.js": staticGeneratorCkeditorPluginsSpecialcharLangItJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ja.js": staticGeneratorCkeditorPluginsSpecialcharLangJaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ka.js": staticGeneratorCkeditorPluginsSpecialcharLangKaJs,
	"static/generator/ckeditor/plugins/specialchar/lang/km.js": staticGeneratorCkeditorPluginsSpecialcharLangKmJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ko.js": staticGeneratorCkeditorPluginsSpecialcharLangKoJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ku.js": staticGeneratorCkeditorPluginsSpecialcharLangKuJs,
	"static/generator/ckeditor/plugins/specialchar/lang/lt.js": staticGeneratorCkeditorPluginsSpecialcharLangLtJs,
	"static/generator/ckeditor/plugins/specialchar/lang/lv.js": staticGeneratorCkeditorPluginsSpecialcharLangLvJs,
	"static/generator/ckeditor/plugins/specialchar/lang/mk.js": staticGeneratorCkeditorPluginsSpecialcharLangMkJs,
	"static/generator/ckeditor/plugins/specialchar/lang/mn.js": staticGeneratorCkeditorPluginsSpecialcharLangMnJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ms.js": staticGeneratorCkeditorPluginsSpecialcharLangMsJs,
	"static/generator/ckeditor/plugins/specialchar/lang/nb.js": staticGeneratorCkeditorPluginsSpecialcharLangNbJs,
	"static/generator/ckeditor/plugins/specialchar/lang/nl.js": staticGeneratorCkeditorPluginsSpecialcharLangNlJs,
	"static/generator/ckeditor/plugins/specialchar/lang/no.js": staticGeneratorCkeditorPluginsSpecialcharLangNoJs,
	"static/generator/ckeditor/plugins/specialchar/lang/oc.js": staticGeneratorCkeditorPluginsSpecialcharLangOcJs,
	"static/generator/ckeditor/plugins/specialchar/lang/pl.js": staticGeneratorCkeditorPluginsSpecialcharLangPlJs,
	"static/generator/ckeditor/plugins/specialchar/lang/pt-br.js": staticGeneratorCkeditorPluginsSpecialcharLangPtBrJs,
	"static/generator/ckeditor/plugins/specialchar/lang/pt.js": staticGeneratorCkeditorPluginsSpecialcharLangPtJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ro.js": staticGeneratorCkeditorPluginsSpecialcharLangRoJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ru.js": staticGeneratorCkeditorPluginsSpecialcharLangRuJs,
	"static/generator/ckeditor/plugins/specialchar/lang/si.js": staticGeneratorCkeditorPluginsSpecialcharLangSiJs,
	"static/generator/ckeditor/plugins/specialchar/lang/sk.js": staticGeneratorCkeditorPluginsSpecialcharLangSkJs,
	"static/generator/ckeditor/plugins/specialchar/lang/sl.js": staticGeneratorCkeditorPluginsSpecialcharLangSlJs,
	"static/generator/ckeditor/plugins/specialchar/lang/sq.js": staticGeneratorCkeditorPluginsSpecialcharLangSqJs,
	"static/generator/ckeditor/plugins/specialchar/lang/sr-latn.js": staticGeneratorCkeditorPluginsSpecialcharLangSrLatnJs,
	"static/generator/ckeditor/plugins/specialchar/lang/sr.js": staticGeneratorCkeditorPluginsSpecialcharLangSrJs,
	"static/generator/ckeditor/plugins/specialchar/lang/sv.js": staticGeneratorCkeditorPluginsSpecialcharLangSvJs,
	"static/generator/ckeditor/plugins/specialchar/lang/th.js": staticGeneratorCkeditorPluginsSpecialcharLangThJs,
	"static/generator/ckeditor/plugins/specialchar/lang/tr.js": staticGeneratorCkeditorPluginsSpecialcharLangTrJs,
	"static/generator/ckeditor/plugins/specialchar/lang/tt.js": staticGeneratorCkeditorPluginsSpecialcharLangTtJs,
	"static/generator/ckeditor/plugins/specialchar/lang/ug.js": staticGeneratorCkeditorPluginsSpecialcharLangUgJs,
	"static/generator/ckeditor/plugins/specialchar/lang/uk.js": staticGeneratorCkeditorPluginsSpecialcharLangUkJs,
	"static/generator/ckeditor/plugins/specialchar/lang/vi.js": staticGeneratorCkeditorPluginsSpecialcharLangViJs,
	"static/generator/ckeditor/plugins/specialchar/lang/zh-cn.js": staticGeneratorCkeditorPluginsSpecialcharLangZhCnJs,
	"static/generator/ckeditor/plugins/specialchar/lang/zh.js": staticGeneratorCkeditorPluginsSpecialcharLangZhJs,
	"static/generator/ckeditor/plugins/specialchar/plugin.js": staticGeneratorCkeditorPluginsSpecialcharPluginJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/af.js": staticGeneratorCkeditorPluginsStylescomboLangAfJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ar.js": staticGeneratorCkeditorPluginsStylescomboLangArJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/az.js": staticGeneratorCkeditorPluginsStylescomboLangAzJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/bg.js": staticGeneratorCkeditorPluginsStylescomboLangBgJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/bn.js": staticGeneratorCkeditorPluginsStylescomboLangBnJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/bs.js": staticGeneratorCkeditorPluginsStylescomboLangBsJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ca.js": staticGeneratorCkeditorPluginsStylescomboLangCaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/cs.js": staticGeneratorCkeditorPluginsStylescomboLangCsJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/cy.js": staticGeneratorCkeditorPluginsStylescomboLangCyJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/da.js": staticGeneratorCkeditorPluginsStylescomboLangDaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/de-ch.js": staticGeneratorCkeditorPluginsStylescomboLangDeChJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/de.js": staticGeneratorCkeditorPluginsStylescomboLangDeJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/el.js": staticGeneratorCkeditorPluginsStylescomboLangElJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/en-au.js": staticGeneratorCkeditorPluginsStylescomboLangEnAuJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/en-ca.js": staticGeneratorCkeditorPluginsStylescomboLangEnCaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/en-gb.js": staticGeneratorCkeditorPluginsStylescomboLangEnGbJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/en.js": staticGeneratorCkeditorPluginsStylescomboLangEnJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/eo.js": staticGeneratorCkeditorPluginsStylescomboLangEoJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/es.js": staticGeneratorCkeditorPluginsStylescomboLangEsJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/et.js": staticGeneratorCkeditorPluginsStylescomboLangEtJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/eu.js": staticGeneratorCkeditorPluginsStylescomboLangEuJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/fa.js": staticGeneratorCkeditorPluginsStylescomboLangFaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/fi.js": staticGeneratorCkeditorPluginsStylescomboLangFiJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/fo.js": staticGeneratorCkeditorPluginsStylescomboLangFoJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/fr-ca.js": staticGeneratorCkeditorPluginsStylescomboLangFrCaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/fr.js": staticGeneratorCkeditorPluginsStylescomboLangFrJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/gl.js": staticGeneratorCkeditorPluginsStylescomboLangGlJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/gu.js": staticGeneratorCkeditorPluginsStylescomboLangGuJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/he.js": staticGeneratorCkeditorPluginsStylescomboLangHeJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/hi.js": staticGeneratorCkeditorPluginsStylescomboLangHiJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/hr.js": staticGeneratorCkeditorPluginsStylescomboLangHrJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/hu.js": staticGeneratorCkeditorPluginsStylescomboLangHuJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/id.js": staticGeneratorCkeditorPluginsStylescomboLangIdJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/is.js": staticGeneratorCkeditorPluginsStylescomboLangIsJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/it.js": staticGeneratorCkeditorPluginsStylescomboLangItJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ja.js": staticGeneratorCkeditorPluginsStylescomboLangJaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ka.js": staticGeneratorCkeditorPluginsStylescomboLangKaJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/km.js": staticGeneratorCkeditorPluginsStylescomboLangKmJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ko.js": staticGeneratorCkeditorPluginsStylescomboLangKoJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ku.js": staticGeneratorCkeditorPluginsStylescomboLangKuJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/lt.js": staticGeneratorCkeditorPluginsStylescomboLangLtJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/lv.js": staticGeneratorCkeditorPluginsStylescomboLangLvJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/mk.js": staticGeneratorCkeditorPluginsStylescomboLangMkJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/mn.js": staticGeneratorCkeditorPluginsStylescomboLangMnJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ms.js": staticGeneratorCkeditorPluginsStylescomboLangMsJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/nb.js": staticGeneratorCkeditorPluginsStylescomboLangNbJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/nl.js": staticGeneratorCkeditorPluginsStylescomboLangNlJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/no.js": staticGeneratorCkeditorPluginsStylescomboLangNoJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/oc.js": staticGeneratorCkeditorPluginsStylescomboLangOcJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/pl.js": staticGeneratorCkeditorPluginsStylescomboLangPlJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/pt-br.js": staticGeneratorCkeditorPluginsStylescomboLangPtBrJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/pt.js": staticGeneratorCkeditorPluginsStylescomboLangPtJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ro.js": staticGeneratorCkeditorPluginsStylescomboLangRoJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ru.js": staticGeneratorCkeditorPluginsStylescomboLangRuJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/si.js": staticGeneratorCkeditorPluginsStylescomboLangSiJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/sk.js": staticGeneratorCkeditorPluginsStylescomboLangSkJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/sl.js": staticGeneratorCkeditorPluginsStylescomboLangSlJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/sq.js": staticGeneratorCkeditorPluginsStylescomboLangSqJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/sr-latn.js": staticGeneratorCkeditorPluginsStylescomboLangSrLatnJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/sr.js": staticGeneratorCkeditorPluginsStylescomboLangSrJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/sv.js": staticGeneratorCkeditorPluginsStylescomboLangSvJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/th.js": staticGeneratorCkeditorPluginsStylescomboLangThJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/tr.js": staticGeneratorCkeditorPluginsStylescomboLangTrJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/tt.js": staticGeneratorCkeditorPluginsStylescomboLangTtJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/ug.js": staticGeneratorCkeditorPluginsStylescomboLangUgJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/uk.js": staticGeneratorCkeditorPluginsStylescomboLangUkJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/vi.js": staticGeneratorCkeditorPluginsStylescomboLangViJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/zh-cn.js": staticGeneratorCkeditorPluginsStylescomboLangZhCnJs,
	"static/generator/ckeditor/plugins/stylescombo/lang/zh.js": staticGeneratorCkeditorPluginsStylescomboLangZhJs,
	"static/generator/ckeditor/plugins/stylescombo/plugin.js": staticGeneratorCkeditorPluginsStylescomboPluginJs,
	"static/generator/ckeditor/plugins/tab/plugin.js": staticGeneratorCkeditorPluginsTabPluginJs,
	"static/generator/ckeditor/plugins/table/dialogs/table.js": staticGeneratorCkeditorPluginsTableDialogsTableJs,
	"static/generator/ckeditor/plugins/table/icons/hidpi/table.png": staticGeneratorCkeditorPluginsTableIconsHidpiTablePng,
	"static/generator/ckeditor/plugins/table/icons/table.png": staticGeneratorCkeditorPluginsTableIconsTablePng,
	"static/generator/ckeditor/plugins/table/lang/af.js": staticGeneratorCkeditorPluginsTableLangAfJs,
	"static/generator/ckeditor/plugins/table/lang/ar.js": staticGeneratorCkeditorPluginsTableLangArJs,
	"static/generator/ckeditor/plugins/table/lang/az.js": staticGeneratorCkeditorPluginsTableLangAzJs,
	"static/generator/ckeditor/plugins/table/lang/bg.js": staticGeneratorCkeditorPluginsTableLangBgJs,
	"static/generator/ckeditor/plugins/table/lang/bn.js": staticGeneratorCkeditorPluginsTableLangBnJs,
	"static/generator/ckeditor/plugins/table/lang/bs.js": staticGeneratorCkeditorPluginsTableLangBsJs,
	"static/generator/ckeditor/plugins/table/lang/ca.js": staticGeneratorCkeditorPluginsTableLangCaJs,
	"static/generator/ckeditor/plugins/table/lang/cs.js": staticGeneratorCkeditorPluginsTableLangCsJs,
	"static/generator/ckeditor/plugins/table/lang/cy.js": staticGeneratorCkeditorPluginsTableLangCyJs,
	"static/generator/ckeditor/plugins/table/lang/da.js": staticGeneratorCkeditorPluginsTableLangDaJs,
	"static/generator/ckeditor/plugins/table/lang/de-ch.js": staticGeneratorCkeditorPluginsTableLangDeChJs,
	"static/generator/ckeditor/plugins/table/lang/de.js": staticGeneratorCkeditorPluginsTableLangDeJs,
	"static/generator/ckeditor/plugins/table/lang/el.js": staticGeneratorCkeditorPluginsTableLangElJs,
	"static/generator/ckeditor/plugins/table/lang/en-au.js": staticGeneratorCkeditorPluginsTableLangEnAuJs,
	"static/generator/ckeditor/plugins/table/lang/en-ca.js": staticGeneratorCkeditorPluginsTableLangEnCaJs,
	"static/generator/ckeditor/plugins/table/lang/en-gb.js": staticGeneratorCkeditorPluginsTableLangEnGbJs,
	"static/generator/ckeditor/plugins/table/lang/en.js": staticGeneratorCkeditorPluginsTableLangEnJs,
	"static/generator/ckeditor/plugins/table/lang/eo.js": staticGeneratorCkeditorPluginsTableLangEoJs,
	"static/generator/ckeditor/plugins/table/lang/es.js": staticGeneratorCkeditorPluginsTableLangEsJs,
	"static/generator/ckeditor/plugins/table/lang/et.js": staticGeneratorCkeditorPluginsTableLangEtJs,
	"static/generator/ckeditor/plugins/table/lang/eu.js": staticGeneratorCkeditorPluginsTableLangEuJs,
	"static/generator/ckeditor/plugins/table/lang/fa.js": staticGeneratorCkeditorPluginsTableLangFaJs,
	"static/generator/ckeditor/plugins/table/lang/fi.js": staticGeneratorCkeditorPluginsTableLangFiJs,
	"static/generator/ckeditor/plugins/table/lang/fo.js": staticGeneratorCkeditorPluginsTableLangFoJs,
	"static/generator/ckeditor/plugins/table/lang/fr-ca.js": staticGeneratorCkeditorPluginsTableLangFrCaJs,
	"static/generator/ckeditor/plugins/table/lang/fr.js": staticGeneratorCkeditorPluginsTableLangFrJs,
	"static/generator/ckeditor/plugins/table/lang/gl.js": staticGeneratorCkeditorPluginsTableLangGlJs,
	"static/generator/ckeditor/plugins/table/lang/gu.js": staticGeneratorCkeditorPluginsTableLangGuJs,
	"static/generator/ckeditor/plugins/table/lang/he.js": staticGeneratorCkeditorPluginsTableLangHeJs,
	"static/generator/ckeditor/plugins/table/lang/hi.js": staticGeneratorCkeditorPluginsTableLangHiJs,
	"static/generator/ckeditor/plugins/table/lang/hr.js": staticGeneratorCkeditorPluginsTableLangHrJs,
	"static/generator/ckeditor/plugins/table/lang/hu.js": staticGeneratorCkeditorPluginsTableLangHuJs,
	"static/generator/ckeditor/plugins/table/lang/id.js": staticGeneratorCkeditorPluginsTableLangIdJs,
	"static/generator/ckeditor/plugins/table/lang/is.js": staticGeneratorCkeditorPluginsTableLangIsJs,
	"static/generator/ckeditor/plugins/table/lang/it.js": staticGeneratorCkeditorPluginsTableLangItJs,
	"static/generator/ckeditor/plugins/table/lang/ja.js": staticGeneratorCkeditorPluginsTableLangJaJs,
	"static/generator/ckeditor/plugins/table/lang/ka.js": staticGeneratorCkeditorPluginsTableLangKaJs,
	"static/generator/ckeditor/plugins/table/lang/km.js": staticGeneratorCkeditorPluginsTableLangKmJs,
	"static/generator/ckeditor/plugins/table/lang/ko.js": staticGeneratorCkeditorPluginsTableLangKoJs,
	"static/generator/ckeditor/plugins/table/lang/ku.js": staticGeneratorCkeditorPluginsTableLangKuJs,
	"static/generator/ckeditor/plugins/table/lang/lt.js": staticGeneratorCkeditorPluginsTableLangLtJs,
	"static/generator/ckeditor/plugins/table/lang/lv.js": staticGeneratorCkeditorPluginsTableLangLvJs,
	"static/generator/ckeditor/plugins/table/lang/mk.js": staticGeneratorCkeditorPluginsTableLangMkJs,
	"static/generator/ckeditor/plugins/table/lang/mn.js": staticGeneratorCkeditorPluginsTableLangMnJs,
	"static/generator/ckeditor/plugins/table/lang/ms.js": staticGeneratorCkeditorPluginsTableLangMsJs,
	"static/generator/ckeditor/plugins/table/lang/nb.js": staticGeneratorCkeditorPluginsTableLangNbJs,
	"static/generator/ckeditor/plugins/table/lang/nl.js": staticGeneratorCkeditorPluginsTableLangNlJs,
	"static/generator/ckeditor/plugins/table/lang/no.js": staticGeneratorCkeditorPluginsTableLangNoJs,
	"static/generator/ckeditor/plugins/table/lang/oc.js": staticGeneratorCkeditorPluginsTableLangOcJs,
	"static/generator/ckeditor/plugins/table/lang/pl.js": staticGeneratorCkeditorPluginsTableLangPlJs,
	"static/generator/ckeditor/plugins/table/lang/pt-br.js": staticGeneratorCkeditorPluginsTableLangPtBrJs,
	"static/generator/ckeditor/plugins/table/lang/pt.js": staticGeneratorCkeditorPluginsTableLangPtJs,
	"static/generator/ckeditor/plugins/table/lang/ro.js": staticGeneratorCkeditorPluginsTableLangRoJs,
	"static/generator/ckeditor/plugins/table/lang/ru.js": staticGeneratorCkeditorPluginsTableLangRuJs,
	"static/generator/ckeditor/plugins/table/lang/si.js": staticGeneratorCkeditorPluginsTableLangSiJs,
	"static/generator/ckeditor/plugins/table/lang/sk.js": staticGeneratorCkeditorPluginsTableLangSkJs,
	"static/generator/ckeditor/plugins/table/lang/sl.js": staticGeneratorCkeditorPluginsTableLangSlJs,
	"static/generator/ckeditor/plugins/table/lang/sq.js": staticGeneratorCkeditorPluginsTableLangSqJs,
	"static/generator/ckeditor/plugins/table/lang/sr-latn.js": staticGeneratorCkeditorPluginsTableLangSrLatnJs,
	"static/generator/ckeditor/plugins/table/lang/sr.js": staticGeneratorCkeditorPluginsTableLangSrJs,
	"static/generator/ckeditor/plugins/table/lang/sv.js": staticGeneratorCkeditorPluginsTableLangSvJs,
	"static/generator/ckeditor/plugins/table/lang/th.js": staticGeneratorCkeditorPluginsTableLangThJs,
	"static/generator/ckeditor/plugins/table/lang/tr.js": staticGeneratorCkeditorPluginsTableLangTrJs,
	"static/generator/ckeditor/plugins/table/lang/tt.js": staticGeneratorCkeditorPluginsTableLangTtJs,
	"static/generator/ckeditor/plugins/table/lang/ug.js": staticGeneratorCkeditorPluginsTableLangUgJs,
	"static/generator/ckeditor/plugins/table/lang/uk.js": staticGeneratorCkeditorPluginsTableLangUkJs,
	"static/generator/ckeditor/plugins/table/lang/vi.js": staticGeneratorCkeditorPluginsTableLangViJs,
	"static/generator/ckeditor/plugins/table/lang/zh-cn.js": staticGeneratorCkeditorPluginsTableLangZhCnJs,
	"static/generator/ckeditor/plugins/table/lang/zh.js": staticGeneratorCkeditorPluginsTableLangZhJs,
	"static/generator/ckeditor/plugins/table/plugin.js": staticGeneratorCkeditorPluginsTablePluginJs,
	"static/generator/ckeditor/plugins/tabletools/dialogs/tableCell.js": staticGeneratorCkeditorPluginsTabletoolsDialogsTablecellJs,
	"static/generator/ckeditor/plugins/tabletools/plugin.js": staticGeneratorCkeditorPluginsTabletoolsPluginJs,
	"static/generator/ckeditor/plugins/templates/dialogs/templates.css": staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesCss,
	"static/generator/ckeditor/plugins/templates/dialogs/templates.js": staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesJs,
	"static/generator/ckeditor/plugins/templates/icons/hidpi/templates-rtl.png": staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesRtlPng,
	"static/generator/ckeditor/plugins/templates/icons/hidpi/templates.png": staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesPng,
	"static/generator/ckeditor/plugins/templates/icons/templates-rtl.png": staticGeneratorCkeditorPluginsTemplatesIconsTemplatesRtlPng,
	"static/generator/ckeditor/plugins/templates/icons/templates.png": staticGeneratorCkeditorPluginsTemplatesIconsTemplatesPng,
	"static/generator/ckeditor/plugins/templates/lang/af.js": staticGeneratorCkeditorPluginsTemplatesLangAfJs,
	"static/generator/ckeditor/plugins/templates/lang/ar.js": staticGeneratorCkeditorPluginsTemplatesLangArJs,
	"static/generator/ckeditor/plugins/templates/lang/az.js": staticGeneratorCkeditorPluginsTemplatesLangAzJs,
	"static/generator/ckeditor/plugins/templates/lang/bg.js": staticGeneratorCkeditorPluginsTemplatesLangBgJs,
	"static/generator/ckeditor/plugins/templates/lang/bn.js": staticGeneratorCkeditorPluginsTemplatesLangBnJs,
	"static/generator/ckeditor/plugins/templates/lang/bs.js": staticGeneratorCkeditorPluginsTemplatesLangBsJs,
	"static/generator/ckeditor/plugins/templates/lang/ca.js": staticGeneratorCkeditorPluginsTemplatesLangCaJs,
	"static/generator/ckeditor/plugins/templates/lang/cs.js": staticGeneratorCkeditorPluginsTemplatesLangCsJs,
	"static/generator/ckeditor/plugins/templates/lang/cy.js": staticGeneratorCkeditorPluginsTemplatesLangCyJs,
	"static/generator/ckeditor/plugins/templates/lang/da.js": staticGeneratorCkeditorPluginsTemplatesLangDaJs,
	"static/generator/ckeditor/plugins/templates/lang/de-ch.js": staticGeneratorCkeditorPluginsTemplatesLangDeChJs,
	"static/generator/ckeditor/plugins/templates/lang/de.js": staticGeneratorCkeditorPluginsTemplatesLangDeJs,
	"static/generator/ckeditor/plugins/templates/lang/el.js": staticGeneratorCkeditorPluginsTemplatesLangElJs,
	"static/generator/ckeditor/plugins/templates/lang/en-au.js": staticGeneratorCkeditorPluginsTemplatesLangEnAuJs,
	"static/generator/ckeditor/plugins/templates/lang/en-ca.js": staticGeneratorCkeditorPluginsTemplatesLangEnCaJs,
	"static/generator/ckeditor/plugins/templates/lang/en-gb.js": staticGeneratorCkeditorPluginsTemplatesLangEnGbJs,
	"static/generator/ckeditor/plugins/templates/lang/en.js": staticGeneratorCkeditorPluginsTemplatesLangEnJs,
	"static/generator/ckeditor/plugins/templates/lang/eo.js": staticGeneratorCkeditorPluginsTemplatesLangEoJs,
	"static/generator/ckeditor/plugins/templates/lang/es.js": staticGeneratorCkeditorPluginsTemplatesLangEsJs,
	"static/generator/ckeditor/plugins/templates/lang/et.js": staticGeneratorCkeditorPluginsTemplatesLangEtJs,
	"static/generator/ckeditor/plugins/templates/lang/eu.js": staticGeneratorCkeditorPluginsTemplatesLangEuJs,
	"static/generator/ckeditor/plugins/templates/lang/fa.js": staticGeneratorCkeditorPluginsTemplatesLangFaJs,
	"static/generator/ckeditor/plugins/templates/lang/fi.js": staticGeneratorCkeditorPluginsTemplatesLangFiJs,
	"static/generator/ckeditor/plugins/templates/lang/fo.js": staticGeneratorCkeditorPluginsTemplatesLangFoJs,
	"static/generator/ckeditor/plugins/templates/lang/fr-ca.js": staticGeneratorCkeditorPluginsTemplatesLangFrCaJs,
	"static/generator/ckeditor/plugins/templates/lang/fr.js": staticGeneratorCkeditorPluginsTemplatesLangFrJs,
	"static/generator/ckeditor/plugins/templates/lang/gl.js": staticGeneratorCkeditorPluginsTemplatesLangGlJs,
	"static/generator/ckeditor/plugins/templates/lang/gu.js": staticGeneratorCkeditorPluginsTemplatesLangGuJs,
	"static/generator/ckeditor/plugins/templates/lang/he.js": staticGeneratorCkeditorPluginsTemplatesLangHeJs,
	"static/generator/ckeditor/plugins/templates/lang/hi.js": staticGeneratorCkeditorPluginsTemplatesLangHiJs,
	"static/generator/ckeditor/plugins/templates/lang/hr.js": staticGeneratorCkeditorPluginsTemplatesLangHrJs,
	"static/generator/ckeditor/plugins/templates/lang/hu.js": staticGeneratorCkeditorPluginsTemplatesLangHuJs,
	"static/generator/ckeditor/plugins/templates/lang/id.js": staticGeneratorCkeditorPluginsTemplatesLangIdJs,
	"static/generator/ckeditor/plugins/templates/lang/is.js": staticGeneratorCkeditorPluginsTemplatesLangIsJs,
	"static/generator/ckeditor/plugins/templates/lang/it.js": staticGeneratorCkeditorPluginsTemplatesLangItJs,
	"static/generator/ckeditor/plugins/templates/lang/ja.js": staticGeneratorCkeditorPluginsTemplatesLangJaJs,
	"static/generator/ckeditor/plugins/templates/lang/ka.js": staticGeneratorCkeditorPluginsTemplatesLangKaJs,
	"static/generator/ckeditor/plugins/templates/lang/km.js": staticGeneratorCkeditorPluginsTemplatesLangKmJs,
	"static/generator/ckeditor/plugins/templates/lang/ko.js": staticGeneratorCkeditorPluginsTemplatesLangKoJs,
	"static/generator/ckeditor/plugins/templates/lang/ku.js": staticGeneratorCkeditorPluginsTemplatesLangKuJs,
	"static/generator/ckeditor/plugins/templates/lang/lt.js": staticGeneratorCkeditorPluginsTemplatesLangLtJs,
	"static/generator/ckeditor/plugins/templates/lang/lv.js": staticGeneratorCkeditorPluginsTemplatesLangLvJs,
	"static/generator/ckeditor/plugins/templates/lang/mk.js": staticGeneratorCkeditorPluginsTemplatesLangMkJs,
	"static/generator/ckeditor/plugins/templates/lang/mn.js": staticGeneratorCkeditorPluginsTemplatesLangMnJs,
	"static/generator/ckeditor/plugins/templates/lang/ms.js": staticGeneratorCkeditorPluginsTemplatesLangMsJs,
	"static/generator/ckeditor/plugins/templates/lang/nb.js": staticGeneratorCkeditorPluginsTemplatesLangNbJs,
	"static/generator/ckeditor/plugins/templates/lang/nl.js": staticGeneratorCkeditorPluginsTemplatesLangNlJs,
	"static/generator/ckeditor/plugins/templates/lang/no.js": staticGeneratorCkeditorPluginsTemplatesLangNoJs,
	"static/generator/ckeditor/plugins/templates/lang/oc.js": staticGeneratorCkeditorPluginsTemplatesLangOcJs,
	"static/generator/ckeditor/plugins/templates/lang/pl.js": staticGeneratorCkeditorPluginsTemplatesLangPlJs,
	"static/generator/ckeditor/plugins/templates/lang/pt-br.js": staticGeneratorCkeditorPluginsTemplatesLangPtBrJs,
	"static/generator/ckeditor/plugins/templates/lang/pt.js": staticGeneratorCkeditorPluginsTemplatesLangPtJs,
	"static/generator/ckeditor/plugins/templates/lang/ro.js": staticGeneratorCkeditorPluginsTemplatesLangRoJs,
	"static/generator/ckeditor/plugins/templates/lang/ru.js": staticGeneratorCkeditorPluginsTemplatesLangRuJs,
	"static/generator/ckeditor/plugins/templates/lang/si.js": staticGeneratorCkeditorPluginsTemplatesLangSiJs,
	"static/generator/ckeditor/plugins/templates/lang/sk.js": staticGeneratorCkeditorPluginsTemplatesLangSkJs,
	"static/generator/ckeditor/plugins/templates/lang/sl.js": staticGeneratorCkeditorPluginsTemplatesLangSlJs,
	"static/generator/ckeditor/plugins/templates/lang/sq.js": staticGeneratorCkeditorPluginsTemplatesLangSqJs,
	"static/generator/ckeditor/plugins/templates/lang/sr-latn.js": staticGeneratorCkeditorPluginsTemplatesLangSrLatnJs,
	"static/generator/ckeditor/plugins/templates/lang/sr.js": staticGeneratorCkeditorPluginsTemplatesLangSrJs,
	"static/generator/ckeditor/plugins/templates/lang/sv.js": staticGeneratorCkeditorPluginsTemplatesLangSvJs,
	"static/generator/ckeditor/plugins/templates/lang/th.js": staticGeneratorCkeditorPluginsTemplatesLangThJs,
	"static/generator/ckeditor/plugins/templates/lang/tr.js": staticGeneratorCkeditorPluginsTemplatesLangTrJs,
	"static/generator/ckeditor/plugins/templates/lang/tt.js": staticGeneratorCkeditorPluginsTemplatesLangTtJs,
	"static/generator/ckeditor/plugins/templates/lang/ug.js": staticGeneratorCkeditorPluginsTemplatesLangUgJs,
	"static/generator/ckeditor/plugins/templates/lang/uk.js": staticGeneratorCkeditorPluginsTemplatesLangUkJs,
	"static/generator/ckeditor/plugins/templates/lang/vi.js": staticGeneratorCkeditorPluginsTemplatesLangViJs,
	"static/generator/ckeditor/plugins/templates/lang/zh-cn.js": staticGeneratorCkeditorPluginsTemplatesLangZhCnJs,
	"static/generator/ckeditor/plugins/templates/lang/zh.js": staticGeneratorCkeditorPluginsTemplatesLangZhJs,
	"static/generator/ckeditor/plugins/templates/plugin.js": staticGeneratorCkeditorPluginsTemplatesPluginJs,
	"static/generator/ckeditor/plugins/templates/templates/default.js": staticGeneratorCkeditorPluginsTemplatesTemplatesDefaultJs,
	"static/generator/ckeditor/plugins/templates/templates/images/template1.gif": staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate1Gif,
	"static/generator/ckeditor/plugins/templates/templates/images/template2.gif": staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate2Gif,
	"static/generator/ckeditor/plugins/templates/templates/images/template3.gif": staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate3Gif,
	"static/generator/ckeditor/plugins/toolbar/lang/af.js": staticGeneratorCkeditorPluginsToolbarLangAfJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ar.js": staticGeneratorCkeditorPluginsToolbarLangArJs,
	"static/generator/ckeditor/plugins/toolbar/lang/az.js": staticGeneratorCkeditorPluginsToolbarLangAzJs,
	"static/generator/ckeditor/plugins/toolbar/lang/bg.js": staticGeneratorCkeditorPluginsToolbarLangBgJs,
	"static/generator/ckeditor/plugins/toolbar/lang/bn.js": staticGeneratorCkeditorPluginsToolbarLangBnJs,
	"static/generator/ckeditor/plugins/toolbar/lang/bs.js": staticGeneratorCkeditorPluginsToolbarLangBsJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ca.js": staticGeneratorCkeditorPluginsToolbarLangCaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/cs.js": staticGeneratorCkeditorPluginsToolbarLangCsJs,
	"static/generator/ckeditor/plugins/toolbar/lang/cy.js": staticGeneratorCkeditorPluginsToolbarLangCyJs,
	"static/generator/ckeditor/plugins/toolbar/lang/da.js": staticGeneratorCkeditorPluginsToolbarLangDaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/de-ch.js": staticGeneratorCkeditorPluginsToolbarLangDeChJs,
	"static/generator/ckeditor/plugins/toolbar/lang/de.js": staticGeneratorCkeditorPluginsToolbarLangDeJs,
	"static/generator/ckeditor/plugins/toolbar/lang/el.js": staticGeneratorCkeditorPluginsToolbarLangElJs,
	"static/generator/ckeditor/plugins/toolbar/lang/en-au.js": staticGeneratorCkeditorPluginsToolbarLangEnAuJs,
	"static/generator/ckeditor/plugins/toolbar/lang/en-ca.js": staticGeneratorCkeditorPluginsToolbarLangEnCaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/en-gb.js": staticGeneratorCkeditorPluginsToolbarLangEnGbJs,
	"static/generator/ckeditor/plugins/toolbar/lang/en.js": staticGeneratorCkeditorPluginsToolbarLangEnJs,
	"static/generator/ckeditor/plugins/toolbar/lang/eo.js": staticGeneratorCkeditorPluginsToolbarLangEoJs,
	"static/generator/ckeditor/plugins/toolbar/lang/es.js": staticGeneratorCkeditorPluginsToolbarLangEsJs,
	"static/generator/ckeditor/plugins/toolbar/lang/et.js": staticGeneratorCkeditorPluginsToolbarLangEtJs,
	"static/generator/ckeditor/plugins/toolbar/lang/eu.js": staticGeneratorCkeditorPluginsToolbarLangEuJs,
	"static/generator/ckeditor/plugins/toolbar/lang/fa.js": staticGeneratorCkeditorPluginsToolbarLangFaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/fi.js": staticGeneratorCkeditorPluginsToolbarLangFiJs,
	"static/generator/ckeditor/plugins/toolbar/lang/fo.js": staticGeneratorCkeditorPluginsToolbarLangFoJs,
	"static/generator/ckeditor/plugins/toolbar/lang/fr-ca.js": staticGeneratorCkeditorPluginsToolbarLangFrCaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/fr.js": staticGeneratorCkeditorPluginsToolbarLangFrJs,
	"static/generator/ckeditor/plugins/toolbar/lang/gl.js": staticGeneratorCkeditorPluginsToolbarLangGlJs,
	"static/generator/ckeditor/plugins/toolbar/lang/gu.js": staticGeneratorCkeditorPluginsToolbarLangGuJs,
	"static/generator/ckeditor/plugins/toolbar/lang/he.js": staticGeneratorCkeditorPluginsToolbarLangHeJs,
	"static/generator/ckeditor/plugins/toolbar/lang/hi.js": staticGeneratorCkeditorPluginsToolbarLangHiJs,
	"static/generator/ckeditor/plugins/toolbar/lang/hr.js": staticGeneratorCkeditorPluginsToolbarLangHrJs,
	"static/generator/ckeditor/plugins/toolbar/lang/hu.js": staticGeneratorCkeditorPluginsToolbarLangHuJs,
	"static/generator/ckeditor/plugins/toolbar/lang/id.js": staticGeneratorCkeditorPluginsToolbarLangIdJs,
	"static/generator/ckeditor/plugins/toolbar/lang/is.js": staticGeneratorCkeditorPluginsToolbarLangIsJs,
	"static/generator/ckeditor/plugins/toolbar/lang/it.js": staticGeneratorCkeditorPluginsToolbarLangItJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ja.js": staticGeneratorCkeditorPluginsToolbarLangJaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ka.js": staticGeneratorCkeditorPluginsToolbarLangKaJs,
	"static/generator/ckeditor/plugins/toolbar/lang/km.js": staticGeneratorCkeditorPluginsToolbarLangKmJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ko.js": staticGeneratorCkeditorPluginsToolbarLangKoJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ku.js": staticGeneratorCkeditorPluginsToolbarLangKuJs,
	"static/generator/ckeditor/plugins/toolbar/lang/lt.js": staticGeneratorCkeditorPluginsToolbarLangLtJs,
	"static/generator/ckeditor/plugins/toolbar/lang/lv.js": staticGeneratorCkeditorPluginsToolbarLangLvJs,
	"static/generator/ckeditor/plugins/toolbar/lang/mk.js": staticGeneratorCkeditorPluginsToolbarLangMkJs,
	"static/generator/ckeditor/plugins/toolbar/lang/mn.js": staticGeneratorCkeditorPluginsToolbarLangMnJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ms.js": staticGeneratorCkeditorPluginsToolbarLangMsJs,
	"static/generator/ckeditor/plugins/toolbar/lang/nb.js": staticGeneratorCkeditorPluginsToolbarLangNbJs,
	"static/generator/ckeditor/plugins/toolbar/lang/nl.js": staticGeneratorCkeditorPluginsToolbarLangNlJs,
	"static/generator/ckeditor/plugins/toolbar/lang/no.js": staticGeneratorCkeditorPluginsToolbarLangNoJs,
	"static/generator/ckeditor/plugins/toolbar/lang/oc.js": staticGeneratorCkeditorPluginsToolbarLangOcJs,
	"static/generator/ckeditor/plugins/toolbar/lang/pl.js": staticGeneratorCkeditorPluginsToolbarLangPlJs,
	"static/generator/ckeditor/plugins/toolbar/lang/pt-br.js": staticGeneratorCkeditorPluginsToolbarLangPtBrJs,
	"static/generator/ckeditor/plugins/toolbar/lang/pt.js": staticGeneratorCkeditorPluginsToolbarLangPtJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ro.js": staticGeneratorCkeditorPluginsToolbarLangRoJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ru.js": staticGeneratorCkeditorPluginsToolbarLangRuJs,
	"static/generator/ckeditor/plugins/toolbar/lang/si.js": staticGeneratorCkeditorPluginsToolbarLangSiJs,
	"static/generator/ckeditor/plugins/toolbar/lang/sk.js": staticGeneratorCkeditorPluginsToolbarLangSkJs,
	"static/generator/ckeditor/plugins/toolbar/lang/sl.js": staticGeneratorCkeditorPluginsToolbarLangSlJs,
	"static/generator/ckeditor/plugins/toolbar/lang/sq.js": staticGeneratorCkeditorPluginsToolbarLangSqJs,
	"static/generator/ckeditor/plugins/toolbar/lang/sr-latn.js": staticGeneratorCkeditorPluginsToolbarLangSrLatnJs,
	"static/generator/ckeditor/plugins/toolbar/lang/sr.js": staticGeneratorCkeditorPluginsToolbarLangSrJs,
	"static/generator/ckeditor/plugins/toolbar/lang/sv.js": staticGeneratorCkeditorPluginsToolbarLangSvJs,
	"static/generator/ckeditor/plugins/toolbar/lang/th.js": staticGeneratorCkeditorPluginsToolbarLangThJs,
	"static/generator/ckeditor/plugins/toolbar/lang/tr.js": staticGeneratorCkeditorPluginsToolbarLangTrJs,
	"static/generator/ckeditor/plugins/toolbar/lang/tt.js": staticGeneratorCkeditorPluginsToolbarLangTtJs,
	"static/generator/ckeditor/plugins/toolbar/lang/ug.js": staticGeneratorCkeditorPluginsToolbarLangUgJs,
	"static/generator/ckeditor/plugins/toolbar/lang/uk.js": staticGeneratorCkeditorPluginsToolbarLangUkJs,
	"static/generator/ckeditor/plugins/toolbar/lang/vi.js": staticGeneratorCkeditorPluginsToolbarLangViJs,
	"static/generator/ckeditor/plugins/toolbar/lang/zh-cn.js": staticGeneratorCkeditorPluginsToolbarLangZhCnJs,
	"static/generator/ckeditor/plugins/toolbar/lang/zh.js": staticGeneratorCkeditorPluginsToolbarLangZhJs,
	"static/generator/ckeditor/plugins/toolbar/plugin.js": staticGeneratorCkeditorPluginsToolbarPluginJs,
	"static/generator/ckeditor/plugins/toolbar/samples/toolbar.html": staticGeneratorCkeditorPluginsToolbarSamplesToolbarHtml,
	"static/generator/ckeditor/plugins/undo/dev/snapshot.html": staticGeneratorCkeditorPluginsUndoDevSnapshotHtml,
	"static/generator/ckeditor/plugins/undo/icons/hidpi/redo-rtl.png": staticGeneratorCkeditorPluginsUndoIconsHidpiRedoRtlPng,
	"static/generator/ckeditor/plugins/undo/icons/hidpi/redo.png": staticGeneratorCkeditorPluginsUndoIconsHidpiRedoPng,
	"static/generator/ckeditor/plugins/undo/icons/hidpi/undo-rtl.png": staticGeneratorCkeditorPluginsUndoIconsHidpiUndoRtlPng,
	"static/generator/ckeditor/plugins/undo/icons/hidpi/undo.png": staticGeneratorCkeditorPluginsUndoIconsHidpiUndoPng,
	"static/generator/ckeditor/plugins/undo/icons/redo-rtl.png": staticGeneratorCkeditorPluginsUndoIconsRedoRtlPng,
	"static/generator/ckeditor/plugins/undo/icons/redo.png": staticGeneratorCkeditorPluginsUndoIconsRedoPng,
	"static/generator/ckeditor/plugins/undo/icons/undo-rtl.png": staticGeneratorCkeditorPluginsUndoIconsUndoRtlPng,
	"static/generator/ckeditor/plugins/undo/icons/undo.png": staticGeneratorCkeditorPluginsUndoIconsUndoPng,
	"static/generator/ckeditor/plugins/undo/lang/af.js": staticGeneratorCkeditorPluginsUndoLangAfJs,
	"static/generator/ckeditor/plugins/undo/lang/ar.js": staticGeneratorCkeditorPluginsUndoLangArJs,
	"static/generator/ckeditor/plugins/undo/lang/az.js": staticGeneratorCkeditorPluginsUndoLangAzJs,
	"static/generator/ckeditor/plugins/undo/lang/bg.js": staticGeneratorCkeditorPluginsUndoLangBgJs,
	"static/generator/ckeditor/plugins/undo/lang/bn.js": staticGeneratorCkeditorPluginsUndoLangBnJs,
	"static/generator/ckeditor/plugins/undo/lang/bs.js": staticGeneratorCkeditorPluginsUndoLangBsJs,
	"static/generator/ckeditor/plugins/undo/lang/ca.js": staticGeneratorCkeditorPluginsUndoLangCaJs,
	"static/generator/ckeditor/plugins/undo/lang/cs.js": staticGeneratorCkeditorPluginsUndoLangCsJs,
	"static/generator/ckeditor/plugins/undo/lang/cy.js": staticGeneratorCkeditorPluginsUndoLangCyJs,
	"static/generator/ckeditor/plugins/undo/lang/da.js": staticGeneratorCkeditorPluginsUndoLangDaJs,
	"static/generator/ckeditor/plugins/undo/lang/de-ch.js": staticGeneratorCkeditorPluginsUndoLangDeChJs,
	"static/generator/ckeditor/plugins/undo/lang/de.js": staticGeneratorCkeditorPluginsUndoLangDeJs,
	"static/generator/ckeditor/plugins/undo/lang/el.js": staticGeneratorCkeditorPluginsUndoLangElJs,
	"static/generator/ckeditor/plugins/undo/lang/en-au.js": staticGeneratorCkeditorPluginsUndoLangEnAuJs,
	"static/generator/ckeditor/plugins/undo/lang/en-ca.js": staticGeneratorCkeditorPluginsUndoLangEnCaJs,
	"static/generator/ckeditor/plugins/undo/lang/en-gb.js": staticGeneratorCkeditorPluginsUndoLangEnGbJs,
	"static/generator/ckeditor/plugins/undo/lang/en.js": staticGeneratorCkeditorPluginsUndoLangEnJs,
	"static/generator/ckeditor/plugins/undo/lang/eo.js": staticGeneratorCkeditorPluginsUndoLangEoJs,
	"static/generator/ckeditor/plugins/undo/lang/es.js": staticGeneratorCkeditorPluginsUndoLangEsJs,
	"static/generator/ckeditor/plugins/undo/lang/et.js": staticGeneratorCkeditorPluginsUndoLangEtJs,
	"static/generator/ckeditor/plugins/undo/lang/eu.js": staticGeneratorCkeditorPluginsUndoLangEuJs,
	"static/generator/ckeditor/plugins/undo/lang/fa.js": staticGeneratorCkeditorPluginsUndoLangFaJs,
	"static/generator/ckeditor/plugins/undo/lang/fi.js": staticGeneratorCkeditorPluginsUndoLangFiJs,
	"static/generator/ckeditor/plugins/undo/lang/fo.js": staticGeneratorCkeditorPluginsUndoLangFoJs,
	"static/generator/ckeditor/plugins/undo/lang/fr-ca.js": staticGeneratorCkeditorPluginsUndoLangFrCaJs,
	"static/generator/ckeditor/plugins/undo/lang/fr.js": staticGeneratorCkeditorPluginsUndoLangFrJs,
	"static/generator/ckeditor/plugins/undo/lang/gl.js": staticGeneratorCkeditorPluginsUndoLangGlJs,
	"static/generator/ckeditor/plugins/undo/lang/gu.js": staticGeneratorCkeditorPluginsUndoLangGuJs,
	"static/generator/ckeditor/plugins/undo/lang/he.js": staticGeneratorCkeditorPluginsUndoLangHeJs,
	"static/generator/ckeditor/plugins/undo/lang/hi.js": staticGeneratorCkeditorPluginsUndoLangHiJs,
	"static/generator/ckeditor/plugins/undo/lang/hr.js": staticGeneratorCkeditorPluginsUndoLangHrJs,
	"static/generator/ckeditor/plugins/undo/lang/hu.js": staticGeneratorCkeditorPluginsUndoLangHuJs,
	"static/generator/ckeditor/plugins/undo/lang/id.js": staticGeneratorCkeditorPluginsUndoLangIdJs,
	"static/generator/ckeditor/plugins/undo/lang/is.js": staticGeneratorCkeditorPluginsUndoLangIsJs,
	"static/generator/ckeditor/plugins/undo/lang/it.js": staticGeneratorCkeditorPluginsUndoLangItJs,
	"static/generator/ckeditor/plugins/undo/lang/ja.js": staticGeneratorCkeditorPluginsUndoLangJaJs,
	"static/generator/ckeditor/plugins/undo/lang/ka.js": staticGeneratorCkeditorPluginsUndoLangKaJs,
	"static/generator/ckeditor/plugins/undo/lang/km.js": staticGeneratorCkeditorPluginsUndoLangKmJs,
	"static/generator/ckeditor/plugins/undo/lang/ko.js": staticGeneratorCkeditorPluginsUndoLangKoJs,
	"static/generator/ckeditor/plugins/undo/lang/ku.js": staticGeneratorCkeditorPluginsUndoLangKuJs,
	"static/generator/ckeditor/plugins/undo/lang/lt.js": staticGeneratorCkeditorPluginsUndoLangLtJs,
	"static/generator/ckeditor/plugins/undo/lang/lv.js": staticGeneratorCkeditorPluginsUndoLangLvJs,
	"static/generator/ckeditor/plugins/undo/lang/mk.js": staticGeneratorCkeditorPluginsUndoLangMkJs,
	"static/generator/ckeditor/plugins/undo/lang/mn.js": staticGeneratorCkeditorPluginsUndoLangMnJs,
	"static/generator/ckeditor/plugins/undo/lang/ms.js": staticGeneratorCkeditorPluginsUndoLangMsJs,
	"static/generator/ckeditor/plugins/undo/lang/nb.js": staticGeneratorCkeditorPluginsUndoLangNbJs,
	"static/generator/ckeditor/plugins/undo/lang/nl.js": staticGeneratorCkeditorPluginsUndoLangNlJs,
	"static/generator/ckeditor/plugins/undo/lang/no.js": staticGeneratorCkeditorPluginsUndoLangNoJs,
	"static/generator/ckeditor/plugins/undo/lang/oc.js": staticGeneratorCkeditorPluginsUndoLangOcJs,
	"static/generator/ckeditor/plugins/undo/lang/pl.js": staticGeneratorCkeditorPluginsUndoLangPlJs,
	"static/generator/ckeditor/plugins/undo/lang/pt-br.js": staticGeneratorCkeditorPluginsUndoLangPtBrJs,
	"static/generator/ckeditor/plugins/undo/lang/pt.js": staticGeneratorCkeditorPluginsUndoLangPtJs,
	"static/generator/ckeditor/plugins/undo/lang/ro.js": staticGeneratorCkeditorPluginsUndoLangRoJs,
	"static/generator/ckeditor/plugins/undo/lang/ru.js": staticGeneratorCkeditorPluginsUndoLangRuJs,
	"static/generator/ckeditor/plugins/undo/lang/si.js": staticGeneratorCkeditorPluginsUndoLangSiJs,
	"static/generator/ckeditor/plugins/undo/lang/sk.js": staticGeneratorCkeditorPluginsUndoLangSkJs,
	"static/generator/ckeditor/plugins/undo/lang/sl.js": staticGeneratorCkeditorPluginsUndoLangSlJs,
	"static/generator/ckeditor/plugins/undo/lang/sq.js": staticGeneratorCkeditorPluginsUndoLangSqJs,
	"static/generator/ckeditor/plugins/undo/lang/sr-latn.js": staticGeneratorCkeditorPluginsUndoLangSrLatnJs,
	"static/generator/ckeditor/plugins/undo/lang/sr.js": staticGeneratorCkeditorPluginsUndoLangSrJs,
	"static/generator/ckeditor/plugins/undo/lang/sv.js": staticGeneratorCkeditorPluginsUndoLangSvJs,
	"static/generator/ckeditor/plugins/undo/lang/th.js": staticGeneratorCkeditorPluginsUndoLangThJs,
	"static/generator/ckeditor/plugins/undo/lang/tr.js": staticGeneratorCkeditorPluginsUndoLangTrJs,
	"static/generator/ckeditor/plugins/undo/lang/tt.js": staticGeneratorCkeditorPluginsUndoLangTtJs,
	"static/generator/ckeditor/plugins/undo/lang/ug.js": staticGeneratorCkeditorPluginsUndoLangUgJs,
	"static/generator/ckeditor/plugins/undo/lang/uk.js": staticGeneratorCkeditorPluginsUndoLangUkJs,
	"static/generator/ckeditor/plugins/undo/lang/vi.js": staticGeneratorCkeditorPluginsUndoLangViJs,
	"static/generator/ckeditor/plugins/undo/lang/zh-cn.js": staticGeneratorCkeditorPluginsUndoLangZhCnJs,
	"static/generator/ckeditor/plugins/undo/lang/zh.js": staticGeneratorCkeditorPluginsUndoLangZhJs,
	"static/generator/ckeditor/plugins/undo/plugin.js": staticGeneratorCkeditorPluginsUndoPluginJs,
	"static/generator/ckeditor/plugins/widget/images/handle.png": staticGeneratorCkeditorPluginsWidgetImagesHandlePng,
	"static/generator/ckeditor/plugins/wsc/LICENSE.md": staticGeneratorCkeditorPluginsWscLicenseMd,
	"static/generator/ckeditor/plugins/wsc/README.js": staticGeneratorCkeditorPluginsWscReadmeJs,
	"static/generator/ckeditor/plugins/wsc/README.md": staticGeneratorCkeditorPluginsWscReadmeMd,
	"static/generator/ckeditor/plugins/wsc/dialogs/ciframe.html": staticGeneratorCkeditorPluginsWscDialogsCiframeHtml,
	"static/generator/ckeditor/plugins/wsc/dialogs/tmp.html": staticGeneratorCkeditorPluginsWscDialogsTmpHtml,
	"static/generator/ckeditor/plugins/wsc/dialogs/tmpFrameset.html": staticGeneratorCkeditorPluginsWscDialogsTmpframesetHtml,
	"static/generator/ckeditor/plugins/wsc/dialogs/wsc.css": staticGeneratorCkeditorPluginsWscDialogsWscCss,
	"static/generator/ckeditor/plugins/wsc/dialogs/wsc.js": staticGeneratorCkeditorPluginsWscDialogsWscJs,
	"static/generator/ckeditor/plugins/wsc/dialogs/wsc_ie.js": staticGeneratorCkeditorPluginsWscDialogsWsc_ieJs,
	"static/generator/ckeditor/plugins/wsc/icons/hidpi/spellchecker.png": staticGeneratorCkeditorPluginsWscIconsHidpiSpellcheckerPng,
	"static/generator/ckeditor/plugins/wsc/icons/spellchecker.png": staticGeneratorCkeditorPluginsWscIconsSpellcheckerPng,
	"static/generator/ckeditor/plugins/wsc/lang/af.js": staticGeneratorCkeditorPluginsWscLangAfJs,
	"static/generator/ckeditor/plugins/wsc/lang/ar.js": staticGeneratorCkeditorPluginsWscLangArJs,
	"static/generator/ckeditor/plugins/wsc/lang/bg.js": staticGeneratorCkeditorPluginsWscLangBgJs,
	"static/generator/ckeditor/plugins/wsc/lang/bn.js": staticGeneratorCkeditorPluginsWscLangBnJs,
	"static/generator/ckeditor/plugins/wsc/lang/bs.js": staticGeneratorCkeditorPluginsWscLangBsJs,
	"static/generator/ckeditor/plugins/wsc/lang/ca.js": staticGeneratorCkeditorPluginsWscLangCaJs,
	"static/generator/ckeditor/plugins/wsc/lang/cs.js": staticGeneratorCkeditorPluginsWscLangCsJs,
	"static/generator/ckeditor/plugins/wsc/lang/cy.js": staticGeneratorCkeditorPluginsWscLangCyJs,
	"static/generator/ckeditor/plugins/wsc/lang/da.js": staticGeneratorCkeditorPluginsWscLangDaJs,
	"static/generator/ckeditor/plugins/wsc/lang/de.js": staticGeneratorCkeditorPluginsWscLangDeJs,
	"static/generator/ckeditor/plugins/wsc/lang/el.js": staticGeneratorCkeditorPluginsWscLangElJs,
	"static/generator/ckeditor/plugins/wsc/lang/en-au.js": staticGeneratorCkeditorPluginsWscLangEnAuJs,
	"static/generator/ckeditor/plugins/wsc/lang/en-ca.js": staticGeneratorCkeditorPluginsWscLangEnCaJs,
	"static/generator/ckeditor/plugins/wsc/lang/en-gb.js": staticGeneratorCkeditorPluginsWscLangEnGbJs,
	"static/generator/ckeditor/plugins/wsc/lang/en.js": staticGeneratorCkeditorPluginsWscLangEnJs,
	"static/generator/ckeditor/plugins/wsc/lang/eo.js": staticGeneratorCkeditorPluginsWscLangEoJs,
	"static/generator/ckeditor/plugins/wsc/lang/es.js": staticGeneratorCkeditorPluginsWscLangEsJs,
	"static/generator/ckeditor/plugins/wsc/lang/et.js": staticGeneratorCkeditorPluginsWscLangEtJs,
	"static/generator/ckeditor/plugins/wsc/lang/eu.js": staticGeneratorCkeditorPluginsWscLangEuJs,
	"static/generator/ckeditor/plugins/wsc/lang/fa.js": staticGeneratorCkeditorPluginsWscLangFaJs,
	"static/generator/ckeditor/plugins/wsc/lang/fi.js": staticGeneratorCkeditorPluginsWscLangFiJs,
	"static/generator/ckeditor/plugins/wsc/lang/fo.js": staticGeneratorCkeditorPluginsWscLangFoJs,
	"static/generator/ckeditor/plugins/wsc/lang/fr-ca.js": staticGeneratorCkeditorPluginsWscLangFrCaJs,
	"static/generator/ckeditor/plugins/wsc/lang/fr.js": staticGeneratorCkeditorPluginsWscLangFrJs,
	"static/generator/ckeditor/plugins/wsc/lang/gl.js": staticGeneratorCkeditorPluginsWscLangGlJs,
	"static/generator/ckeditor/plugins/wsc/lang/gu.js": staticGeneratorCkeditorPluginsWscLangGuJs,
	"static/generator/ckeditor/plugins/wsc/lang/he.js": staticGeneratorCkeditorPluginsWscLangHeJs,
	"static/generator/ckeditor/plugins/wsc/lang/hi.js": staticGeneratorCkeditorPluginsWscLangHiJs,
	"static/generator/ckeditor/plugins/wsc/lang/hr.js": staticGeneratorCkeditorPluginsWscLangHrJs,
	"static/generator/ckeditor/plugins/wsc/lang/hu.js": staticGeneratorCkeditorPluginsWscLangHuJs,
	"static/generator/ckeditor/plugins/wsc/lang/is.js": staticGeneratorCkeditorPluginsWscLangIsJs,
	"static/generator/ckeditor/plugins/wsc/lang/it.js": staticGeneratorCkeditorPluginsWscLangItJs,
	"static/generator/ckeditor/plugins/wsc/lang/ja.js": staticGeneratorCkeditorPluginsWscLangJaJs,
	"static/generator/ckeditor/plugins/wsc/lang/ka.js": staticGeneratorCkeditorPluginsWscLangKaJs,
	"static/generator/ckeditor/plugins/wsc/lang/km.js": staticGeneratorCkeditorPluginsWscLangKmJs,
	"static/generator/ckeditor/plugins/wsc/lang/ko.js": staticGeneratorCkeditorPluginsWscLangKoJs,
	"static/generator/ckeditor/plugins/wsc/lang/ku.js": staticGeneratorCkeditorPluginsWscLangKuJs,
	"static/generator/ckeditor/plugins/wsc/lang/lt.js": staticGeneratorCkeditorPluginsWscLangLtJs,
	"static/generator/ckeditor/plugins/wsc/lang/lv.js": staticGeneratorCkeditorPluginsWscLangLvJs,
	"static/generator/ckeditor/plugins/wsc/lang/mk.js": staticGeneratorCkeditorPluginsWscLangMkJs,
	"static/generator/ckeditor/plugins/wsc/lang/mn.js": staticGeneratorCkeditorPluginsWscLangMnJs,
	"static/generator/ckeditor/plugins/wsc/lang/ms.js": staticGeneratorCkeditorPluginsWscLangMsJs,
	"static/generator/ckeditor/plugins/wsc/lang/nb.js": staticGeneratorCkeditorPluginsWscLangNbJs,
	"static/generator/ckeditor/plugins/wsc/lang/nl.js": staticGeneratorCkeditorPluginsWscLangNlJs,
	"static/generator/ckeditor/plugins/wsc/lang/no.js": staticGeneratorCkeditorPluginsWscLangNoJs,
	"static/generator/ckeditor/plugins/wsc/lang/pl.js": staticGeneratorCkeditorPluginsWscLangPlJs,
	"static/generator/ckeditor/plugins/wsc/lang/pt-br.js": staticGeneratorCkeditorPluginsWscLangPtBrJs,
	"static/generator/ckeditor/plugins/wsc/lang/pt.js": staticGeneratorCkeditorPluginsWscLangPtJs,
	"static/generator/ckeditor/plugins/wsc/lang/ro.js": staticGeneratorCkeditorPluginsWscLangRoJs,
	"static/generator/ckeditor/plugins/wsc/lang/ru.js": staticGeneratorCkeditorPluginsWscLangRuJs,
	"static/generator/ckeditor/plugins/wsc/lang/sk.js": staticGeneratorCkeditorPluginsWscLangSkJs,
	"static/generator/ckeditor/plugins/wsc/lang/sl.js": staticGeneratorCkeditorPluginsWscLangSlJs,
	"static/generator/ckeditor/plugins/wsc/lang/sr-latn.js": staticGeneratorCkeditorPluginsWscLangSrLatnJs,
	"static/generator/ckeditor/plugins/wsc/lang/sr.js": staticGeneratorCkeditorPluginsWscLangSrJs,
	"static/generator/ckeditor/plugins/wsc/lang/sv.js": staticGeneratorCkeditorPluginsWscLangSvJs,
	"static/generator/ckeditor/plugins/wsc/lang/th.js": staticGeneratorCkeditorPluginsWscLangThJs,
	"static/generator/ckeditor/plugins/wsc/lang/tr.js": staticGeneratorCkeditorPluginsWscLangTrJs,
	"static/generator/ckeditor/plugins/wsc/lang/ug.js": staticGeneratorCkeditorPluginsWscLangUgJs,
	"static/generator/ckeditor/plugins/wsc/lang/uk.js": staticGeneratorCkeditorPluginsWscLangUkJs,
	"static/generator/ckeditor/plugins/wsc/lang/vi.js": staticGeneratorCkeditorPluginsWscLangViJs,
	"static/generator/ckeditor/plugins/wsc/lang/zh-cn.js": staticGeneratorCkeditorPluginsWscLangZhCnJs,
	"static/generator/ckeditor/plugins/wsc/lang/zh.js": staticGeneratorCkeditorPluginsWscLangZhJs,
	"static/generator/ckeditor/plugins/wsc/plugin.js": staticGeneratorCkeditorPluginsWscPluginJs,
	"static/generator/ckeditor/plugins/wsc/skins/moono-lisa/wsc.css": staticGeneratorCkeditorPluginsWscSkinsMoonoLisaWscCss,
	"static/generator/ckeditor/plugins/wysiwygarea/plugin.js": staticGeneratorCkeditorPluginsWysiwygareaPluginJs,
	"static/generator/ckeditor/plugins/wysiwygarea/samples/fullpage.html": staticGeneratorCkeditorPluginsWysiwygareaSamplesFullpageHtml,
	"static/generator/ckeditor/samples/ajax.html": staticGeneratorCkeditorSamplesAjaxHtml,
	"static/generator/ckeditor/samples/api.html": staticGeneratorCkeditorSamplesApiHtml,
	"static/generator/ckeditor/samples/appendto.html": staticGeneratorCkeditorSamplesAppendtoHtml,
	"static/generator/ckeditor/samples/assets/inlineall/logo.png": staticGeneratorCkeditorSamplesAssetsInlineallLogoPng,
	"static/generator/ckeditor/samples/assets/outputxhtml/outputxhtml.css": staticGeneratorCkeditorSamplesAssetsOutputxhtmlOutputxhtmlCss,
	"static/generator/ckeditor/samples/assets/posteddata.php": staticGeneratorCkeditorSamplesAssetsPosteddataPhp,
	"static/generator/ckeditor/samples/assets/sample.css": staticGeneratorCkeditorSamplesAssetsSampleCss,
	"static/generator/ckeditor/samples/assets/sample.jpg": staticGeneratorCkeditorSamplesAssetsSampleJpg,
	"static/generator/ckeditor/samples/assets/uilanguages/languages.js": staticGeneratorCkeditorSamplesAssetsUilanguagesLanguagesJs,
	"static/generator/ckeditor/samples/css/samples.css": staticGeneratorCkeditorSamplesCssSamplesCss,
	"static/generator/ckeditor/samples/datafiltering.html": staticGeneratorCkeditorSamplesDatafilteringHtml,
	"static/generator/ckeditor/samples/debug.log": staticGeneratorCkeditorSamplesDebugLog,
	"static/generator/ckeditor/samples/divreplace.html": staticGeneratorCkeditorSamplesDivreplaceHtml,
	"static/generator/ckeditor/samples/img/github-top.png": staticGeneratorCkeditorSamplesImgGithubTopPng,
	"static/generator/ckeditor/samples/img/header-bg.png": staticGeneratorCkeditorSamplesImgHeaderBgPng,
	"static/generator/ckeditor/samples/img/header-separator.png": staticGeneratorCkeditorSamplesImgHeaderSeparatorPng,
	"static/generator/ckeditor/samples/img/logo.png": staticGeneratorCkeditorSamplesImgLogoPng,
	"static/generator/ckeditor/samples/img/navigation-tip.png": staticGeneratorCkeditorSamplesImgNavigationTipPng,
	"static/generator/ckeditor/samples/index.html": staticGeneratorCkeditorSamplesIndexHtml,
	"static/generator/ckeditor/samples/inlineall.html": staticGeneratorCkeditorSamplesInlineallHtml,
	"static/generator/ckeditor/samples/inlinebycode.html": staticGeneratorCkeditorSamplesInlinebycodeHtml,
	"static/generator/ckeditor/samples/inlinetextarea.html": staticGeneratorCkeditorSamplesInlinetextareaHtml,
	"static/generator/ckeditor/samples/jquery.html": staticGeneratorCkeditorSamplesJqueryHtml,
	"static/generator/ckeditor/samples/js/sample.js": staticGeneratorCkeditorSamplesJsSampleJs,
	"static/generator/ckeditor/samples/js/sf.js": staticGeneratorCkeditorSamplesJsSfJs,
	"static/generator/ckeditor/samples/old/ajax.html": staticGeneratorCkeditorSamplesOldAjaxHtml,
	"static/generator/ckeditor/samples/old/api.html": staticGeneratorCkeditorSamplesOldApiHtml,
	"static/generator/ckeditor/samples/old/appendto.html": staticGeneratorCkeditorSamplesOldAppendtoHtml,
	"static/generator/ckeditor/samples/old/assets/inlineall/logo.png": staticGeneratorCkeditorSamplesOldAssetsInlineallLogoPng,
	"static/generator/ckeditor/samples/old/assets/outputxhtml/outputxhtml.css": staticGeneratorCkeditorSamplesOldAssetsOutputxhtmlOutputxhtmlCss,
	"static/generator/ckeditor/samples/old/assets/posteddata.php": staticGeneratorCkeditorSamplesOldAssetsPosteddataPhp,
	"static/generator/ckeditor/samples/old/assets/sample.jpg": staticGeneratorCkeditorSamplesOldAssetsSampleJpg,
	"static/generator/ckeditor/samples/old/assets/uilanguages/languages.js": staticGeneratorCkeditorSamplesOldAssetsUilanguagesLanguagesJs,
	"static/generator/ckeditor/samples/old/datafiltering.html": staticGeneratorCkeditorSamplesOldDatafilteringHtml,
	"static/generator/ckeditor/samples/old/dialog/assets/my_dialog.js": staticGeneratorCkeditorSamplesOldDialogAssetsMy_dialogJs,
	"static/generator/ckeditor/samples/old/dialog/dialog.html": staticGeneratorCkeditorSamplesOldDialogDialogHtml,
	"static/generator/ckeditor/samples/old/divreplace.html": staticGeneratorCkeditorSamplesOldDivreplaceHtml,
	"static/generator/ckeditor/samples/old/enterkey/enterkey.html": staticGeneratorCkeditorSamplesOldEnterkeyEnterkeyHtml,
	"static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.fla": staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashFla,
	"static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/outputforflash.swf": staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashSwf,
	"static/generator/ckeditor/samples/old/htmlwriter/assets/outputforflash/swfobject.js": staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashSwfobjectJs,
	"static/generator/ckeditor/samples/old/htmlwriter/outputforflash.html": staticGeneratorCkeditorSamplesOldHtmlwriterOutputforflashHtml,
	"static/generator/ckeditor/samples/old/htmlwriter/outputhtml.html": staticGeneratorCkeditorSamplesOldHtmlwriterOutputhtmlHtml,
	"static/generator/ckeditor/samples/old/index.html": staticGeneratorCkeditorSamplesOldIndexHtml,
	"static/generator/ckeditor/samples/old/inlineall.html": staticGeneratorCkeditorSamplesOldInlineallHtml,
	"static/generator/ckeditor/samples/old/inlinebycode.html": staticGeneratorCkeditorSamplesOldInlinebycodeHtml,
	"static/generator/ckeditor/samples/old/inlinetextarea.html": staticGeneratorCkeditorSamplesOldInlinetextareaHtml,
	"static/generator/ckeditor/samples/old/jquery.html": staticGeneratorCkeditorSamplesOldJqueryHtml,
	"static/generator/ckeditor/samples/old/magicline/magicline.html": staticGeneratorCkeditorSamplesOldMagiclineMagiclineHtml,
	"static/generator/ckeditor/samples/old/readonly.html": staticGeneratorCkeditorSamplesOldReadonlyHtml,
	"static/generator/ckeditor/samples/old/replacebyclass.html": staticGeneratorCkeditorSamplesOldReplacebyclassHtml,
	"static/generator/ckeditor/samples/old/replacebycode.html": staticGeneratorCkeditorSamplesOldReplacebycodeHtml,
	"static/generator/ckeditor/samples/old/sample.css": staticGeneratorCkeditorSamplesOldSampleCss,
	"static/generator/ckeditor/samples/old/sample.js": staticGeneratorCkeditorSamplesOldSampleJs,
	"static/generator/ckeditor/samples/old/sample_posteddata.php": staticGeneratorCkeditorSamplesOldSample_posteddataPhp,
	"static/generator/ckeditor/samples/old/tabindex.html": staticGeneratorCkeditorSamplesOldTabindexHtml,
	"static/generator/ckeditor/samples/old/toolbar/toolbar.html": staticGeneratorCkeditorSamplesOldToolbarToolbarHtml,
	"static/generator/ckeditor/samples/old/uicolor.html": staticGeneratorCkeditorSamplesOldUicolorHtml,
	"static/generator/ckeditor/samples/old/uilanguages.html": staticGeneratorCkeditorSamplesOldUilanguagesHtml,
	"static/generator/ckeditor/samples/old/wysiwygarea/fullpage.html": staticGeneratorCkeditorSamplesOldWysiwygareaFullpageHtml,
	"static/generator/ckeditor/samples/old/xhtmlstyle.html": staticGeneratorCkeditorSamplesOldXhtmlstyleHtml,
	"static/generator/ckeditor/samples/plugins/dialog/assets/my_dialog.js": staticGeneratorCkeditorSamplesPluginsDialogAssetsMy_dialogJs,
	"static/generator/ckeditor/samples/plugins/dialog/dialog.html": staticGeneratorCkeditorSamplesPluginsDialogDialogHtml,
	"static/generator/ckeditor/samples/plugins/enterkey/enterkey.html": staticGeneratorCkeditorSamplesPluginsEnterkeyEnterkeyHtml,
	"static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/outputforflash.fla": staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashFla,
	"static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/outputforflash.swf": staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashSwf,
	"static/generator/ckeditor/samples/plugins/htmlwriter/assets/outputforflash/swfobject.js": staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashSwfobjectJs,
	"static/generator/ckeditor/samples/plugins/htmlwriter/outputforflash.html": staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputforflashHtml,
	"static/generator/ckeditor/samples/plugins/htmlwriter/outputhtml.html": staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputhtmlHtml,
	"static/generator/ckeditor/samples/plugins/magicline/magicline.html": staticGeneratorCkeditorSamplesPluginsMagiclineMagiclineHtml,
	"static/generator/ckeditor/samples/plugins/toolbar/toolbar.html": staticGeneratorCkeditorSamplesPluginsToolbarToolbarHtml,
	"static/generator/ckeditor/samples/plugins/wysiwygarea/fullpage.html": staticGeneratorCkeditorSamplesPluginsWysiwygareaFullpageHtml,
	"static/generator/ckeditor/samples/readonly.html": staticGeneratorCkeditorSamplesReadonlyHtml,
	"static/generator/ckeditor/samples/replacebyclass.html": staticGeneratorCkeditorSamplesReplacebyclassHtml,
	"static/generator/ckeditor/samples/replacebycode.html": staticGeneratorCkeditorSamplesReplacebycodeHtml,
	"static/generator/ckeditor/samples/sample.css": staticGeneratorCkeditorSamplesSampleCss,
	"static/generator/ckeditor/samples/sample.js": staticGeneratorCkeditorSamplesSampleJs,
	"static/generator/ckeditor/samples/sample_posteddata.php": staticGeneratorCkeditorSamplesSample_posteddataPhp,
	"static/generator/ckeditor/samples/tabindex.html": staticGeneratorCkeditorSamplesTabindexHtml,
	"static/generator/ckeditor/samples/toolbarconfigurator/bender.js": staticGeneratorCkeditorSamplesToolbarconfiguratorBenderJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/css/fontello.css": staticGeneratorCkeditorSamplesToolbarconfiguratorCssFontelloCss,
	"static/generator/ckeditor/samples/toolbarconfigurator/font/LICENSE.txt": staticGeneratorCkeditorSamplesToolbarconfiguratorFontLicenseTxt,
	"static/generator/ckeditor/samples/toolbarconfigurator/font/config.json": staticGeneratorCkeditorSamplesToolbarconfiguratorFontConfigJson,
	"static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.eot": staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloEot,
	"static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.svg": staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloSvg,
	"static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.ttf": staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloTtf,
	"static/generator/ckeditor/samples/toolbarconfigurator/font/fontello.woff": staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloWoff,
	"static/generator/ckeditor/samples/toolbarconfigurator/index.html": staticGeneratorCkeditorSamplesToolbarconfiguratorIndexHtml,
	"static/generator/ckeditor/samples/toolbarconfigurator/js/abstracttoolbarmodifier.js": staticGeneratorCkeditorSamplesToolbarconfiguratorJsAbstracttoolbarmodifierJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/js/fulltoolbareditor.js": staticGeneratorCkeditorSamplesToolbarconfiguratorJsFulltoolbareditorJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/js/toolbarmodifier.js": staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbarmodifierJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/js/toolbartextmodifier.js": staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbartextmodifierJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/less/base.less": staticGeneratorCkeditorSamplesToolbarconfiguratorLessBaseLess,
	"static/generator/ckeditor/samples/toolbarconfigurator/less/toolbarmodifier.less": staticGeneratorCkeditorSamplesToolbarconfiguratorLessToolbarmodifierLess,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/LICENSE": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorLicense,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/README.md": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorReadmeMd,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.css": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorCss,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/codemirror.js": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/javascript.js": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorJavascriptJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/neo.css": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorNeoCss,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.css": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintCss,
	"static/generator/ckeditor/samples/toolbarconfigurator/lib/codemirror/show-hint.js": staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintJs,
	"static/generator/ckeditor/samples/toolbarconfigurator/package.json": staticGeneratorCkeditorSamplesToolbarconfiguratorPackageJson,
	"static/generator/ckeditor/samples/toolbarconfigurator/tests/one.js": staticGeneratorCkeditorSamplesToolbarconfiguratorTestsOneJs,
	"static/generator/ckeditor/samples/uicolor.html": staticGeneratorCkeditorSamplesUicolorHtml,
	"static/generator/ckeditor/samples/uilanguages.html": staticGeneratorCkeditorSamplesUilanguagesHtml,
	"static/generator/ckeditor/samples/xhtmlstyle.html": staticGeneratorCkeditorSamplesXhtmlstyleHtml,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog.css": staticGeneratorCkeditorSkinsBootstrapckTempCssDialogCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie.css": staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ieCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie7.css": staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie7Css,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_ie8.css": staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie8Css,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_iequirks.css": staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_iequirksCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/dialog_opera.css": staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_operaCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/editor.css": staticGeneratorCkeditorSkinsBootstrapckTempCssEditorCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_gecko.css": staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_geckoCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie.css": staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ieCss,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie7.css": staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie7Css,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_ie8.css": staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie8Css,
	"static/generator/ckeditor/skins/bootstrapck/.temp/css/editor_iequirks.css": staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_iequirksCss,
	"static/generator/ckeditor/skins/bootstrapck/dev/icons16.svg": staticGeneratorCkeditorSkinsBootstrapckDevIcons16Svg,
	"static/generator/ckeditor/skins/bootstrapck/dev/icons32.svg": staticGeneratorCkeditorSkinsBootstrapckDevIcons32Svg,
	"static/generator/ckeditor/skins/bootstrapck/dev/locations.json": staticGeneratorCkeditorSkinsBootstrapckDevLocationsJson,
	"static/generator/ckeditor/skins/bootstrapck/dialog.css": staticGeneratorCkeditorSkinsBootstrapckDialogCss,
	"static/generator/ckeditor/skins/bootstrapck/dialog_ie.css": staticGeneratorCkeditorSkinsBootstrapckDialog_ieCss,
	"static/generator/ckeditor/skins/bootstrapck/dialog_ie7.css": staticGeneratorCkeditorSkinsBootstrapckDialog_ie7Css,
	"static/generator/ckeditor/skins/bootstrapck/dialog_ie8.css": staticGeneratorCkeditorSkinsBootstrapckDialog_ie8Css,
	"static/generator/ckeditor/skins/bootstrapck/dialog_iequirks.css": staticGeneratorCkeditorSkinsBootstrapckDialog_iequirksCss,
	"static/generator/ckeditor/skins/bootstrapck/dialog_opera.css": staticGeneratorCkeditorSkinsBootstrapckDialog_operaCss,
	"static/generator/ckeditor/skins/bootstrapck/editor.css": staticGeneratorCkeditorSkinsBootstrapckEditorCss,
	"static/generator/ckeditor/skins/bootstrapck/editor_gecko.css": staticGeneratorCkeditorSkinsBootstrapckEditor_geckoCss,
	"static/generator/ckeditor/skins/bootstrapck/editor_ie.css": staticGeneratorCkeditorSkinsBootstrapckEditor_ieCss,
	"static/generator/ckeditor/skins/bootstrapck/editor_ie7.css": staticGeneratorCkeditorSkinsBootstrapckEditor_ie7Css,
	"static/generator/ckeditor/skins/bootstrapck/editor_ie8.css": staticGeneratorCkeditorSkinsBootstrapckEditor_ie8Css,
	"static/generator/ckeditor/skins/bootstrapck/editor_iequirks.css": staticGeneratorCkeditorSkinsBootstrapckEditor_iequirksCss,
	"static/generator/ckeditor/skins/bootstrapck/icons.png": staticGeneratorCkeditorSkinsBootstrapckIconsPng,
	"static/generator/ckeditor/skins/bootstrapck/icons_hidpi.png": staticGeneratorCkeditorSkinsBootstrapckIcons_hidpiPng,
	"static/generator/ckeditor/skins/bootstrapck/images/arrow.png": staticGeneratorCkeditorSkinsBootstrapckImagesArrowPng,
	"static/generator/ckeditor/skins/bootstrapck/images/close.png": staticGeneratorCkeditorSkinsBootstrapckImagesClosePng,
	"static/generator/ckeditor/skins/bootstrapck/images/hidpi/close.png": staticGeneratorCkeditorSkinsBootstrapckImagesHidpiClosePng,
	"static/generator/ckeditor/skins/bootstrapck/images/hidpi/lock-open.png": staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockOpenPng,
	"static/generator/ckeditor/skins/bootstrapck/images/hidpi/lock.png": staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockPng,
	"static/generator/ckeditor/skins/bootstrapck/images/hidpi/refresh.png": staticGeneratorCkeditorSkinsBootstrapckImagesHidpiRefreshPng,
	"static/generator/ckeditor/skins/bootstrapck/images/lock-open.png": staticGeneratorCkeditorSkinsBootstrapckImagesLockOpenPng,
	"static/generator/ckeditor/skins/bootstrapck/images/lock.png": staticGeneratorCkeditorSkinsBootstrapckImagesLockPng,
	"static/generator/ckeditor/skins/bootstrapck/images/refresh.png": staticGeneratorCkeditorSkinsBootstrapckImagesRefreshPng,
	"static/generator/ckeditor/skins/bootstrapck/readme.md": staticGeneratorCkeditorSkinsBootstrapckReadmeMd,
	"static/generator/ckeditor/skins/bootstrapck/sample/bootstrapck-sample.html": staticGeneratorCkeditorSkinsBootstrapckSampleBootstrapckSampleHtml,
	"static/generator/ckeditor/skins/bootstrapck/sample/css/bootstrapck-sample.css": staticGeneratorCkeditorSkinsBootstrapckSampleCssBootstrapckSampleCss,
	"static/generator/ckeditor/skins/bootstrapck/sample/js/analytics.js": staticGeneratorCkeditorSkinsBootstrapckSampleJsAnalyticsJs,
	"static/generator/ckeditor/skins/bootstrapck/sample/js/jquery-1.11.0.min.js": staticGeneratorCkeditorSkinsBootstrapckSampleJsJquery1110MinJs,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/gecko/editor_gecko.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificGeckoEditor_geckoScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie/dialog_ie.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeDialog_ieScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie/editor_ie.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeEditor_ieScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie7/dialog_ie7.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Dialog_ie7Scss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie7/editor_ie7.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Editor_ie7Scss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie8/dialog_ie8.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Dialog_ie8Scss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/ie8/editor_ie8.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Editor_ie8Scss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/iequirks/dialog_iequirks.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksDialog_iequirksScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/iequirks/editor_iequirks.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksEditor_iequirksScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/browser-specific/opera/dialog_opera.scss": staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificOperaDialog_operaScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_colorpanel.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_colorpanelScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_elementspath.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_elementspathScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_mainui.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_mainuiScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_menu.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_menuScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_panel.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_panelScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_presets.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_presetsScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_reset.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_resetScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_richcombo.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_richcomboScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/_toolbar.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponents_toolbarScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/components/editor.scss": staticGeneratorCkeditorSkinsBootstrapckScssComponentsEditorScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/config/_colors.scss": staticGeneratorCkeditorSkinsBootstrapckScssConfig_colorsScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/config/_config.scss": staticGeneratorCkeditorSkinsBootstrapckScssConfig_configScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/config/_defaults.scss": staticGeneratorCkeditorSkinsBootstrapckScssConfig_defaultsScss,
	"static/generator/ckeditor/skins/bootstrapck/scss/dialog/dialog.scss": staticGeneratorCkeditorSkinsBootstrapckScssDialogDialogScss,
	"static/generator/ckeditor/skins/bootstrapck/skin.js": staticGeneratorCkeditorSkinsBootstrapckSkinJs,
	"static/generator/ckeditor/skins/moono/dialog.css": staticGeneratorCkeditorSkinsMoonoDialogCss,
	"static/generator/ckeditor/skins/moono/dialog_ie.css": staticGeneratorCkeditorSkinsMoonoDialog_ieCss,
	"static/generator/ckeditor/skins/moono/dialog_ie7.css": staticGeneratorCkeditorSkinsMoonoDialog_ie7Css,
	"static/generator/ckeditor/skins/moono/dialog_ie8.css": staticGeneratorCkeditorSkinsMoonoDialog_ie8Css,
	"static/generator/ckeditor/skins/moono/dialog_iequirks.css": staticGeneratorCkeditorSkinsMoonoDialog_iequirksCss,
	"static/generator/ckeditor/skins/moono/dialog_opera.css": staticGeneratorCkeditorSkinsMoonoDialog_operaCss,
	"static/generator/ckeditor/skins/moono/editor.css": staticGeneratorCkeditorSkinsMoonoEditorCss,
	"static/generator/ckeditor/skins/moono/editor_gecko.css": staticGeneratorCkeditorSkinsMoonoEditor_geckoCss,
	"static/generator/ckeditor/skins/moono/editor_ie.css": staticGeneratorCkeditorSkinsMoonoEditor_ieCss,
	"static/generator/ckeditor/skins/moono/editor_ie7.css": staticGeneratorCkeditorSkinsMoonoEditor_ie7Css,
	"static/generator/ckeditor/skins/moono/editor_ie8.css": staticGeneratorCkeditorSkinsMoonoEditor_ie8Css,
	"static/generator/ckeditor/skins/moono/editor_iequirks.css": staticGeneratorCkeditorSkinsMoonoEditor_iequirksCss,
	"static/generator/ckeditor/skins/moono/icons.png": staticGeneratorCkeditorSkinsMoonoIconsPng,
	"static/generator/ckeditor/skins/moono/icons_hidpi.png": staticGeneratorCkeditorSkinsMoonoIcons_hidpiPng,
	"static/generator/ckeditor/skins/moono/images/arrow.png": staticGeneratorCkeditorSkinsMoonoImagesArrowPng,
	"static/generator/ckeditor/skins/moono/images/close.png": staticGeneratorCkeditorSkinsMoonoImagesClosePng,
	"static/generator/ckeditor/skins/moono/images/hidpi/close.png": staticGeneratorCkeditorSkinsMoonoImagesHidpiClosePng,
	"static/generator/ckeditor/skins/moono/images/hidpi/lock-open.png": staticGeneratorCkeditorSkinsMoonoImagesHidpiLockOpenPng,
	"static/generator/ckeditor/skins/moono/images/hidpi/lock.png": staticGeneratorCkeditorSkinsMoonoImagesHidpiLockPng,
	"static/generator/ckeditor/skins/moono/images/hidpi/refresh.png": staticGeneratorCkeditorSkinsMoonoImagesHidpiRefreshPng,
	"static/generator/ckeditor/skins/moono/images/lock-open.png": staticGeneratorCkeditorSkinsMoonoImagesLockOpenPng,
	"static/generator/ckeditor/skins/moono/images/lock.png": staticGeneratorCkeditorSkinsMoonoImagesLockPng,
	"static/generator/ckeditor/skins/moono/images/refresh.png": staticGeneratorCkeditorSkinsMoonoImagesRefreshPng,
	"static/generator/ckeditor/skins/moono/readme.md": staticGeneratorCkeditorSkinsMoonoReadmeMd,
	"static/generator/ckeditor/skins/moono-lisa/dialog.css": staticGeneratorCkeditorSkinsMoonoLisaDialogCss,
	"static/generator/ckeditor/skins/moono-lisa/dialog_ie.css": staticGeneratorCkeditorSkinsMoonoLisaDialog_ieCss,
	"static/generator/ckeditor/skins/moono-lisa/dialog_ie8.css": staticGeneratorCkeditorSkinsMoonoLisaDialog_ie8Css,
	"static/generator/ckeditor/skins/moono-lisa/dialog_iequirks.css": staticGeneratorCkeditorSkinsMoonoLisaDialog_iequirksCss,
	"static/generator/ckeditor/skins/moono-lisa/editor.css": staticGeneratorCkeditorSkinsMoonoLisaEditorCss,
	"static/generator/ckeditor/skins/moono-lisa/editor_gecko.css": staticGeneratorCkeditorSkinsMoonoLisaEditor_geckoCss,
	"static/generator/ckeditor/skins/moono-lisa/editor_ie.css": staticGeneratorCkeditorSkinsMoonoLisaEditor_ieCss,
	"static/generator/ckeditor/skins/moono-lisa/editor_ie8.css": staticGeneratorCkeditorSkinsMoonoLisaEditor_ie8Css,
	"static/generator/ckeditor/skins/moono-lisa/editor_iequirks.css": staticGeneratorCkeditorSkinsMoonoLisaEditor_iequirksCss,
	"static/generator/ckeditor/skins/moono-lisa/icons.png": staticGeneratorCkeditorSkinsMoonoLisaIconsPng,
	"static/generator/ckeditor/skins/moono-lisa/icons_hidpi.png": staticGeneratorCkeditorSkinsMoonoLisaIcons_hidpiPng,
	"static/generator/ckeditor/skins/moono-lisa/images/arrow.png": staticGeneratorCkeditorSkinsMoonoLisaImagesArrowPng,
	"static/generator/ckeditor/skins/moono-lisa/images/close.png": staticGeneratorCkeditorSkinsMoonoLisaImagesClosePng,
	"static/generator/ckeditor/skins/moono-lisa/images/hidpi/close.png": staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiClosePng,
	"static/generator/ckeditor/skins/moono-lisa/images/hidpi/lock-open.png": staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockOpenPng,
	"static/generator/ckeditor/skins/moono-lisa/images/hidpi/lock.png": staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockPng,
	"static/generator/ckeditor/skins/moono-lisa/images/hidpi/refresh.png": staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiRefreshPng,
	"static/generator/ckeditor/skins/moono-lisa/images/lock-open.png": staticGeneratorCkeditorSkinsMoonoLisaImagesLockOpenPng,
	"static/generator/ckeditor/skins/moono-lisa/images/lock.png": staticGeneratorCkeditorSkinsMoonoLisaImagesLockPng,
	"static/generator/ckeditor/skins/moono-lisa/images/refresh.png": staticGeneratorCkeditorSkinsMoonoLisaImagesRefreshPng,
	"static/generator/ckeditor/skins/moono-lisa/images/spinner.gif": staticGeneratorCkeditorSkinsMoonoLisaImagesSpinnerGif,
	"static/generator/ckeditor/skins/moono-lisa/readme.md": staticGeneratorCkeditorSkinsMoonoLisaReadmeMd,
	"static/generator/ckeditor/styles.js": staticGeneratorCkeditorStylesJs,
	"static/generator/js/code-generator.js": staticGeneratorJsCodeGeneratorJs,
	"static/generator/js/grammar.txt": staticGeneratorJsGrammarTxt,
	"static/generator/js/jquery-ui.js": staticGeneratorJsJqueryUiJs,
	"static/generator/js/jquery-ui_orig.js": staticGeneratorJsJqueryUi_origJs,
	"static/generator/js/jquery.ui.touch-punch.min.js": staticGeneratorJsJqueryUiTouchPunchMinJs,
	"static/generator/js/libs/jquery-3.2.1.min.js": staticGeneratorJsLibsJquery321MinJs,
	"static/generator/js/libs/js-class.js": staticGeneratorJsLibsJsClassJs,
	"static/generator/js/libs/peg-0.10.0.js": staticGeneratorJsLibsPeg0100Js,
	"static/generator/js/main.js": staticGeneratorJsMainJs,
	"static/generator/js/parser.html": staticGeneratorJsParserHtml,
	"static/generator/js/parser.js": staticGeneratorJsParserJs,
	"static/generator/js/scripts.js": staticGeneratorJsScriptsJs,
	"static/generator/js/scripts_orig.js": staticGeneratorJsScripts_origJs,
	"static/generator/style.css": staticGeneratorStyleCss,
	"static/generator.html": staticGeneratorHtml,
	"static/generator_orig.html": staticGenerator_origHtml,
	"static/gov_birth_statement.html": staticGov_birth_statementHtml,
	"static/gov_citizens.html": staticGov_citizensHtml,
	"static/gov_create_budget.html": staticGov_create_budgetHtml,
	"static/gov_currency_exchange.html": staticGov_currency_exchangeHtml,
	"static/gov_date_death.html": staticGov_date_deathHtml,
	"static/gov_register_citizen.html": staticGov_register_citizenHtml,
	"static/gov_register_property.html": staticGov_register_propertyHtml,
	"static/gov_settings.html": staticGov_settingsHtml,
	"static/gov_shares_exchange.html": staticGov_shares_exchangeHtml,
	"static/gov_taxes.html": staticGov_taxesHtml,
	"static/health_buy_medicament.html": staticHealth_buy_medicamentHtml,
	"static/health_entries_clinic.html": staticHealth_entries_clinicHtml,
	"static/health_facility.html": staticHealth_facilityHtml,
	"static/health_immunization_records.html": staticHealth_immunization_recordsHtml,
	"static/health_medical_record.html": staticHealth_medical_recordHtml,
	"static/health_medication_records.html": staticHealth_medication_recordsHtml,
	"static/health_patient.html": staticHealth_patientHtml,
	"static/health_procedure.html": staticHealth_procedureHtml,
	"static/health_symptom.html": staticHealth_symptomHtml,
	"static/health_vital_signs.html": staticHealth_vital_signsHtml,
	"static/history.html": staticHistoryHtml,
	"static/html_elements.html": staticHtml_elementsHtml,
	"static/img/US.svg": staticImgUsSvg,
	"static/img/apps/ava.png": staticImgAppsAvaPng,
	"static/img/apps/business.png": staticImgAppsBusinessPng,
	"static/img/apps/elections.jpg": staticImgAppsElectionsJpg,
	"static/img/apps/euro.jpg": staticImgAppsEuroJpg,
	"static/img/apps/forex.jpg": staticImgAppsForexJpg,
	"static/img/apps/forex.png": staticImgAppsForexPng,
	"static/img/apps/messenger.png": staticImgAppsMessengerPng,
	"static/img/apps/money.jpg": staticImgAppsMoneyJpg,
	"static/img/apps/money.png": staticImgAppsMoneyPng,
	"static/img/apps/property.jpg": staticImgAppsPropertyJpg,
	"static/img/avatar.svg": staticImgAvatarSvg,
	"static/img/back.svg": staticImgBackSvg,
	"static/img/bg.jpg": staticImgBgJpg,
	"static/img/bg.png": staticImgBgPng,
	"static/img/bg1.jpg": staticImgBg1Jpg,
	"static/img/bg10.jpg": staticImgBg10Jpg,
	"static/img/bg2.jpg": staticImgBg2Jpg,
	"static/img/bg3.jpg": staticImgBg3Jpg,
	"static/img/bg4.jpg": staticImgBg4Jpg,
	"static/img/bg5.jpg": staticImgBg5Jpg,
	"static/img/bg6.jpg": staticImgBg6Jpg,
	"static/img/bg7.jpg": staticImgBg7Jpg,
	"static/img/bg8.jpg": staticImgBg8Jpg,
	"static/img/bg9.jpg": staticImgBg9Jpg,
	"static/img/clear.png": staticImgClearPng,
	"static/img/dummy.png": staticImgDummyPng,
	"static/img/favicon.ico": staticImgFaviconIco,
	"static/img/installed.png": staticImgInstalledPng,
	"static/img/loading.gif": staticImgLoadingGif,
	"static/img/lock-bg.jpg": staticImgLockBgJpg,
	"static/img/logo.png": staticImgLogoPng,
	"static/img/logo.svg": staticImgLogoSvg,
	"static/img/logo_null.svg": staticImgLogo_nullSvg,
	"static/img/logo_ok.svg": staticImgLogo_okSvg,
	"static/img/main_loader.gif": staticImgMain_loaderGif,
	"static/img/marker_red.png": staticImgMarker_redPng,
	"static/img/mb-sample.jpg": staticImgMbSampleJpg,
	"static/img/mockup.png": staticImgMockupPng,
	"static/img/no_map.png": staticImgNo_mapPng,
	"static/img/noflag.svg": staticImgNoflagSvg,
	"static/img/profile-bg.jpg": staticImgProfileBgJpg,
	"static/img/radio_icon.png": staticImgRadio_iconPng,
	"static/img/sort_asc.png": staticImgSort_ascPng,
	"static/img/sort_asc_disabled.png": staticImgSort_asc_disabledPng,
	"static/img/sort_both.png": staticImgSort_bothPng,
	"static/img/sort_desc.png": staticImgSort_descPng,
	"static/img/sort_desc_disabled.png": staticImgSort_desc_disabledPng,
	"static/img/spacer.gif": staticImgSpacerGif,
	"static/img/squares.gif": staticImgSquaresGif,
	"static/img/user/01.jpg": staticImgUser01Jpg,
	"static/img/user/02.jpg": staticImgUser02Jpg,
	"static/img/user/03.jpg": staticImgUser03Jpg,
	"static/img/user/04.jpg": staticImgUser04Jpg,
	"static/img/user/05.jpg": staticImgUser05Jpg,
	"static/img/user/06.jpg": staticImgUser06Jpg,
	"static/img/user/07.jpg": staticImgUser07Jpg,
	"static/img/user/08.jpg": staticImgUser08Jpg,
	"static/img/user/09.jpg": staticImgUser09Jpg,
	"static/img/user/10.jpg": staticImgUser10Jpg,
	"static/img/user/11.jpg": staticImgUser11Jpg,
	"static/img/user/12.jpg": staticImgUser12Jpg,
	"static/img/user/13.jpg": staticImgUser13Jpg,
	"static/index.html": staticIndexHtml,
	"static/install_step_0.html": staticInstall_step_0Html,
	"static/install_step_1.html": staticInstall_step_1Html,
	"static/interface.html": staticInterfaceHtml,
	"static/js/app.js": staticJsAppJs,
	"static/js/elliptic.min.js": staticJsEllipticMinJs,
	"static/js/index.js": staticJsIndexJs,
	"static/js/keys.js": staticJsKeysJs,
	"static/js/map.js": staticJsMapJs,
	"static/js/photoEditor/editor.js": staticJsPhotoeditorEditorJs,
	"static/js/triangles.js": staticJsTrianglesJs,
	"static/lang/flags/flags.png": staticLangFlagsFlagsPng,
	"static/lang/gb.js": staticLangGbJs,
	"static/lang/nl.js": staticLangNlJs,
	"static/languages.html": staticLanguagesHtml,
	"static/list_of_tables.html": staticList_of_tablesHtml,
	"static/login.html": staticLoginHtml,
	"static/menu.html": staticMenuHtml,
	"static/modal_anonym.html": staticModal_anonymHtml,
	"static/modal_avatar.html": staticModal_avatarHtml,
	"static/modal_block_detail.html": staticModal_block_detailHtml,
	"static/modal_map.html": staticModal_mapHtml,
	"static/modal_signature.html": staticModal_signatureHtml,
	"static/new_state.html": staticNew_stateHtml,
	"static/new_table.html": staticNew_tableHtml,
	"static/page_template.html": staticPage_templateHtml,
	"static/pass.html": staticPassHtml,
	"static/psw.html": staticPswHtml,
	"static/restore_access.html": staticRestore_accessHtml,
	"static/restore_access_active.html": staticRestore_access_activeHtml,
	"static/row_history.html": staticRow_historyHtml,
	"static/schema.sql": staticSchemaSql,
	"static/show_table.html": staticShow_tableHtml,
	"static/signatures.html": staticSignaturesHtml,
	"static/signatures_list.html": staticSignatures_listHtml,
	"static/signatures_new.html": staticSignatures_newHtml,
	"static/smart_request_citizen.html": staticSmart_request_citizenHtml,
	"static/state_laws.html": staticState_lawsHtml,
	"static/state_parameters.html": staticState_parametersHtml,
	"static/system_info.html": staticSystem_infoHtml,
	"static/test.html": staticTestHtml,
	"static/testnet.html": staticTestnetHtml,
	"static/testnet_register.html": staticTestnet_registerHtml,
	"static/tx_btncont.html": staticTx_btncontHtml,
	"static/tx_button.html": staticTx_buttonHtml,
	"static/tx_form.html": staticTx_formHtml,
	"static/updating_blockchain.html": staticUpdating_blockchainHtml,
	"static/upgrade.html": staticUpgradeHtml,
	"static/wallet_history.html": staticWallet_historyHtml,
	"static/widgets.html": staticWidgetsHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		".idea": &bintree{nil, map[string]*bintree{
			"copyright": &bintree{nil, map[string]*bintree{
				"profiles_settings.xml": &bintree{staticIdeaCopyrightProfiles_settingsXml, map[string]*bintree{}},
			}},
			"modules.xml": &bintree{staticIdeaModulesXml, map[string]*bintree{}},
			"static.iml": &bintree{staticIdeaStaticIml, map[string]*bintree{}},
			"workspace.xml": &bintree{staticIdeaWorkspaceXml, map[string]*bintree{}},
		}},
		"1block": &bintree{static1block, map[string]*bintree{}},
		"Global.tpl": &bintree{staticGlobalTpl, map[string]*bintree{}},
		"accounts.html": &bintree{staticAccountsHtml, map[string]*bintree{}},
		"alert_success.html": &bintree{staticAlert_successHtml, map[string]*bintree{}},
		"anonym_money_transfer.html": &bintree{staticAnonym_money_transferHtml, map[string]*bintree{}},
		"app_catalog.html": &bintree{staticApp_catalogHtml, map[string]*bintree{}},
		"app_template.html": &bintree{staticApp_templateHtml, map[string]*bintree{}},
		"backup.html": &bintree{staticBackupHtml, map[string]*bintree{}},
		"basic.tpl": &bintree{staticBasicTpl, map[string]*bintree{}},
		"beta.html": &bintree{staticBetaHtml, map[string]*bintree{}},
		"block_explorer.html": &bintree{staticBlock_explorerHtml, map[string]*bintree{}},
		"btc.html": &bintree{staticBtcHtml, map[string]*bintree{}},
		"cb_citizens.html": &bintree{staticCb_citizensHtml, map[string]*bintree{}},
		"cb_citizens_new_user.html": &bintree{staticCb_citizens_new_userHtml, map[string]*bintree{}},
		"cb_citizens_requests_foreigners.html": &bintree{staticCb_citizens_requests_foreignersHtml, map[string]*bintree{}},
		"cb_currency_exchange.html": &bintree{staticCb_currency_exchangeHtml, map[string]*bintree{}},
		"cb_delegate.html": &bintree{staticCb_delegateHtml, map[string]*bintree{}},
		"cb_emission_account.html": &bintree{staticCb_emission_accountHtml, map[string]*bintree{}},
		"cb_emission_fixed_amount.html": &bintree{staticCb_emission_fixed_amountHtml, map[string]*bintree{}},
		"cb_emission_proportional.html": &bintree{staticCb_emission_proportionalHtml, map[string]*bintree{}},
		"cb_new_representative.html": &bintree{staticCb_new_representativeHtml, map[string]*bintree{}},
		"cb_representative_details.html": &bintree{staticCb_representative_detailsHtml, map[string]*bintree{}},
		"cb_representatives.html": &bintree{staticCb_representativesHtml, map[string]*bintree{}},
		"cb_select_emission.html": &bintree{staticCb_select_emissionHtml, map[string]*bintree{}},
		"change_node_key.html": &bintree{staticChange_node_keyHtml, map[string]*bintree{}},
		"change_state_smart_laws.html": &bintree{staticChange_state_smart_lawsHtml, map[string]*bintree{}},
		"check_citizen_status.html": &bintree{staticCheck_citizen_statusHtml, map[string]*bintree{}},
		"citizen_admission_high_school.html": &bintree{staticCitizen_admission_high_schoolHtml, map[string]*bintree{}},
		"citizen_bill_payment.html": &bintree{staticCitizen_bill_paymentHtml, map[string]*bintree{}},
		"citizen_divorce.html": &bintree{staticCitizen_divorceHtml, map[string]*bintree{}},
		"citizen_inheritance.html": &bintree{staticCitizen_inheritanceHtml, map[string]*bintree{}},
		"citizen_marriage_contract.html": &bintree{staticCitizen_marriage_contractHtml, map[string]*bintree{}},
		"citizen_marriage_registration.html": &bintree{staticCitizen_marriage_registrationHtml, map[string]*bintree{}},
		"citizen_money_transfer.html": &bintree{staticCitizen_money_transferHtml, map[string]*bintree{}},
		"citizen_new_company.html": &bintree{staticCitizen_new_companyHtml, map[string]*bintree{}},
		"citizen_political_party.html": &bintree{staticCitizen_political_partyHtml, map[string]*bintree{}},
		"citizen_property.html": &bintree{staticCitizen_propertyHtml, map[string]*bintree{}},
		"citizen_rule_details.html": &bintree{staticCitizen_rule_detailsHtml, map[string]*bintree{}},
		"company_application_purchase.html": &bintree{staticCompany_application_purchaseHtml, map[string]*bintree{}},
		"company_contract.html": &bintree{staticCompany_contractHtml, map[string]*bintree{}},
		"company_crowdfunding.html": &bintree{staticCompany_crowdfundingHtml, map[string]*bintree{}},
		"company_currency_exchange.html": &bintree{staticCompany_currency_exchangeHtml, map[string]*bintree{}},
		"company_customhouse.html": &bintree{staticCompany_customhouseHtml, map[string]*bintree{}},
		"company_new_company.html": &bintree{staticCompany_new_companyHtml, map[string]*bintree{}},
		"company_new_good.html": &bintree{staticCompany_new_goodHtml, map[string]*bintree{}},
		"company_new_item.html": &bintree{staticCompany_new_itemHtml, map[string]*bintree{}},
		"company_new_order.html": &bintree{staticCompany_new_orderHtml, map[string]*bintree{}},
		"company_new_shares.html": &bintree{staticCompany_new_sharesHtml, map[string]*bintree{}},
		"company_offer_seller.html": &bintree{staticCompany_offer_sellerHtml, map[string]*bintree{}},
		"company_offer_transport.html": &bintree{staticCompany_offer_transportHtml, map[string]*bintree{}},
		"company_select_transport.html": &bintree{staticCompany_select_transportHtml, map[string]*bintree{}},
		"company_shares_exchange.html": &bintree{staticCompany_shares_exchangeHtml, map[string]*bintree{}},
		"company_smart_contracts.html": &bintree{staticCompany_smart_contractsHtml, map[string]*bintree{}},
		"contracts.html": &bintree{staticContractsHtml, map[string]*bintree{}},
		"countries": &bintree{nil, map[string]*bintree{
			"countries.json": &bintree{staticCountriesCountriesJson, map[string]*bintree{}},
			"flags.png": &bintree{staticCountriesFlagsPng, map[string]*bintree{}},
			"mm.png": &bintree{staticCountriesMmPng, map[string]*bintree{}},
			"no_citizenship.png": &bintree{staticCountriesNo_citizenshipPng, map[string]*bintree{}},
		}},
		"countup.html": &bintree{staticCountupHtml, map[string]*bintree{}},
		"css": &bintree{nil, map[string]*bintree{
			"style.css": &bintree{staticCssStyleCss, map[string]*bintree{}},
		}},
		"dashboard_anonym.html": &bintree{staticDashboard_anonymHtml, map[string]*bintree{}},
		"dashboard_cb.html": &bintree{staticDashboard_cbHtml, map[string]*bintree{}},
		"dashboard_company.html": &bintree{staticDashboard_companyHtml, map[string]*bintree{}},
		"dashboard_gov.html": &bintree{staticDashboard_govHtml, map[string]*bintree{}},
		"dashboard_health.html": &bintree{staticDashboard_healthHtml, map[string]*bintree{}},
		"data": &bintree{nil, map[string]*bintree{
			"entries_doctor.json": &bintree{staticDataEntries_doctorJson, map[string]*bintree{}},
			"immunizations.json": &bintree{staticDataImmunizationsJson, map[string]*bintree{}},
			"medication.json": &bintree{staticDataMedicationJson, map[string]*bintree{}},
			"patients.json": &bintree{staticDataPatientsJson, map[string]*bintree{}},
		}},
		"description.tpl": &bintree{staticDescriptionTpl, map[string]*bintree{}},
		"edit_column.html": &bintree{staticEdit_columnHtml, map[string]*bintree{}},
		"edit_contract.html": &bintree{staticEdit_contractHtml, map[string]*bintree{}},
		"edit_language.html": &bintree{staticEdit_languageHtml, map[string]*bintree{}},
		"edit_menu.html": &bintree{staticEdit_menuHtml, map[string]*bintree{}},
		"edit_page.html": &bintree{staticEdit_pageHtml, map[string]*bintree{}},
		"edit_signature.html": &bintree{staticEdit_signatureHtml, map[string]*bintree{}},
		"edit_state_parameters.html": &bintree{staticEdit_state_parametersHtml, map[string]*bintree{}},
		"edit_table.html": &bintree{staticEdit_tableHtml, map[string]*bintree{}},
		"edit_wallet.html": &bintree{staticEdit_walletHtml, map[string]*bintree{}},
		"export_tpl.html": &bintree{staticExport_tplHtml, map[string]*bintree{}},
		"fonts": &bintree{nil, map[string]*bintree{
			"FontAwesome.otf": &bintree{staticFontsFontawesomeOtf, map[string]*bintree{}},
			"PFSquareSansPro-Bold.eot": &bintree{staticFontsPfsquaresansproBoldEot, map[string]*bintree{}},
			"PFSquareSansPro-Bold.svg": &bintree{staticFontsPfsquaresansproBoldSvg, map[string]*bintree{}},
			"PFSquareSansPro-Bold.ttf": &bintree{staticFontsPfsquaresansproBoldTtf, map[string]*bintree{}},
			"PFSquareSansPro-Bold.woff": &bintree{staticFontsPfsquaresansproBoldWoff, map[string]*bintree{}},
			"PFSquareSansPro-Bold.woff2": &bintree{staticFontsPfsquaresansproBoldWoff2, map[string]*bintree{}},
			"PFSquareSansPro-Light.eot": &bintree{staticFontsPfsquaresansproLightEot, map[string]*bintree{}},
			"PFSquareSansPro-Light.svg": &bintree{staticFontsPfsquaresansproLightSvg, map[string]*bintree{}},
			"PFSquareSansPro-Light.ttf": &bintree{staticFontsPfsquaresansproLightTtf, map[string]*bintree{}},
			"PFSquareSansPro-Light.woff": &bintree{staticFontsPfsquaresansproLightWoff, map[string]*bintree{}},
			"PFSquareSansPro-Light.woff2": &bintree{staticFontsPfsquaresansproLightWoff2, map[string]*bintree{}},
			"PFSquareSansPro-Medium.eot": &bintree{staticFontsPfsquaresansproMediumEot, map[string]*bintree{}},
			"PFSquareSansPro-Medium.svg": &bintree{staticFontsPfsquaresansproMediumSvg, map[string]*bintree{}},
			"PFSquareSansPro-Medium.ttf": &bintree{staticFontsPfsquaresansproMediumTtf, map[string]*bintree{}},
			"PFSquareSansPro-Medium.woff": &bintree{staticFontsPfsquaresansproMediumWoff, map[string]*bintree{}},
			"PFSquareSansPro-Medium.woff2": &bintree{staticFontsPfsquaresansproMediumWoff2, map[string]*bintree{}},
			"PFSquareSansPro-Regular.eot": &bintree{staticFontsPfsquaresansproRegularEot, map[string]*bintree{}},
			"PFSquareSansPro-Regular.svg": &bintree{staticFontsPfsquaresansproRegularSvg, map[string]*bintree{}},
			"PFSquareSansPro-Regular.ttf": &bintree{staticFontsPfsquaresansproRegularTtf, map[string]*bintree{}},
			"PFSquareSansPro-Regular.woff": &bintree{staticFontsPfsquaresansproRegularWoff, map[string]*bintree{}},
			"PFSquareSansPro-Regular.woff2": &bintree{staticFontsPfsquaresansproRegularWoff2, map[string]*bintree{}},
			"Simple-Line-Icons.eot": &bintree{staticFontsSimpleLineIconsEot, map[string]*bintree{}},
			"Simple-Line-Icons.svg": &bintree{staticFontsSimpleLineIconsSvg, map[string]*bintree{}},
			"Simple-Line-Icons.ttf": &bintree{staticFontsSimpleLineIconsTtf, map[string]*bintree{}},
			"Simple-Line-Icons.woff": &bintree{staticFontsSimpleLineIconsWoff, map[string]*bintree{}},
			"Simple-Line-Icons.woff2": &bintree{staticFontsSimpleLineIconsWoff2, map[string]*bintree{}},
			"fontawesome-webfont.eot": &bintree{staticFontsFontawesomeWebfontEot, map[string]*bintree{}},
			"fontawesome-webfont.svg": &bintree{staticFontsFontawesomeWebfontSvg, map[string]*bintree{}},
			"fontawesome-webfont.ttf": &bintree{staticFontsFontawesomeWebfontTtf, map[string]*bintree{}},
			"fontawesome-webfont.woff": &bintree{staticFontsFontawesomeWebfontWoff, map[string]*bintree{}},
			"fontawesome-webfont.woff2": &bintree{staticFontsFontawesomeWebfontWoff2, map[string]*bintree{}},
			"glyphicons-filetypes-regular.eot": &bintree{staticFontsGlyphiconsFiletypesRegularEot, map[string]*bintree{}},
			"glyphicons-filetypes-regular.svg": &bintree{staticFontsGlyphiconsFiletypesRegularSvg, map[string]*bintree{}},
			"glyphicons-filetypes-regular.ttf": &bintree{staticFontsGlyphiconsFiletypesRegularTtf, map[string]*bintree{}},
			"glyphicons-filetypes-regular.woff": &bintree{staticFontsGlyphiconsFiletypesRegularWoff, map[string]*bintree{}},
			"glyphicons-filetypes-regular.woff2": &bintree{staticFontsGlyphiconsFiletypesRegularWoff2, map[string]*bintree{}},
			"glyphicons-halflings-regular.eot": &bintree{staticFontsGlyphiconsHalflingsRegularEot, map[string]*bintree{}},
			"glyphicons-halflings-regular.svg": &bintree{staticFontsGlyphiconsHalflingsRegularSvg, map[string]*bintree{}},
			"glyphicons-halflings-regular.ttf": &bintree{staticFontsGlyphiconsHalflingsRegularTtf, map[string]*bintree{}},
			"glyphicons-halflings-regular.woff": &bintree{staticFontsGlyphiconsHalflingsRegularWoff, map[string]*bintree{}},
			"glyphicons-halflings-regular.woff2": &bintree{staticFontsGlyphiconsHalflingsRegularWoff2, map[string]*bintree{}},
			"glyphicons-regular.eot": &bintree{staticFontsGlyphiconsRegularEot, map[string]*bintree{}},
			"glyphicons-regular.svg": &bintree{staticFontsGlyphiconsRegularSvg, map[string]*bintree{}},
			"glyphicons-regular.ttf": &bintree{staticFontsGlyphiconsRegularTtf, map[string]*bintree{}},
			"glyphicons-regular.woff": &bintree{staticFontsGlyphiconsRegularWoff, map[string]*bintree{}},
			"glyphicons-regular.woff2": &bintree{staticFontsGlyphiconsRegularWoff2, map[string]*bintree{}},
			"glyphicons-social-regular.eot": &bintree{staticFontsGlyphiconsSocialRegularEot, map[string]*bintree{}},
			"glyphicons-social-regular.svg": &bintree{staticFontsGlyphiconsSocialRegularSvg, map[string]*bintree{}},
			"glyphicons-social-regular.ttf": &bintree{staticFontsGlyphiconsSocialRegularTtf, map[string]*bintree{}},
			"glyphicons-social-regular.woff": &bintree{staticFontsGlyphiconsSocialRegularWoff, map[string]*bintree{}},
			"glyphicons-social-regular.woff2": &bintree{staticFontsGlyphiconsSocialRegularWoff2, map[string]*bintree{}},
		}},
		"forging.html": &bintree{staticForgingHtml, map[string]*bintree{}},
		"gen_citizen.html": &bintree{staticGen_citizenHtml, map[string]*bintree{}},
		"gen_keys.html": &bintree{staticGen_keysHtml, map[string]*bintree{}},
		"generator": &bintree{nil, map[string]*bintree{
			"ckeditor": &bintree{nil, map[string]*bintree{
				"adapters": &bintree{nil, map[string]*bintree{
					"jquery.js": &bintree{staticGeneratorCkeditorAdaptersJqueryJs, map[string]*bintree{}},
				}},
				"build-config.js": &bintree{staticGeneratorCkeditorBuildConfigJs, map[string]*bintree{}},
				"ckeditor.js": &bintree{staticGeneratorCkeditorCkeditorJs, map[string]*bintree{}},
				"config.js": &bintree{staticGeneratorCkeditorConfigJs, map[string]*bintree{}},
				"content.css": &bintree{staticGeneratorCkeditorContentCss, map[string]*bintree{}},
				"contents.css": &bintree{staticGeneratorCkeditorContentsCss, map[string]*bintree{}},
				"core": &bintree{nil, map[string]*bintree{
					"_bootstrap.js": &bintree{staticGeneratorCkeditorCore_bootstrapJs, map[string]*bintree{}},
					"ckeditor.js": &bintree{staticGeneratorCkeditorCoreCkeditorJs, map[string]*bintree{}},
					"ckeditor_base.js": &bintree{staticGeneratorCkeditorCoreCkeditor_baseJs, map[string]*bintree{}},
					"ckeditor_basic.js": &bintree{staticGeneratorCkeditorCoreCkeditor_basicJs, map[string]*bintree{}},
					"command.js": &bintree{staticGeneratorCkeditorCoreCommandJs, map[string]*bintree{}},
					"commanddefinition.js": &bintree{staticGeneratorCkeditorCoreCommanddefinitionJs, map[string]*bintree{}},
					"config.js": &bintree{staticGeneratorCkeditorCoreConfigJs, map[string]*bintree{}},
					"creators": &bintree{nil, map[string]*bintree{
						"inline.js": &bintree{staticGeneratorCkeditorCoreCreatorsInlineJs, map[string]*bintree{}},
						"themedui.js": &bintree{staticGeneratorCkeditorCoreCreatorsThemeduiJs, map[string]*bintree{}},
					}},
					"dataprocessor.js": &bintree{staticGeneratorCkeditorCoreDataprocessorJs, map[string]*bintree{}},
					"dom": &bintree{nil, map[string]*bintree{
						"comment.js": &bintree{staticGeneratorCkeditorCoreDomCommentJs, map[string]*bintree{}},
						"document.js": &bintree{staticGeneratorCkeditorCoreDomDocumentJs, map[string]*bintree{}},
						"documentfragment.js": &bintree{staticGeneratorCkeditorCoreDomDocumentfragmentJs, map[string]*bintree{}},
						"domobject.js": &bintree{staticGeneratorCkeditorCoreDomDomobjectJs, map[string]*bintree{}},
						"element.js": &bintree{staticGeneratorCkeditorCoreDomElementJs, map[string]*bintree{}},
						"elementpath.js": &bintree{staticGeneratorCkeditorCoreDomElementpathJs, map[string]*bintree{}},
						"event.js": &bintree{staticGeneratorCkeditorCoreDomEventJs, map[string]*bintree{}},
						"iterator.js": &bintree{staticGeneratorCkeditorCoreDomIteratorJs, map[string]*bintree{}},
						"node.js": &bintree{staticGeneratorCkeditorCoreDomNodeJs, map[string]*bintree{}},
						"nodelist.js": &bintree{staticGeneratorCkeditorCoreDomNodelistJs, map[string]*bintree{}},
						"range.js": &bintree{staticGeneratorCkeditorCoreDomRangeJs, map[string]*bintree{}},
						"rangelist.js": &bintree{staticGeneratorCkeditorCoreDomRangelistJs, map[string]*bintree{}},
						"text.js": &bintree{staticGeneratorCkeditorCoreDomTextJs, map[string]*bintree{}},
						"walker.js": &bintree{staticGeneratorCkeditorCoreDomWalkerJs, map[string]*bintree{}},
						"window.js": &bintree{staticGeneratorCkeditorCoreDomWindowJs, map[string]*bintree{}},
					}},
					"dom.js": &bintree{staticGeneratorCkeditorCoreDomJs, map[string]*bintree{}},
					"dtd.js": &bintree{staticGeneratorCkeditorCoreDtdJs, map[string]*bintree{}},
					"editable.js": &bintree{staticGeneratorCkeditorCoreEditableJs, map[string]*bintree{}},
					"editor.js": &bintree{staticGeneratorCkeditorCoreEditorJs, map[string]*bintree{}},
					"editor_basic.js": &bintree{staticGeneratorCkeditorCoreEditor_basicJs, map[string]*bintree{}},
					"env.js": &bintree{staticGeneratorCkeditorCoreEnvJs, map[string]*bintree{}},
					"event.js": &bintree{staticGeneratorCkeditorCoreEventJs, map[string]*bintree{}},
					"eventInfo.js": &bintree{staticGeneratorCkeditorCoreEventinfoJs, map[string]*bintree{}},
					"filter.js": &bintree{staticGeneratorCkeditorCoreFilterJs, map[string]*bintree{}},
					"focusmanager.js": &bintree{staticGeneratorCkeditorCoreFocusmanagerJs, map[string]*bintree{}},
					"htmldataprocessor.js": &bintree{staticGeneratorCkeditorCoreHtmldataprocessorJs, map[string]*bintree{}},
					"htmlparser": &bintree{nil, map[string]*bintree{
						"basicwriter.js": &bintree{staticGeneratorCkeditorCoreHtmlparserBasicwriterJs, map[string]*bintree{}},
						"cdata.js": &bintree{staticGeneratorCkeditorCoreHtmlparserCdataJs, map[string]*bintree{}},
						"comment.js": &bintree{staticGeneratorCkeditorCoreHtmlparserCommentJs, map[string]*bintree{}},
						"element.js": &bintree{staticGeneratorCkeditorCoreHtmlparserElementJs, map[string]*bintree{}},
						"filter.js": &bintree{staticGeneratorCkeditorCoreHtmlparserFilterJs, map[string]*bintree{}},
						"fragment.js": &bintree{staticGeneratorCkeditorCoreHtmlparserFragmentJs, map[string]*bintree{}},
						"node.js": &bintree{staticGeneratorCkeditorCoreHtmlparserNodeJs, map[string]*bintree{}},
						"text.js": &bintree{staticGeneratorCkeditorCoreHtmlparserTextJs, map[string]*bintree{}},
					}},
					"htmlparser.js": &bintree{staticGeneratorCkeditorCoreHtmlparserJs, map[string]*bintree{}},
					"keystrokehandler.js": &bintree{staticGeneratorCkeditorCoreKeystrokehandlerJs, map[string]*bintree{}},
					"lang.js": &bintree{staticGeneratorCkeditorCoreLangJs, map[string]*bintree{}},
					"loader.js": &bintree{staticGeneratorCkeditorCoreLoaderJs, map[string]*bintree{}},
					"log.js": &bintree{staticGeneratorCkeditorCoreLogJs, map[string]*bintree{}},
					"plugindefinition.js": &bintree{staticGeneratorCkeditorCorePlugindefinitionJs, map[string]*bintree{}},
					"plugins.js": &bintree{staticGeneratorCkeditorCorePluginsJs, map[string]*bintree{}},
					"resourcemanager.js": &bintree{staticGeneratorCkeditorCoreResourcemanagerJs, map[string]*bintree{}},
					"scriptloader.js": &bintree{staticGeneratorCkeditorCoreScriptloaderJs, map[string]*bintree{}},
					"selection.js": &bintree{staticGeneratorCkeditorCoreSelectionJs, map[string]*bintree{}},
					"skin.js": &bintree{staticGeneratorCkeditorCoreSkinJs, map[string]*bintree{}},
					"style.js": &bintree{staticGeneratorCkeditorCoreStyleJs, map[string]*bintree{}},
					"template.js": &bintree{staticGeneratorCkeditorCoreTemplateJs, map[string]*bintree{}},
					"tools.js": &bintree{staticGeneratorCkeditorCoreToolsJs, map[string]*bintree{}},
					"ui.js": &bintree{staticGeneratorCkeditorCoreUiJs, map[string]*bintree{}},
				}},
				"lang": &bintree{nil, map[string]*bintree{
					"_translationstatus.txt": &bintree{staticGeneratorCkeditorLang_translationstatusTxt, map[string]*bintree{}},
					"af.js": &bintree{staticGeneratorCkeditorLangAfJs, map[string]*bintree{}},
					"ar.js": &bintree{staticGeneratorCkeditorLangArJs, map[string]*bintree{}},
					"az.js": &bintree{staticGeneratorCkeditorLangAzJs, map[string]*bintree{}},
					"bg.js": &bintree{staticGeneratorCkeditorLangBgJs, map[string]*bintree{}},
					"bn.js": &bintree{staticGeneratorCkeditorLangBnJs, map[string]*bintree{}},
					"bs.js": &bintree{staticGeneratorCkeditorLangBsJs, map[string]*bintree{}},
					"ca.js": &bintree{staticGeneratorCkeditorLangCaJs, map[string]*bintree{}},
					"cs.js": &bintree{staticGeneratorCkeditorLangCsJs, map[string]*bintree{}},
					"cy.js": &bintree{staticGeneratorCkeditorLangCyJs, map[string]*bintree{}},
					"da.js": &bintree{staticGeneratorCkeditorLangDaJs, map[string]*bintree{}},
					"de-ch.js": &bintree{staticGeneratorCkeditorLangDeChJs, map[string]*bintree{}},
					"de.js": &bintree{staticGeneratorCkeditorLangDeJs, map[string]*bintree{}},
					"el.js": &bintree{staticGeneratorCkeditorLangElJs, map[string]*bintree{}},
					"en-au.js": &bintree{staticGeneratorCkeditorLangEnAuJs, map[string]*bintree{}},
					"en-ca.js": &bintree{staticGeneratorCkeditorLangEnCaJs, map[string]*bintree{}},
					"en-gb.js": &bintree{staticGeneratorCkeditorLangEnGbJs, map[string]*bintree{}},
					"en.js": &bintree{staticGeneratorCkeditorLangEnJs, map[string]*bintree{}},
					"eo.js": &bintree{staticGeneratorCkeditorLangEoJs, map[string]*bintree{}},
					"es.js": &bintree{staticGeneratorCkeditorLangEsJs, map[string]*bintree{}},
					"et.js": &bintree{staticGeneratorCkeditorLangEtJs, map[string]*bintree{}},
					"eu.js": &bintree{staticGeneratorCkeditorLangEuJs, map[string]*bintree{}},
					"fa.js": &bintree{staticGeneratorCkeditorLangFaJs, map[string]*bintree{}},
					"fi.js": &bintree{staticGeneratorCkeditorLangFiJs, map[string]*bintree{}},
					"fo.js": &bintree{staticGeneratorCkeditorLangFoJs, map[string]*bintree{}},
					"fr-ca.js": &bintree{staticGeneratorCkeditorLangFrCaJs, map[string]*bintree{}},
					"fr.js": &bintree{staticGeneratorCkeditorLangFrJs, map[string]*bintree{}},
					"gl.js": &bintree{staticGeneratorCkeditorLangGlJs, map[string]*bintree{}},
					"gu.js": &bintree{staticGeneratorCkeditorLangGuJs, map[string]*bintree{}},
					"he.js": &bintree{staticGeneratorCkeditorLangHeJs, map[string]*bintree{}},
					"hi.js": &bintree{staticGeneratorCkeditorLangHiJs, map[string]*bintree{}},
					"hr.js": &bintree{staticGeneratorCkeditorLangHrJs, map[string]*bintree{}},
					"hu.js": &bintree{staticGeneratorCkeditorLangHuJs, map[string]*bintree{}},
					"id.js": &bintree{staticGeneratorCkeditorLangIdJs, map[string]*bintree{}},
					"is.js": &bintree{staticGeneratorCkeditorLangIsJs, map[string]*bintree{}},
					"it.js": &bintree{staticGeneratorCkeditorLangItJs, map[string]*bintree{}},
					"ja.js": &bintree{staticGeneratorCkeditorLangJaJs, map[string]*bintree{}},
					"ka.js": &bintree{staticGeneratorCkeditorLangKaJs, map[string]*bintree{}},
					"km.js": &bintree{staticGeneratorCkeditorLangKmJs, map[string]*bintree{}},
					"ko.js": &bintree{staticGeneratorCkeditorLangKoJs, map[string]*bintree{}},
					"ku.js": &bintree{staticGeneratorCkeditorLangKuJs, map[string]*bintree{}},
					"lt.js": &bintree{staticGeneratorCkeditorLangLtJs, map[string]*bintree{}},
					"lv.js": &bintree{staticGeneratorCkeditorLangLvJs, map[string]*bintree{}},
					"mk.js": &bintree{staticGeneratorCkeditorLangMkJs, map[string]*bintree{}},
					"mn.js": &bintree{staticGeneratorCkeditorLangMnJs, map[string]*bintree{}},
					"ms.js": &bintree{staticGeneratorCkeditorLangMsJs, map[string]*bintree{}},
					"nb.js": &bintree{staticGeneratorCkeditorLangNbJs, map[string]*bintree{}},
					"nl.js": &bintree{staticGeneratorCkeditorLangNlJs, map[string]*bintree{}},
					"no.js": &bintree{staticGeneratorCkeditorLangNoJs, map[string]*bintree{}},
					"oc.js": &bintree{staticGeneratorCkeditorLangOcJs, map[string]*bintree{}},
					"pl.js": &bintree{staticGeneratorCkeditorLangPlJs, map[string]*bintree{}},
					"plugins": &bintree{nil, map[string]*bintree{
						"a11yhelp": &bintree{nil, map[string]*bintree{
							"dialogos": &bintree{nil, map[string]*bintree{
								"a11yhelp.js": &bintree{staticGeneratorCkeditorLangPluginsA11yhelpDialogosA11yhelpJs, map[string]*bintree{}},
								"lang": &bintree{nil, map[string]*bintree{
									"_translationstatus.txt": &bintree{staticGeneratorCkeditorLangPluginsA11yhelpDialogosLang_translationstatusTxt, map[string]*bintree{}},
								}},
							}},
						}},
					}},
					"pt-br.js": &bintree{staticGeneratorCkeditorLangPtBrJs, map[string]*bintree{}},
					"pt.js": &bintree{staticGeneratorCkeditorLangPtJs, map[string]*bintree{}},
					"ro.js": &bintree{staticGeneratorCkeditorLangRoJs, map[string]*bintree{}},
					"ru.js": &bintree{staticGeneratorCkeditorLangRuJs, map[string]*bintree{}},
					"si.js": &bintree{staticGeneratorCkeditorLangSiJs, map[string]*bintree{}},
					"sk.js": &bintree{staticGeneratorCkeditorLangSkJs, map[string]*bintree{}},
					"sl.js": &bintree{staticGeneratorCkeditorLangSlJs, map[string]*bintree{}},
					"sq.js": &bintree{staticGeneratorCkeditorLangSqJs, map[string]*bintree{}},
					"sr-latn.js": &bintree{staticGeneratorCkeditorLangSrLatnJs, map[string]*bintree{}},
					"sr.js": &bintree{staticGeneratorCkeditorLangSrJs, map[string]*bintree{}},
					"sr.latn.js": &bintree{staticGeneratorCkeditorLangSrLatnJs2, map[string]*bintree{}},
					"sv.js": &bintree{staticGeneratorCkeditorLangSvJs, map[string]*bintree{}},
					"th.js": &bintree{staticGeneratorCkeditorLangThJs, map[string]*bintree{}},
					"tr.js": &bintree{staticGeneratorCkeditorLangTrJs, map[string]*bintree{}},
					"tt.js": &bintree{staticGeneratorCkeditorLangTtJs, map[string]*bintree{}},
					"ug.js": &bintree{staticGeneratorCkeditorLangUgJs, map[string]*bintree{}},
					"uk.js": &bintree{staticGeneratorCkeditorLangUkJs, map[string]*bintree{}},
					"vi.js": &bintree{staticGeneratorCkeditorLangViJs, map[string]*bintree{}},
					"zh-cn.js": &bintree{staticGeneratorCkeditorLangZhCnJs, map[string]*bintree{}},
					"zh.js": &bintree{staticGeneratorCkeditorLangZhJs, map[string]*bintree{}},
					"zn-ch.js": &bintree{staticGeneratorCkeditorLangZnChJs, map[string]*bintree{}},
				}},
				"plugins": &bintree{nil, map[string]*bintree{
					"a11yhelp": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"a11yhelp.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsA11yhelpJs, map[string]*bintree{}},
							"lang": &bintree{nil, map[string]*bintree{
								"_translationstatus.txt": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLang_translationstatusTxt, map[string]*bintree{}},
								"af.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangAfJs, map[string]*bintree{}},
								"ar.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangArJs, map[string]*bintree{}},
								"az.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangAzJs, map[string]*bintree{}},
								"bg.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangBgJs, map[string]*bintree{}},
								"ca.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangCaJs, map[string]*bintree{}},
								"cs.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangCsJs, map[string]*bintree{}},
								"cy.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangCyJs, map[string]*bintree{}},
								"da.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangDaJs, map[string]*bintree{}},
								"de-ch.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeChJs, map[string]*bintree{}},
								"de.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangDeJs, map[string]*bintree{}},
								"el.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangElJs, map[string]*bintree{}},
								"en-gb.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnGbJs, map[string]*bintree{}},
								"en.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangEnJs, map[string]*bintree{}},
								"eo.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangEoJs, map[string]*bintree{}},
								"es.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangEsJs, map[string]*bintree{}},
								"et.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangEtJs, map[string]*bintree{}},
								"eu.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangEuJs, map[string]*bintree{}},
								"fa.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangFaJs, map[string]*bintree{}},
								"fi.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangFiJs, map[string]*bintree{}},
								"fo.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangFoJs, map[string]*bintree{}},
								"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrCaJs, map[string]*bintree{}},
								"fr.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangFrJs, map[string]*bintree{}},
								"gl.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangGlJs, map[string]*bintree{}},
								"gu.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangGuJs, map[string]*bintree{}},
								"he.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangHeJs, map[string]*bintree{}},
								"hi.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangHiJs, map[string]*bintree{}},
								"hr.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangHrJs, map[string]*bintree{}},
								"hu.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangHuJs, map[string]*bintree{}},
								"id.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangIdJs, map[string]*bintree{}},
								"it.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangItJs, map[string]*bintree{}},
								"ja.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangJaJs, map[string]*bintree{}},
								"km.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangKmJs, map[string]*bintree{}},
								"ko.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangKoJs, map[string]*bintree{}},
								"ku.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangKuJs, map[string]*bintree{}},
								"lt.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangLtJs, map[string]*bintree{}},
								"lv.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangLvJs, map[string]*bintree{}},
								"mk.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangMkJs, map[string]*bintree{}},
								"mn.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangMnJs, map[string]*bintree{}},
								"nb.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangNbJs, map[string]*bintree{}},
								"nl.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangNlJs, map[string]*bintree{}},
								"no.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangNoJs, map[string]*bintree{}},
								"oc.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangOcJs, map[string]*bintree{}},
								"pl.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangPlJs, map[string]*bintree{}},
								"pt-br.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtBrJs, map[string]*bintree{}},
								"pt.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangPtJs, map[string]*bintree{}},
								"ro.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangRoJs, map[string]*bintree{}},
								"ru.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangRuJs, map[string]*bintree{}},
								"si.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSiJs, map[string]*bintree{}},
								"sk.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSkJs, map[string]*bintree{}},
								"sl.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSlJs, map[string]*bintree{}},
								"sq.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSqJs, map[string]*bintree{}},
								"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrLatnJs, map[string]*bintree{}},
								"sr.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSrJs, map[string]*bintree{}},
								"sv.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangSvJs, map[string]*bintree{}},
								"th.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangThJs, map[string]*bintree{}},
								"tr.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangTrJs, map[string]*bintree{}},
								"tt.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangTtJs, map[string]*bintree{}},
								"ug.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangUgJs, map[string]*bintree{}},
								"uk.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangUkJs, map[string]*bintree{}},
								"vi.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangViJs, map[string]*bintree{}},
								"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhCnJs, map[string]*bintree{}},
								"zh.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpDialogsLangZhJs, map[string]*bintree{}},
							}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsA11yhelpPluginJs, map[string]*bintree{}},
					}},
					"about": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"about.js": &bintree{staticGeneratorCkeditorPluginsAboutDialogsAboutJs, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"logo_ckeditor.png": &bintree{staticGeneratorCkeditorPluginsAboutDialogsHidpiLogo_ckeditorPng, map[string]*bintree{}},
							}},
							"logo_ckeditor.png": &bintree{staticGeneratorCkeditorPluginsAboutDialogsLogo_ckeditorPng, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"about.png": &bintree{staticGeneratorCkeditorPluginsAboutIconsAboutPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"about.png": &bintree{staticGeneratorCkeditorPluginsAboutIconsHidpiAboutPng, map[string]*bintree{}},
							}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsAboutLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsAboutLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsAboutLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsAboutLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsAboutLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsAboutLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsAboutLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsAboutLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsAboutLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsAboutLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsAboutLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsAboutLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsAboutLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsAboutLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsAboutLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsAboutLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsAboutLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsAboutLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsAboutLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsAboutLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsAboutLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsAboutLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsAboutLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsAboutLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsAboutLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsAboutLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsAboutLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsAboutLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsAboutLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsAboutLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsAboutLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsAboutLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsAboutLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsAboutLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsAboutLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsAboutLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsAboutLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsAboutLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsAboutLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsAboutLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsAboutLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsAboutLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsAboutLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsAboutLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsAboutLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsAboutLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsAboutLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsAboutLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsAboutLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsAboutLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsAboutLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsAboutLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsAboutLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsAboutLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsAboutLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsAboutLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsAboutPluginJs, map[string]*bintree{}},
					}},
					"basicstyles": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"bold.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsBoldPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"bold.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsHidpiBoldPng, map[string]*bintree{}},
								"italic.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsHidpiItalicPng, map[string]*bintree{}},
								"strike.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsHidpiStrikePng, map[string]*bintree{}},
								"subscript.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSubscriptPng, map[string]*bintree{}},
								"superscript.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsHidpiSuperscriptPng, map[string]*bintree{}},
								"underline.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsHidpiUnderlinePng, map[string]*bintree{}},
							}},
							"italic.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsItalicPng, map[string]*bintree{}},
							"strike.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsStrikePng, map[string]*bintree{}},
							"subscript.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsSubscriptPng, map[string]*bintree{}},
							"superscript.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsSuperscriptPng, map[string]*bintree{}},
							"underline.png": &bintree{staticGeneratorCkeditorPluginsBasicstylesIconsUnderlinePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsBasicstylesPluginJs, map[string]*bintree{}},
					}},
					"bidi": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"bidiltr.png": &bintree{staticGeneratorCkeditorPluginsBidiIconsBidiltrPng, map[string]*bintree{}},
							"bidirtl.png": &bintree{staticGeneratorCkeditorPluginsBidiIconsBidirtlPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"bidiltr.png": &bintree{staticGeneratorCkeditorPluginsBidiIconsHidpiBidiltrPng, map[string]*bintree{}},
								"bidirtl.png": &bintree{staticGeneratorCkeditorPluginsBidiIconsHidpiBidirtlPng, map[string]*bintree{}},
							}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsBidiLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsBidiLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsBidiLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsBidiLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsBidiLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsBidiLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsBidiLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsBidiLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsBidiLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsBidiLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsBidiLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsBidiLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsBidiLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsBidiLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsBidiLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsBidiLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsBidiLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsBidiLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsBidiLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsBidiLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsBidiLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsBidiLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsBidiLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsBidiLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsBidiLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsBidiLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsBidiLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsBidiLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsBidiLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsBidiLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsBidiLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsBidiLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsBidiLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsBidiLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsBidiLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsBidiLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsBidiLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsBidiLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsBidiLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsBidiLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsBidiLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsBidiLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsBidiLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsBidiLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsBidiLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsBidiLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsBidiLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsBidiLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsBidiLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsBidiLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsBidiLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsBidiLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsBidiLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsBidiLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsBidiLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsBidiLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsBidiPluginJs, map[string]*bintree{}},
					}},
					"blockquote": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"blockquote.png": &bintree{staticGeneratorCkeditorPluginsBlockquoteIconsBlockquotePng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"blockquote.png": &bintree{staticGeneratorCkeditorPluginsBlockquoteIconsHidpiBlockquotePng, map[string]*bintree{}},
							}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsBlockquoteLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsBlockquotePluginJs, map[string]*bintree{}},
					}},
					"button": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsButtonLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsButtonLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsButtonLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsButtonLangBgJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsButtonLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsButtonLangCsJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsButtonLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsButtonLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsButtonLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsButtonLangElJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsButtonLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsButtonLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsButtonLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsButtonLangEsJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsButtonLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsButtonLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsButtonLangFiJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsButtonLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsButtonLangGlJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsButtonLangHeJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsButtonLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsButtonLangIdJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsButtonLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsButtonLangJaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsButtonLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsButtonLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsButtonLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsButtonLangLtJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsButtonLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsButtonLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsButtonLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsButtonLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsButtonLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsButtonLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsButtonLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsButtonLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsButtonLangRuJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsButtonLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsButtonLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsButtonLangSqJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsButtonLangSvJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsButtonLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsButtonLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsButtonLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsButtonLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsButtonLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsButtonLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsButtonLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsButtonPluginJs, map[string]*bintree{}},
					}},
					"ckawesome": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"ckawesome.css": &bintree{staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeCss, map[string]*bintree{}},
							"ckawesome.js": &bintree{staticGeneratorCkeditorPluginsCkawesomeDialogsCkawesomeJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"ckawesome.png": &bintree{staticGeneratorCkeditorPluginsCkawesomeIconsCkawesomePng, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsCkawesomePluginJs, map[string]*bintree{}},
						"resources": &bintree{nil, map[string]*bintree{
							"select2": &bintree{nil, map[string]*bintree{
								"select2.full.min.css": &bintree{staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinCss, map[string]*bintree{}},
								"select2.full.min.js": &bintree{staticGeneratorCkeditorPluginsCkawesomeResourcesSelect2Select2FullMinJs, map[string]*bintree{}},
							}},
						}},
					}},
					"clipboard": &bintree{nil, map[string]*bintree{
						"dev": &bintree{nil, map[string]*bintree{
							"clipboard.html": &bintree{staticGeneratorCkeditorPluginsClipboardDevClipboardHtml, map[string]*bintree{}},
							"console.js": &bintree{staticGeneratorCkeditorPluginsClipboardDevConsoleJs, map[string]*bintree{}},
							"dnd.html": &bintree{staticGeneratorCkeditorPluginsClipboardDevDndHtml, map[string]*bintree{}},
						}},
						"dialogs": &bintree{nil, map[string]*bintree{
							"paste.js": &bintree{staticGeneratorCkeditorPluginsClipboardDialogsPasteJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"copy-rtl.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsCopyRtlPng, map[string]*bintree{}},
							"copy.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsCopyPng, map[string]*bintree{}},
							"cut-rtl.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsCutRtlPng, map[string]*bintree{}},
							"cut.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsCutPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"copy-rtl.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyRtlPng, map[string]*bintree{}},
								"copy.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsHidpiCopyPng, map[string]*bintree{}},
								"cut-rtl.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsHidpiCutRtlPng, map[string]*bintree{}},
								"cut.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsHidpiCutPng, map[string]*bintree{}},
								"paste-rtl.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsHidpiPasteRtlPng, map[string]*bintree{}},
								"paste.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsHidpiPastePng, map[string]*bintree{}},
							}},
							"paste-rtl.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsPasteRtlPng, map[string]*bintree{}},
							"paste.png": &bintree{staticGeneratorCkeditorPluginsClipboardIconsPastePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsClipboardLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsClipboardPluginJs, map[string]*bintree{}},
					}},
					"colorbutton": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"bgcolor.png": &bintree{staticGeneratorCkeditorPluginsColorbuttonIconsBgcolorPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"bgcolor.png": &bintree{staticGeneratorCkeditorPluginsColorbuttonIconsHidpiBgcolorPng, map[string]*bintree{}},
								"textcolor.png": &bintree{staticGeneratorCkeditorPluginsColorbuttonIconsHidpiTextcolorPng, map[string]*bintree{}},
							}},
							"textcolor.png": &bintree{staticGeneratorCkeditorPluginsColorbuttonIconsTextcolorPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsColorbuttonPluginJs, map[string]*bintree{}},
					}},
					"colordialog": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"colordialog.css": &bintree{staticGeneratorCkeditorPluginsColordialogDialogsColordialogCss, map[string]*bintree{}},
							"colordialog.js": &bintree{staticGeneratorCkeditorPluginsColordialogDialogsColordialogJs, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsColordialogLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsColordialogPluginJs, map[string]*bintree{}},
					}},
					"contextmenu": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsContextmenuLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsContextmenuPluginJs, map[string]*bintree{}},
					}},
					"copyformatting": &bintree{nil, map[string]*bintree{
						"cursors": &bintree{nil, map[string]*bintree{
							"cursor-disabled.svg": &bintree{staticGeneratorCkeditorPluginsCopyformattingCursorsCursorDisabledSvg, map[string]*bintree{}},
							"cursor.svg": &bintree{staticGeneratorCkeditorPluginsCopyformattingCursorsCursorSvg, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"copyformatting.png": &bintree{staticGeneratorCkeditorPluginsCopyformattingIconsCopyformattingPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"copyformatting.png": &bintree{staticGeneratorCkeditorPluginsCopyformattingIconsHidpiCopyformattingPng, map[string]*bintree{}},
							}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"en.js": &bintree{staticGeneratorCkeditorPluginsCopyformattingLangEnJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsCopyformattingPluginJs, map[string]*bintree{}},
						"styles": &bintree{nil, map[string]*bintree{
							"copyformatting.css": &bintree{staticGeneratorCkeditorPluginsCopyformattingStylesCopyformattingCss, map[string]*bintree{}},
						}},
					}},
					"dialog": &bintree{nil, map[string]*bintree{
						"dialogDefinition.js": &bintree{staticGeneratorCkeditorPluginsDialogDialogdefinitionJs, map[string]*bintree{}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsDialogPluginJs, map[string]*bintree{}},
						"samples": &bintree{nil, map[string]*bintree{
							"assets": &bintree{nil, map[string]*bintree{
								"my_dialog.js": &bintree{staticGeneratorCkeditorPluginsDialogSamplesAssetsMy_dialogJs, map[string]*bintree{}},
							}},
							"dialog.html": &bintree{staticGeneratorCkeditorPluginsDialogSamplesDialogHtml, map[string]*bintree{}},
						}},
					}},
					"dialogadvtab": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsDialogadvtabPluginJs, map[string]*bintree{}},
					}},
					"dialogui": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsDialoguiPluginJs, map[string]*bintree{}},
					}},
					"div": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"div.js": &bintree{staticGeneratorCkeditorPluginsDivDialogsDivJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"creatediv.png": &bintree{staticGeneratorCkeditorPluginsDivIconsCreatedivPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"creatediv.png": &bintree{staticGeneratorCkeditorPluginsDivIconsHidpiCreatedivPng, map[string]*bintree{}},
							}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsDivLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsDivLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsDivLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsDivLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsDivLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsDivLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsDivLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsDivLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsDivLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsDivLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsDivLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsDivLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsDivLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsDivLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsDivLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsDivLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsDivLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsDivLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsDivLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsDivLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsDivLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsDivLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsDivLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsDivLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsDivLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsDivLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsDivLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsDivLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsDivLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsDivLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsDivLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsDivLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsDivLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsDivLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsDivLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsDivLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsDivLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsDivLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsDivLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsDivLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsDivLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsDivLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsDivLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsDivLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsDivLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsDivLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsDivLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsDivLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsDivLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsDivLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsDivLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsDivLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsDivLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsDivLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsDivLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsDivLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsDivLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsDivLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsDivLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsDivLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsDivLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsDivLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsDivLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsDivLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsDivLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsDivLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsDivLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsDivLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsDivLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsDivPluginJs, map[string]*bintree{}},
					}},
					"elementspath": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangHuJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsElementspathLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsElementspathPluginJs, map[string]*bintree{}},
					}},
					"enterkey": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsEnterkeyPluginJs, map[string]*bintree{}},
						"samples": &bintree{nil, map[string]*bintree{
							"enterkey.html": &bintree{staticGeneratorCkeditorPluginsEnterkeySamplesEnterkeyHtml, map[string]*bintree{}},
						}},
					}},
					"entities": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsEntitiesPluginJs, map[string]*bintree{}},
					}},
					"fakeobjects": &bintree{nil, map[string]*bintree{
						"images": &bintree{nil, map[string]*bintree{
							"spacer.gif": &bintree{staticGeneratorCkeditorPluginsFakeobjectsImagesSpacerGif, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFakeobjectsPluginJs, map[string]*bintree{}},
					}},
					"filebrowser": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFilebrowserPluginJs, map[string]*bintree{}},
					}},
					"find": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"find.js": &bintree{staticGeneratorCkeditorPluginsFindDialogsFindJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"find-rtl.png": &bintree{staticGeneratorCkeditorPluginsFindIconsFindRtlPng, map[string]*bintree{}},
							"find.png": &bintree{staticGeneratorCkeditorPluginsFindIconsFindPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"find-rtl.png": &bintree{staticGeneratorCkeditorPluginsFindIconsHidpiFindRtlPng, map[string]*bintree{}},
								"find.png": &bintree{staticGeneratorCkeditorPluginsFindIconsHidpiFindPng, map[string]*bintree{}},
								"replace.png": &bintree{staticGeneratorCkeditorPluginsFindIconsHidpiReplacePng, map[string]*bintree{}},
							}},
							"replace.png": &bintree{staticGeneratorCkeditorPluginsFindIconsReplacePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsFindLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsFindLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsFindLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsFindLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsFindLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsFindLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsFindLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsFindLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsFindLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsFindLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsFindLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsFindLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsFindLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsFindLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsFindLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsFindLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsFindLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsFindLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsFindLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsFindLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsFindLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsFindLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsFindLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsFindLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsFindLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsFindLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsFindLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsFindLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsFindLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsFindLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsFindLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsFindLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsFindLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsFindLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsFindLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsFindLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsFindLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsFindLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsFindLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsFindLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsFindLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsFindLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsFindLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsFindLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsFindLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsFindLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsFindLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsFindLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsFindLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsFindLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsFindLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsFindLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsFindLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsFindLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsFindLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsFindLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsFindLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsFindLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsFindLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsFindLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsFindLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsFindLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsFindLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsFindLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsFindLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsFindLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsFindLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsFindLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsFindLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFindPluginJs, map[string]*bintree{}},
					}},
					"flash": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"flash.js": &bintree{staticGeneratorCkeditorPluginsFlashDialogsFlashJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"flash.png": &bintree{staticGeneratorCkeditorPluginsFlashIconsFlashPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"flash.png": &bintree{staticGeneratorCkeditorPluginsFlashIconsHidpiFlashPng, map[string]*bintree{}},
							}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"placeholder.png": &bintree{staticGeneratorCkeditorPluginsFlashImagesPlaceholderPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsFlashLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsFlashLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsFlashLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsFlashLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsFlashLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsFlashLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsFlashLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsFlashLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsFlashLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsFlashLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsFlashLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsFlashLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsFlashLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsFlashLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsFlashLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsFlashLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsFlashLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsFlashLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsFlashLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsFlashLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsFlashLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsFlashLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsFlashLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsFlashLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsFlashLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsFlashLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsFlashLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsFlashLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsFlashLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsFlashLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsFlashLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsFlashLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsFlashLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsFlashLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsFlashLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsFlashLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsFlashLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsFlashLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsFlashLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsFlashLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsFlashLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsFlashLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsFlashLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsFlashLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsFlashLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsFlashLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsFlashLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsFlashLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsFlashLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsFlashLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsFlashLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsFlashLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsFlashLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsFlashLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsFlashLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsFlashLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFlashPluginJs, map[string]*bintree{}},
					}},
					"floatingspace": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFloatingspacePluginJs, map[string]*bintree{}},
					}},
					"floatpanel": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFloatpanelPluginJs, map[string]*bintree{}},
					}},
					"font": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsFontLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsFontLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsFontLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsFontLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsFontLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsFontLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsFontLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsFontLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsFontLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsFontLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsFontLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsFontLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsFontLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsFontLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsFontLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsFontLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsFontLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsFontLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsFontLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsFontLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsFontLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsFontLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsFontLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsFontLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsFontLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsFontLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsFontLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsFontLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsFontLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsFontLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsFontLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsFontLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsFontLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsFontLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsFontLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsFontLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsFontLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsFontLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsFontLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsFontLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsFontLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsFontLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsFontLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsFontLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsFontLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsFontLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsFontLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsFontLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsFontLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsFontLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsFontLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsFontLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsFontLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsFontLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsFontLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsFontLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsFontLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsFontLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsFontLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsFontLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsFontLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsFontLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsFontLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsFontLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsFontLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsFontLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsFontLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsFontLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsFontLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFontPluginJs, map[string]*bintree{}},
					}},
					"fontawesome": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"fontawesome.js": &bintree{staticGeneratorCkeditorPluginsFontawesomeDialogsFontawesomeJs, map[string]*bintree{}},
							"index.html": &bintree{staticGeneratorCkeditorPluginsFontawesomeDialogsIndexHtml, map[string]*bintree{}},
						}},
						"font-awesome": &bintree{nil, map[string]*bintree{
							"css": &bintree{nil, map[string]*bintree{
								"font-awesome.min.css": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssFontAwesomeMinCss, map[string]*bintree{}},
								"index.html": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeCssIndexHtml, map[string]*bintree{}},
							}},
							"fonts": &bintree{nil, map[string]*bintree{
								"FontAwesome.otf": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeOtf, map[string]*bintree{}},
								"fontawesome-webfont.eot": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontEot, map[string]*bintree{}},
								"fontawesome-webfont.svg": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontSvg, map[string]*bintree{}},
								"fontawesome-webfont.ttf": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontTtf, map[string]*bintree{}},
								"fontawesome-webfont.woff": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff, map[string]*bintree{}},
								"fontawesome-webfont.woff2": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsFontawesomeWebfontWoff2, map[string]*bintree{}},
								"index.html": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeFontsIndexHtml, map[string]*bintree{}},
							}},
							"index.html": &bintree{staticGeneratorCkeditorPluginsFontawesomeFontAwesomeIndexHtml, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"fontawesome.png": &bintree{staticGeneratorCkeditorPluginsFontawesomeIconsFontawesomePng, map[string]*bintree{}},
							"index.html": &bintree{staticGeneratorCkeditorPluginsFontawesomeIconsIndexHtml, map[string]*bintree{}},
						}},
						"index.html": &bintree{staticGeneratorCkeditorPluginsFontawesomeIndexHtml, map[string]*bintree{}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFontawesomePluginJs, map[string]*bintree{}},
					}},
					"format": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsFormatLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsFormatLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsFormatLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsFormatLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsFormatLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsFormatLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsFormatLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsFormatLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsFormatLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsFormatLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsFormatLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsFormatLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsFormatLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsFormatLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsFormatLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsFormatLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsFormatLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsFormatLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsFormatLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsFormatLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsFormatLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsFormatLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsFormatLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsFormatLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsFormatLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsFormatLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsFormatLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsFormatLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsFormatLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsFormatLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsFormatLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsFormatLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsFormatLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsFormatLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsFormatLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsFormatLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsFormatLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsFormatLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsFormatLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsFormatLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsFormatLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsFormatLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsFormatLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsFormatLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsFormatLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsFormatLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsFormatLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsFormatLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsFormatLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsFormatLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsFormatLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsFormatLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsFormatLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsFormatLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsFormatLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsFormatLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFormatPluginJs, map[string]*bintree{}},
					}},
					"forms": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"button.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsButtonJs, map[string]*bintree{}},
							"checkbox.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsCheckboxJs, map[string]*bintree{}},
							"form.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsFormJs, map[string]*bintree{}},
							"hiddenfield.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsHiddenfieldJs, map[string]*bintree{}},
							"radio.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsRadioJs, map[string]*bintree{}},
							"select.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsSelectJs, map[string]*bintree{}},
							"textarea.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsTextareaJs, map[string]*bintree{}},
							"textfield.js": &bintree{staticGeneratorCkeditorPluginsFormsDialogsTextfieldJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"button.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsButtonPng, map[string]*bintree{}},
							"checkbox.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsCheckboxPng, map[string]*bintree{}},
							"form.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsFormPng, map[string]*bintree{}},
							"hiddenfield.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHiddenfieldPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"button.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiButtonPng, map[string]*bintree{}},
								"checkbox.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiCheckboxPng, map[string]*bintree{}},
								"form.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiFormPng, map[string]*bintree{}},
								"hiddenfield.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiHiddenfieldPng, map[string]*bintree{}},
								"imagebutton.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiImagebuttonPng, map[string]*bintree{}},
								"radio.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiRadioPng, map[string]*bintree{}},
								"select-rtl.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiSelectRtlPng, map[string]*bintree{}},
								"select.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiSelectPng, map[string]*bintree{}},
								"textarea-rtl.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaRtlPng, map[string]*bintree{}},
								"textarea.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiTextareaPng, map[string]*bintree{}},
								"textfield-rtl.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldRtlPng, map[string]*bintree{}},
								"textfield.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsHidpiTextfieldPng, map[string]*bintree{}},
							}},
							"imagebutton.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsImagebuttonPng, map[string]*bintree{}},
							"radio.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsRadioPng, map[string]*bintree{}},
							"select-rtl.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsSelectRtlPng, map[string]*bintree{}},
							"select.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsSelectPng, map[string]*bintree{}},
							"textarea-rtl.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsTextareaRtlPng, map[string]*bintree{}},
							"textarea.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsTextareaPng, map[string]*bintree{}},
							"textfield-rtl.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsTextfieldRtlPng, map[string]*bintree{}},
							"textfield.png": &bintree{staticGeneratorCkeditorPluginsFormsIconsTextfieldPng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"hiddenfield.gif": &bintree{staticGeneratorCkeditorPluginsFormsImagesHiddenfieldGif, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsFormsLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsFormsLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsFormsLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsFormsLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsFormsLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsFormsLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsFormsLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsFormsLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsFormsLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsFormsLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsFormsLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsFormsLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsFormsLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsFormsLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsFormsLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsFormsLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsFormsLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsFormsLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsFormsLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsFormsLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsFormsLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsFormsLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsFormsLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsFormsLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsFormsLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsFormsLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsFormsLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsFormsLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsFormsLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsFormsLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsFormsLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsFormsLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsFormsLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsFormsLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsFormsLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsFormsLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsFormsLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsFormsLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsFormsLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsFormsLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsFormsLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsFormsLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsFormsLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsFormsLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsFormsLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsFormsLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsFormsLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsFormsLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsFormsLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsFormsLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsFormsLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsFormsLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsFormsLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsFormsLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsFormsLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsFormsLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsFormsPluginJs, map[string]*bintree{}},
					}},
					"glyphicons": &bintree{nil, map[string]*bintree{
						"css": &bintree{nil, map[string]*bintree{
							"config.json": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssConfigJson, map[string]*bintree{}},
							"css": &bintree{nil, map[string]*bintree{
								"bootstrap.css": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssCssBootstrapCss, map[string]*bintree{}},
							}},
							"fonts": &bintree{nil, map[string]*bintree{
								"glyphicons-halflings-regular.eot": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularEot, map[string]*bintree{}},
								"glyphicons-halflings-regular.svg": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularSvg, map[string]*bintree{}},
								"glyphicons-halflings-regular.ttf": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularTtf, map[string]*bintree{}},
								"glyphicons-halflings-regular.woff": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff, map[string]*bintree{}},
								"glyphicons-halflings-regular.woff2": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssFontsGlyphiconsHalflingsRegularWoff2, map[string]*bintree{}},
							}},
							"js": &bintree{nil, map[string]*bintree{
								"bootstrap.js": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapJs, map[string]*bintree{}},
								"bootstrap.min.js": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssJsBootstrapMinJs, map[string]*bintree{}},
							}},
							"style.css": &bintree{staticGeneratorCkeditorPluginsGlyphiconsCssStyleCss, map[string]*bintree{}},
						}},
						"dialogs": &bintree{nil, map[string]*bintree{
							"glyphicons.js": &bintree{staticGeneratorCkeditorPluginsGlyphiconsDialogsGlyphiconsJs, map[string]*bintree{}},
						}},
					}},
					"horizontalrule": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"horizontalrule.png": &bintree{staticGeneratorCkeditorPluginsHorizontalruleIconsHidpiHorizontalrulePng, map[string]*bintree{}},
							}},
							"horizontalrule.png": &bintree{staticGeneratorCkeditorPluginsHorizontalruleIconsHorizontalrulePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsHorizontalruleLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsHorizontalrulePluginJs, map[string]*bintree{}},
					}},
					"htmlwriter": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsHtmlwriterPluginJs, map[string]*bintree{}},
						"samples": &bintree{nil, map[string]*bintree{
							"assets": &bintree{nil, map[string]*bintree{
								"outputforflash": &bintree{nil, map[string]*bintree{
									"outputforflash.fla": &bintree{staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashFla, map[string]*bintree{}},
									"outputforflash.swf": &bintree{staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashOutputforflashSwf, map[string]*bintree{}},
									"swfobject.js": &bintree{staticGeneratorCkeditorPluginsHtmlwriterSamplesAssetsOutputforflashSwfobjectJs, map[string]*bintree{}},
								}},
							}},
							"outputforflash.html": &bintree{staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputforflashHtml, map[string]*bintree{}},
							"outputhtml.html": &bintree{staticGeneratorCkeditorPluginsHtmlwriterSamplesOutputhtmlHtml, map[string]*bintree{}},
						}},
					}},
					"icons.png": &bintree{staticGeneratorCkeditorPluginsIconsPng, map[string]*bintree{}},
					"icons_hidpi.png": &bintree{staticGeneratorCkeditorPluginsIcons_hidpiPng, map[string]*bintree{}},
					"iframe": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"iframe.js": &bintree{staticGeneratorCkeditorPluginsIframeDialogsIframeJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"iframe.png": &bintree{staticGeneratorCkeditorPluginsIframeIconsHidpiIframePng, map[string]*bintree{}},
							}},
							"iframe.png": &bintree{staticGeneratorCkeditorPluginsIframeIconsIframePng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"placeholder.png": &bintree{staticGeneratorCkeditorPluginsIframeImagesPlaceholderPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsIframeLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsIframeLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsIframeLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsIframeLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsIframeLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsIframeLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsIframeLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsIframeLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsIframeLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsIframeLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsIframeLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsIframeLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsIframeLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsIframeLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsIframeLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsIframeLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsIframeLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsIframeLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsIframeLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsIframeLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsIframeLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsIframeLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsIframeLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsIframeLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsIframeLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsIframeLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsIframeLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsIframeLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsIframeLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsIframeLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsIframeLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsIframeLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsIframeLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsIframeLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsIframeLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsIframeLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsIframeLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsIframeLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsIframeLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsIframeLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsIframeLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsIframeLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsIframeLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsIframeLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsIframeLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsIframeLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsIframeLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsIframeLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsIframeLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsIframeLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsIframeLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsIframeLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsIframeLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsIframeLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsIframeLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsIframeLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsIframePluginJs, map[string]*bintree{}},
					}},
					"image": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"image.js": &bintree{staticGeneratorCkeditorPluginsImageDialogsImageJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"image.png": &bintree{staticGeneratorCkeditorPluginsImageIconsHidpiImagePng, map[string]*bintree{}},
							}},
							"image.png": &bintree{staticGeneratorCkeditorPluginsImageIconsImagePng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"noimage.png": &bintree{staticGeneratorCkeditorPluginsImageImagesNoimagePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsImageLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsImageLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsImageLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsImageLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsImageLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsImageLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsImageLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsImageLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsImageLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsImageLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsImageLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsImageLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsImageLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsImageLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsImageLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsImageLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsImageLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsImageLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsImageLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsImageLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsImageLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsImageLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsImageLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsImageLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsImageLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsImageLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsImageLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsImageLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsImageLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsImageLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsImageLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsImageLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsImageLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsImageLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsImageLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsImageLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsImageLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsImageLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsImageLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsImageLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsImageLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsImageLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsImageLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsImageLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsImageLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsImageLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsImageLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsImageLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsImageLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsImageLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsImageLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsImageLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsImageLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsImageLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsImageLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsImageLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsImageLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsImageLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsImageLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsImageLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsImageLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsImageLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsImageLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsImageLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsImageLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsImageLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsImageLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsImageLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsImageLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsImagePluginJs, map[string]*bintree{}},
					}},
					"indent": &bintree{nil, map[string]*bintree{
						"dev": &bintree{nil, map[string]*bintree{
							"indent.html": &bintree{staticGeneratorCkeditorPluginsIndentDevIndentHtml, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"indent-rtl.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsHidpiIndentRtlPng, map[string]*bintree{}},
								"indent.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsHidpiIndentPng, map[string]*bintree{}},
								"outdent-rtl.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentRtlPng, map[string]*bintree{}},
								"outdent.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsHidpiOutdentPng, map[string]*bintree{}},
							}},
							"indent-rtl.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsIndentRtlPng, map[string]*bintree{}},
							"indent.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsIndentPng, map[string]*bintree{}},
							"outdent-rtl.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsOutdentRtlPng, map[string]*bintree{}},
							"outdent.png": &bintree{staticGeneratorCkeditorPluginsIndentIconsOutdentPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsIndentLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsIndentLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsIndentLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsIndentLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsIndentLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsIndentLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsIndentLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsIndentLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsIndentLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsIndentLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsIndentLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsIndentLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsIndentLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsIndentLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsIndentLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsIndentLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsIndentLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsIndentLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsIndentLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsIndentLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsIndentLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsIndentLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsIndentLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsIndentLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsIndentLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsIndentLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsIndentLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsIndentLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsIndentLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsIndentLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsIndentLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsIndentLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsIndentLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsIndentLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsIndentLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsIndentLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsIndentLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsIndentLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsIndentLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsIndentLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsIndentLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsIndentLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsIndentLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsIndentLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsIndentLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsIndentLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsIndentLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsIndentLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsIndentLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsIndentLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsIndentLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsIndentLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsIndentLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsIndentLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsIndentLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsIndentLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsIndentPluginJs, map[string]*bintree{}},
					}},
					"indentblock": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsIndentblockPluginJs, map[string]*bintree{}},
					}},
					"indentlist": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsIndentlistPluginJs, map[string]*bintree{}},
					}},
					"justify": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"justifyblock.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyblockPng, map[string]*bintree{}},
								"justifycenter.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifycenterPng, map[string]*bintree{}},
								"justifyleft.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyleftPng, map[string]*bintree{}},
								"justifyright.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsHidpiJustifyrightPng, map[string]*bintree{}},
							}},
							"justifyblock.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsJustifyblockPng, map[string]*bintree{}},
							"justifycenter.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsJustifycenterPng, map[string]*bintree{}},
							"justifyleft.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsJustifyleftPng, map[string]*bintree{}},
							"justifyright.png": &bintree{staticGeneratorCkeditorPluginsJustifyIconsJustifyrightPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsJustifyLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsJustifyPluginJs, map[string]*bintree{}},
					}},
					"language": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"language.png": &bintree{staticGeneratorCkeditorPluginsLanguageIconsHidpiLanguagePng, map[string]*bintree{}},
							}},
							"language.png": &bintree{staticGeneratorCkeditorPluginsLanguageIconsLanguagePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"ar.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangBgJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangElJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangEsJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangFoJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangGlJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangHeJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangIdJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangJaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangKuJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangPtJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangRuJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangSqJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangSvJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsLanguageLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsLanguagePluginJs, map[string]*bintree{}},
					}},
					"link": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"anchor.js": &bintree{staticGeneratorCkeditorPluginsLinkDialogsAnchorJs, map[string]*bintree{}},
							"link.js": &bintree{staticGeneratorCkeditorPluginsLinkDialogsLinkJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"anchor-rtl.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsAnchorRtlPng, map[string]*bintree{}},
							"anchor.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsAnchorPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"anchor-rtl.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorRtlPng, map[string]*bintree{}},
								"anchor.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsHidpiAnchorPng, map[string]*bintree{}},
								"link.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsHidpiLinkPng, map[string]*bintree{}},
								"unlink.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsHidpiUnlinkPng, map[string]*bintree{}},
							}},
							"link.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsLinkPng, map[string]*bintree{}},
							"unlink.png": &bintree{staticGeneratorCkeditorPluginsLinkIconsUnlinkPng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"anchor.png": &bintree{staticGeneratorCkeditorPluginsLinkImagesAnchorPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"anchor.png": &bintree{staticGeneratorCkeditorPluginsLinkImagesHidpiAnchorPng, map[string]*bintree{}},
							}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsLinkLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsLinkLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsLinkLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsLinkLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsLinkLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsLinkLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsLinkLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsLinkLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsLinkLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsLinkLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsLinkLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsLinkLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsLinkLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsLinkLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsLinkLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsLinkLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsLinkLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsLinkLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsLinkLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsLinkLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsLinkLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsLinkLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsLinkLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsLinkLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsLinkLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsLinkLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsLinkLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsLinkLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsLinkLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsLinkLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsLinkLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsLinkLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsLinkLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsLinkLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsLinkLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsLinkLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsLinkLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsLinkLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsLinkLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsLinkLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsLinkLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsLinkLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsLinkLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsLinkLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsLinkLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsLinkLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsLinkLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsLinkLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsLinkLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsLinkLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsLinkLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsLinkLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsLinkLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsLinkLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsLinkLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsLinkLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsLinkPluginJs, map[string]*bintree{}},
					}},
					"list": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"bulletedlist-rtl.png": &bintree{staticGeneratorCkeditorPluginsListIconsBulletedlistRtlPng, map[string]*bintree{}},
							"bulletedlist.png": &bintree{staticGeneratorCkeditorPluginsListIconsBulletedlistPng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"bulletedlist-rtl.png": &bintree{staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistRtlPng, map[string]*bintree{}},
								"bulletedlist.png": &bintree{staticGeneratorCkeditorPluginsListIconsHidpiBulletedlistPng, map[string]*bintree{}},
								"numberedlist-rtl.png": &bintree{staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistRtlPng, map[string]*bintree{}},
								"numberedlist.png": &bintree{staticGeneratorCkeditorPluginsListIconsHidpiNumberedlistPng, map[string]*bintree{}},
							}},
							"numberedlist-rtl.png": &bintree{staticGeneratorCkeditorPluginsListIconsNumberedlistRtlPng, map[string]*bintree{}},
							"numberedlist.png": &bintree{staticGeneratorCkeditorPluginsListIconsNumberedlistPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsListLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsListLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsListLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsListLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsListLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsListLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsListLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsListLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsListLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsListLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsListLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsListLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsListLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsListLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsListLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsListLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsListLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsListLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsListLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsListLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsListLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsListLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsListLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsListLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsListLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsListLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsListLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsListLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsListLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsListLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsListLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsListLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsListLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsListLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsListLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsListLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsListLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsListLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsListLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsListLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsListLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsListLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsListLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsListLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsListLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsListLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsListLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsListLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsListLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsListLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsListLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsListLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsListLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsListLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsListLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsListLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsListLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsListLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsListLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsListLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsListLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsListLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsListLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsListLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsListLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsListLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsListLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsListLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsListLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsListPluginJs, map[string]*bintree{}},
					}},
					"listblock": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsListblockPluginJs, map[string]*bintree{}},
					}},
					"liststyle": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"liststyle.js": &bintree{staticGeneratorCkeditorPluginsListstyleDialogsListstyleJs, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsListstyleLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsListstylePluginJs, map[string]*bintree{}},
					}},
					"magicline": &bintree{nil, map[string]*bintree{
						"dev": &bintree{nil, map[string]*bintree{
							"magicline.html": &bintree{staticGeneratorCkeditorPluginsMagiclineDevMagiclineHtml, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"icon-rtl.png": &bintree{staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconRtlPng, map[string]*bintree{}},
								"icon.png": &bintree{staticGeneratorCkeditorPluginsMagiclineImagesHidpiIconPng, map[string]*bintree{}},
							}},
							"icon-rtl.png": &bintree{staticGeneratorCkeditorPluginsMagiclineImagesIconRtlPng, map[string]*bintree{}},
							"icon.png": &bintree{staticGeneratorCkeditorPluginsMagiclineImagesIconPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangBgJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangElJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangFiJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangGlJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangHeJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangIdJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangJaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangKuJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangLvJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangPtJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangSqJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangSvJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsMagiclineLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsMagiclinePluginJs, map[string]*bintree{}},
						"samples": &bintree{nil, map[string]*bintree{
							"magicline.html": &bintree{staticGeneratorCkeditorPluginsMagiclineSamplesMagiclineHtml, map[string]*bintree{}},
						}},
					}},
					"maximize": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"maximize.png": &bintree{staticGeneratorCkeditorPluginsMaximizeIconsHidpiMaximizePng, map[string]*bintree{}},
							}},
							"maximize.png": &bintree{staticGeneratorCkeditorPluginsMaximizeIconsMaximizePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsMaximizeLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsMaximizePluginJs, map[string]*bintree{}},
					}},
					"menu": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsMenuPluginJs, map[string]*bintree{}},
					}},
					"menubutton": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsMenubuttonPluginJs, map[string]*bintree{}},
					}},
					"newpage": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"newpage-rtl.png": &bintree{staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpageRtlPng, map[string]*bintree{}},
								"newpage.png": &bintree{staticGeneratorCkeditorPluginsNewpageIconsHidpiNewpagePng, map[string]*bintree{}},
							}},
							"newpage-rtl.png": &bintree{staticGeneratorCkeditorPluginsNewpageIconsNewpageRtlPng, map[string]*bintree{}},
							"newpage.png": &bintree{staticGeneratorCkeditorPluginsNewpageIconsNewpagePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsNewpageLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsNewpagePluginJs, map[string]*bintree{}},
					}},
					"pagebreak": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"pagebreak-rtl.png": &bintree{staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakRtlPng, map[string]*bintree{}},
								"pagebreak.png": &bintree{staticGeneratorCkeditorPluginsPagebreakIconsHidpiPagebreakPng, map[string]*bintree{}},
							}},
							"pagebreak-rtl.png": &bintree{staticGeneratorCkeditorPluginsPagebreakIconsPagebreakRtlPng, map[string]*bintree{}},
							"pagebreak.png": &bintree{staticGeneratorCkeditorPluginsPagebreakIconsPagebreakPng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"pagebreak.gif": &bintree{staticGeneratorCkeditorPluginsPagebreakImagesPagebreakGif, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsPagebreakLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPagebreakPluginJs, map[string]*bintree{}},
					}},
					"panel": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPanelPluginJs, map[string]*bintree{}},
					}},
					"panelbutton": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPanelbuttonPluginJs, map[string]*bintree{}},
					}},
					"pastefromword": &bintree{nil, map[string]*bintree{
						"filter": &bintree{nil, map[string]*bintree{
							"default.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordFilterDefaultJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"pastefromword-rtl.png": &bintree{staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordRtlPng, map[string]*bintree{}},
								"pastefromword.png": &bintree{staticGeneratorCkeditorPluginsPastefromwordIconsHidpiPastefromwordPng, map[string]*bintree{}},
							}},
							"pastefromword-rtl.png": &bintree{staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordRtlPng, map[string]*bintree{}},
							"pastefromword.png": &bintree{staticGeneratorCkeditorPluginsPastefromwordIconsPastefromwordPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPastefromwordPluginJs, map[string]*bintree{}},
					}},
					"pastetext": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"pastetext-rtl.png": &bintree{staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextRtlPng, map[string]*bintree{}},
								"pastetext.png": &bintree{staticGeneratorCkeditorPluginsPastetextIconsHidpiPastetextPng, map[string]*bintree{}},
							}},
							"pastetext-rtl.png": &bintree{staticGeneratorCkeditorPluginsPastetextIconsPastetextRtlPng, map[string]*bintree{}},
							"pastetext.png": &bintree{staticGeneratorCkeditorPluginsPastetextIconsPastetextPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsPastetextLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPastetextPluginJs, map[string]*bintree{}},
					}},
					"popup": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPopupPluginJs, map[string]*bintree{}},
					}},
					"preview": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"preview-rtl.png": &bintree{staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewRtlPng, map[string]*bintree{}},
								"preview.png": &bintree{staticGeneratorCkeditorPluginsPreviewIconsHidpiPreviewPng, map[string]*bintree{}},
							}},
							"preview-rtl.png": &bintree{staticGeneratorCkeditorPluginsPreviewIconsPreviewRtlPng, map[string]*bintree{}},
							"preview.png": &bintree{staticGeneratorCkeditorPluginsPreviewIconsPreviewPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsPreviewLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPreviewPluginJs, map[string]*bintree{}},
						"preview.html": &bintree{staticGeneratorCkeditorPluginsPreviewPreviewHtml, map[string]*bintree{}},
					}},
					"print": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"print.png": &bintree{staticGeneratorCkeditorPluginsPrintIconsHidpiPrintPng, map[string]*bintree{}},
							}},
							"print.png": &bintree{staticGeneratorCkeditorPluginsPrintIconsPrintPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsPrintLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsPrintLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsPrintLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsPrintLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsPrintLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsPrintLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsPrintLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsPrintLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsPrintLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsPrintLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsPrintLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsPrintLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsPrintLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsPrintLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsPrintLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsPrintLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsPrintLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsPrintLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsPrintLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsPrintLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsPrintLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsPrintLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsPrintLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsPrintLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsPrintLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsPrintLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsPrintLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsPrintLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsPrintLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsPrintLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsPrintLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsPrintLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsPrintLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsPrintLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsPrintLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsPrintLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsPrintLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsPrintLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsPrintLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsPrintLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsPrintLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsPrintLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsPrintLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsPrintLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsPrintLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsPrintLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsPrintLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsPrintLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsPrintLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsPrintLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsPrintLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsPrintLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsPrintLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsPrintLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsPrintLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsPrintLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsPrintPluginJs, map[string]*bintree{}},
					}},
					"removeformat": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"removeformat.png": &bintree{staticGeneratorCkeditorPluginsRemoveformatIconsHidpiRemoveformatPng, map[string]*bintree{}},
							}},
							"removeformat.png": &bintree{staticGeneratorCkeditorPluginsRemoveformatIconsRemoveformatPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsRemoveformatPluginJs, map[string]*bintree{}},
					}},
					"resize": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsResizePluginJs, map[string]*bintree{}},
					}},
					"richcombo": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsRichcomboPluginJs, map[string]*bintree{}},
					}},
					"save": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"save.png": &bintree{staticGeneratorCkeditorPluginsSaveIconsHidpiSavePng, map[string]*bintree{}},
							}},
							"save.png": &bintree{staticGeneratorCkeditorPluginsSaveIconsSavePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsSaveLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsSaveLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsSaveLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsSaveLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsSaveLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsSaveLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsSaveLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsSaveLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsSaveLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsSaveLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsSaveLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsSaveLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsSaveLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsSaveLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsSaveLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsSaveLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsSaveLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsSaveLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsSaveLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsSaveLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsSaveLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsSaveLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsSaveLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsSaveLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsSaveLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsSaveLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsSaveLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsSaveLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsSaveLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsSaveLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsSaveLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsSaveLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsSaveLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsSaveLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsSaveLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsSaveLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsSaveLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsSaveLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsSaveLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsSaveLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsSaveLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsSaveLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsSaveLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsSaveLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsSaveLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsSaveLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsSaveLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsSaveLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsSaveLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsSaveLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsSaveLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsSaveLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsSaveLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsSaveLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsSaveLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsSaveLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsSavePluginJs, map[string]*bintree{}},
					}},
					"scayt": &bintree{nil, map[string]*bintree{
						"CHANGELOG.md": &bintree{staticGeneratorCkeditorPluginsScaytChangelogMd, map[string]*bintree{}},
						"LICENSE.md": &bintree{staticGeneratorCkeditorPluginsScaytLicenseMd, map[string]*bintree{}},
						"README.md": &bintree{staticGeneratorCkeditorPluginsScaytReadmeMd, map[string]*bintree{}},
						"dialogs": &bintree{nil, map[string]*bintree{
							"options.js": &bintree{staticGeneratorCkeditorPluginsScaytDialogsOptionsJs, map[string]*bintree{}},
							"toolbar.css": &bintree{staticGeneratorCkeditorPluginsScaytDialogsToolbarCss, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"scayt.png": &bintree{staticGeneratorCkeditorPluginsScaytIconsHidpiScaytPng, map[string]*bintree{}},
							}},
							"scayt.png": &bintree{staticGeneratorCkeditorPluginsScaytIconsScaytPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsScaytLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsScaytLangArJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsScaytLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsScaytLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsScaytLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsScaytLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsScaytLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsScaytLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsScaytLangDaJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsScaytLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsScaytLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsScaytLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsScaytLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsScaytLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsScaytLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsScaytLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsScaytLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsScaytLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsScaytLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsScaytLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsScaytLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsScaytLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsScaytLangHuJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsScaytLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsScaytLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsScaytLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsScaytLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsScaytLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsScaytLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsScaytLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsScaytLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsScaytLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsScaytLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsScaytLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsScaytLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsScaytLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsScaytLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsScaytLangNoJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsScaytLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsScaytLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsScaytLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsScaytLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsScaytLangRuJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsScaytLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsScaytLangSlJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsScaytLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsScaytLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsScaytLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsScaytLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsScaytLangTrJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsScaytLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsScaytLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsScaytLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsScaytLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsScaytLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsScaytPluginJs, map[string]*bintree{}},
						"skins": &bintree{nil, map[string]*bintree{
							"moono-lisa": &bintree{nil, map[string]*bintree{
								"scayt.css": &bintree{staticGeneratorCkeditorPluginsScaytSkinsMoonoLisaScaytCss, map[string]*bintree{}},
							}},
						}},
					}},
					"selectall": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"selectall.png": &bintree{staticGeneratorCkeditorPluginsSelectallIconsHidpiSelectallPng, map[string]*bintree{}},
							}},
							"selectall.png": &bintree{staticGeneratorCkeditorPluginsSelectallIconsSelectallPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsSelectallLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsSelectallPluginJs, map[string]*bintree{}},
					}},
					"showblocks": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"showblocks-rtl.png": &bintree{staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksRtlPng, map[string]*bintree{}},
								"showblocks.png": &bintree{staticGeneratorCkeditorPluginsShowblocksIconsHidpiShowblocksPng, map[string]*bintree{}},
							}},
							"showblocks-rtl.png": &bintree{staticGeneratorCkeditorPluginsShowblocksIconsShowblocksRtlPng, map[string]*bintree{}},
							"showblocks.png": &bintree{staticGeneratorCkeditorPluginsShowblocksIconsShowblocksPng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"block_address.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_addressPng, map[string]*bintree{}},
							"block_blockquote.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_blockquotePng, map[string]*bintree{}},
							"block_div.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_divPng, map[string]*bintree{}},
							"block_h1.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_h1Png, map[string]*bintree{}},
							"block_h2.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_h2Png, map[string]*bintree{}},
							"block_h3.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_h3Png, map[string]*bintree{}},
							"block_h4.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_h4Png, map[string]*bintree{}},
							"block_h5.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_h5Png, map[string]*bintree{}},
							"block_h6.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_h6Png, map[string]*bintree{}},
							"block_p.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_pPng, map[string]*bintree{}},
							"block_pre.png": &bintree{staticGeneratorCkeditorPluginsShowblocksImagesBlock_prePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsShowblocksLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsShowblocksPluginJs, map[string]*bintree{}},
					}},
					"showborders": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsShowbordersPluginJs, map[string]*bintree{}},
					}},
					"smiley": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"smiley.js": &bintree{staticGeneratorCkeditorPluginsSmileyDialogsSmileyJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"smiley.png": &bintree{staticGeneratorCkeditorPluginsSmileyIconsHidpiSmileyPng, map[string]*bintree{}},
							}},
							"smiley.png": &bintree{staticGeneratorCkeditorPluginsSmileyIconsSmileyPng, map[string]*bintree{}},
						}},
						"images": &bintree{nil, map[string]*bintree{
							"angel_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesAngel_smileGif, map[string]*bintree{}},
							"angel_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesAngel_smilePng, map[string]*bintree{}},
							"angry_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesAngry_smileGif, map[string]*bintree{}},
							"angry_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesAngry_smilePng, map[string]*bintree{}},
							"broken_heart.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesBroken_heartGif, map[string]*bintree{}},
							"broken_heart.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesBroken_heartPng, map[string]*bintree{}},
							"confused_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesConfused_smileGif, map[string]*bintree{}},
							"confused_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesConfused_smilePng, map[string]*bintree{}},
							"cry_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesCry_smileGif, map[string]*bintree{}},
							"cry_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesCry_smilePng, map[string]*bintree{}},
							"devil_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesDevil_smileGif, map[string]*bintree{}},
							"devil_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesDevil_smilePng, map[string]*bintree{}},
							"embaressed_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesEmbaressed_smileGif, map[string]*bintree{}},
							"embarrassed_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smileGif, map[string]*bintree{}},
							"embarrassed_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesEmbarrassed_smilePng, map[string]*bintree{}},
							"envelope.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesEnvelopeGif, map[string]*bintree{}},
							"envelope.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesEnvelopePng, map[string]*bintree{}},
							"heart.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesHeartGif, map[string]*bintree{}},
							"heart.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesHeartPng, map[string]*bintree{}},
							"kiss.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesKissGif, map[string]*bintree{}},
							"kiss.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesKissPng, map[string]*bintree{}},
							"lightbulb.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesLightbulbGif, map[string]*bintree{}},
							"lightbulb.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesLightbulbPng, map[string]*bintree{}},
							"omg_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesOmg_smileGif, map[string]*bintree{}},
							"omg_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesOmg_smilePng, map[string]*bintree{}},
							"regular_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesRegular_smileGif, map[string]*bintree{}},
							"regular_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesRegular_smilePng, map[string]*bintree{}},
							"sad_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesSad_smileGif, map[string]*bintree{}},
							"sad_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesSad_smilePng, map[string]*bintree{}},
							"shades_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesShades_smileGif, map[string]*bintree{}},
							"shades_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesShades_smilePng, map[string]*bintree{}},
							"teeth_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesTeeth_smileGif, map[string]*bintree{}},
							"teeth_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesTeeth_smilePng, map[string]*bintree{}},
							"thumbs_down.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesThumbs_downGif, map[string]*bintree{}},
							"thumbs_down.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesThumbs_downPng, map[string]*bintree{}},
							"thumbs_up.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesThumbs_upGif, map[string]*bintree{}},
							"thumbs_up.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesThumbs_upPng, map[string]*bintree{}},
							"tongue_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesTongue_smileGif, map[string]*bintree{}},
							"tongue_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesTongue_smilePng, map[string]*bintree{}},
							"tounge_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesTounge_smileGif, map[string]*bintree{}},
							"whatchutalkingabout_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smileGif, map[string]*bintree{}},
							"whatchutalkingabout_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesWhatchutalkingabout_smilePng, map[string]*bintree{}},
							"wink_smile.gif": &bintree{staticGeneratorCkeditorPluginsSmileyImagesWink_smileGif, map[string]*bintree{}},
							"wink_smile.png": &bintree{staticGeneratorCkeditorPluginsSmileyImagesWink_smilePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsSmileyLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsSmileyPluginJs, map[string]*bintree{}},
					}},
					"sourcearea": &bintree{nil, map[string]*bintree{
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"source-rtl.png": &bintree{staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourceRtlPng, map[string]*bintree{}},
								"source.png": &bintree{staticGeneratorCkeditorPluginsSourceareaIconsHidpiSourcePng, map[string]*bintree{}},
							}},
							"source-rtl.png": &bintree{staticGeneratorCkeditorPluginsSourceareaIconsSourceRtlPng, map[string]*bintree{}},
							"source.png": &bintree{staticGeneratorCkeditorPluginsSourceareaIconsSourcePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsSourceareaLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsSourceareaPluginJs, map[string]*bintree{}},
					}},
					"specialchar": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"lang": &bintree{nil, map[string]*bintree{
								"_translationstatus.txt": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLang_translationstatusTxt, map[string]*bintree{}},
								"af.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangAfJs, map[string]*bintree{}},
								"ar.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangArJs, map[string]*bintree{}},
								"az.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangAzJs, map[string]*bintree{}},
								"bg.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangBgJs, map[string]*bintree{}},
								"ca.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangCaJs, map[string]*bintree{}},
								"cs.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangCsJs, map[string]*bintree{}},
								"cy.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangCyJs, map[string]*bintree{}},
								"da.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangDaJs, map[string]*bintree{}},
								"de-ch.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeChJs, map[string]*bintree{}},
								"de.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangDeJs, map[string]*bintree{}},
								"el.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangElJs, map[string]*bintree{}},
								"en-gb.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnGbJs, map[string]*bintree{}},
								"en.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangEnJs, map[string]*bintree{}},
								"eo.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangEoJs, map[string]*bintree{}},
								"es.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangEsJs, map[string]*bintree{}},
								"et.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangEtJs, map[string]*bintree{}},
								"eu.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangEuJs, map[string]*bintree{}},
								"fa.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangFaJs, map[string]*bintree{}},
								"fi.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangFiJs, map[string]*bintree{}},
								"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrCaJs, map[string]*bintree{}},
								"fr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangFrJs, map[string]*bintree{}},
								"gl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangGlJs, map[string]*bintree{}},
								"he.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangHeJs, map[string]*bintree{}},
								"hr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangHrJs, map[string]*bintree{}},
								"hu.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangHuJs, map[string]*bintree{}},
								"id.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangIdJs, map[string]*bintree{}},
								"it.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangItJs, map[string]*bintree{}},
								"ja.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangJaJs, map[string]*bintree{}},
								"km.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangKmJs, map[string]*bintree{}},
								"ko.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangKoJs, map[string]*bintree{}},
								"ku.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangKuJs, map[string]*bintree{}},
								"lt.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangLtJs, map[string]*bintree{}},
								"lv.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangLvJs, map[string]*bintree{}},
								"nb.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangNbJs, map[string]*bintree{}},
								"nl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangNlJs, map[string]*bintree{}},
								"no.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangNoJs, map[string]*bintree{}},
								"oc.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangOcJs, map[string]*bintree{}},
								"pl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangPlJs, map[string]*bintree{}},
								"pt-br.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtBrJs, map[string]*bintree{}},
								"pt.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangPtJs, map[string]*bintree{}},
								"ru.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangRuJs, map[string]*bintree{}},
								"si.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangSiJs, map[string]*bintree{}},
								"sk.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangSkJs, map[string]*bintree{}},
								"sl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangSlJs, map[string]*bintree{}},
								"sq.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangSqJs, map[string]*bintree{}},
								"sv.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangSvJs, map[string]*bintree{}},
								"th.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangThJs, map[string]*bintree{}},
								"tr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangTrJs, map[string]*bintree{}},
								"tt.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangTtJs, map[string]*bintree{}},
								"ug.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangUgJs, map[string]*bintree{}},
								"uk.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangUkJs, map[string]*bintree{}},
								"vi.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangViJs, map[string]*bintree{}},
								"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhCnJs, map[string]*bintree{}},
								"zh.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsLangZhJs, map[string]*bintree{}},
							}},
							"specialchar.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharDialogsSpecialcharJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"specialchar.png": &bintree{staticGeneratorCkeditorPluginsSpecialcharIconsHidpiSpecialcharPng, map[string]*bintree{}},
							}},
							"specialchar.png": &bintree{staticGeneratorCkeditorPluginsSpecialcharIconsSpecialcharPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"_translationstatus.txt": &bintree{staticGeneratorCkeditorPluginsSpecialcharLang_translationstatusTxt, map[string]*bintree{}},
							"af.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsSpecialcharPluginJs, map[string]*bintree{}},
					}},
					"stylescombo": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsStylescomboLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsStylescomboPluginJs, map[string]*bintree{}},
					}},
					"tab": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsTabPluginJs, map[string]*bintree{}},
					}},
					"table": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"table.js": &bintree{staticGeneratorCkeditorPluginsTableDialogsTableJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"table.png": &bintree{staticGeneratorCkeditorPluginsTableIconsHidpiTablePng, map[string]*bintree{}},
							}},
							"table.png": &bintree{staticGeneratorCkeditorPluginsTableIconsTablePng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsTableLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsTableLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsTableLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsTableLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsTableLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsTableLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsTableLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsTableLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsTableLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsTableLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsTableLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsTableLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsTableLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsTableLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsTableLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsTableLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsTableLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsTableLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsTableLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsTableLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsTableLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsTableLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsTableLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsTableLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsTableLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsTableLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsTableLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsTableLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsTableLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsTableLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsTableLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsTableLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsTableLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsTableLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsTableLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsTableLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsTableLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsTableLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsTableLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsTableLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsTableLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsTableLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsTableLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsTableLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsTableLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsTableLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsTableLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsTableLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsTableLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsTableLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsTableLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsTableLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsTableLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsTableLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsTableLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsTableLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsTableLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsTableLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsTableLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsTableLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsTableLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsTableLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsTableLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsTableLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsTableLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsTableLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsTableLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsTableLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsTableLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsTablePluginJs, map[string]*bintree{}},
					}},
					"tabletools": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"tableCell.js": &bintree{staticGeneratorCkeditorPluginsTabletoolsDialogsTablecellJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsTabletoolsPluginJs, map[string]*bintree{}},
					}},
					"templates": &bintree{nil, map[string]*bintree{
						"dialogs": &bintree{nil, map[string]*bintree{
							"templates.css": &bintree{staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesCss, map[string]*bintree{}},
							"templates.js": &bintree{staticGeneratorCkeditorPluginsTemplatesDialogsTemplatesJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"templates-rtl.png": &bintree{staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesRtlPng, map[string]*bintree{}},
								"templates.png": &bintree{staticGeneratorCkeditorPluginsTemplatesIconsHidpiTemplatesPng, map[string]*bintree{}},
							}},
							"templates-rtl.png": &bintree{staticGeneratorCkeditorPluginsTemplatesIconsTemplatesRtlPng, map[string]*bintree{}},
							"templates.png": &bintree{staticGeneratorCkeditorPluginsTemplatesIconsTemplatesPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsTemplatesLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsTemplatesPluginJs, map[string]*bintree{}},
						"templates": &bintree{nil, map[string]*bintree{
							"default.js": &bintree{staticGeneratorCkeditorPluginsTemplatesTemplatesDefaultJs, map[string]*bintree{}},
							"images": &bintree{nil, map[string]*bintree{
								"template1.gif": &bintree{staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate1Gif, map[string]*bintree{}},
								"template2.gif": &bintree{staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate2Gif, map[string]*bintree{}},
								"template3.gif": &bintree{staticGeneratorCkeditorPluginsTemplatesTemplatesImagesTemplate3Gif, map[string]*bintree{}},
							}},
						}},
					}},
					"toolbar": &bintree{nil, map[string]*bintree{
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsToolbarLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsToolbarPluginJs, map[string]*bintree{}},
						"samples": &bintree{nil, map[string]*bintree{
							"toolbar.html": &bintree{staticGeneratorCkeditorPluginsToolbarSamplesToolbarHtml, map[string]*bintree{}},
						}},
					}},
					"undo": &bintree{nil, map[string]*bintree{
						"dev": &bintree{nil, map[string]*bintree{
							"snapshot.html": &bintree{staticGeneratorCkeditorPluginsUndoDevSnapshotHtml, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"redo-rtl.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsHidpiRedoRtlPng, map[string]*bintree{}},
								"redo.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsHidpiRedoPng, map[string]*bintree{}},
								"undo-rtl.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsHidpiUndoRtlPng, map[string]*bintree{}},
								"undo.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsHidpiUndoPng, map[string]*bintree{}},
							}},
							"redo-rtl.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsRedoRtlPng, map[string]*bintree{}},
							"redo.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsRedoPng, map[string]*bintree{}},
							"undo-rtl.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsUndoRtlPng, map[string]*bintree{}},
							"undo.png": &bintree{staticGeneratorCkeditorPluginsUndoIconsUndoPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsUndoLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsUndoLangArJs, map[string]*bintree{}},
							"az.js": &bintree{staticGeneratorCkeditorPluginsUndoLangAzJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsUndoLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsUndoLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsUndoLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsUndoLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsUndoLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsUndoLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsUndoLangDaJs, map[string]*bintree{}},
							"de-ch.js": &bintree{staticGeneratorCkeditorPluginsUndoLangDeChJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsUndoLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsUndoLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsUndoLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsUndoLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsUndoLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsUndoLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsUndoLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsUndoLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsUndoLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsUndoLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsUndoLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsUndoLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsUndoLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsUndoLangHuJs, map[string]*bintree{}},
							"id.js": &bintree{staticGeneratorCkeditorPluginsUndoLangIdJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsUndoLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsUndoLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsUndoLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsUndoLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsUndoLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsUndoLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsUndoLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsUndoLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsUndoLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsUndoLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsUndoLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsUndoLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsUndoLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsUndoLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsUndoLangNoJs, map[string]*bintree{}},
							"oc.js": &bintree{staticGeneratorCkeditorPluginsUndoLangOcJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsUndoLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsUndoLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsUndoLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsUndoLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsUndoLangRuJs, map[string]*bintree{}},
							"si.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSiJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSlJs, map[string]*bintree{}},
							"sq.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSqJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsUndoLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsUndoLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsUndoLangTrJs, map[string]*bintree{}},
							"tt.js": &bintree{staticGeneratorCkeditorPluginsUndoLangTtJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsUndoLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsUndoLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsUndoLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsUndoLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsUndoLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsUndoPluginJs, map[string]*bintree{}},
					}},
					"widget": &bintree{nil, map[string]*bintree{
						"images": &bintree{nil, map[string]*bintree{
							"handle.png": &bintree{staticGeneratorCkeditorPluginsWidgetImagesHandlePng, map[string]*bintree{}},
						}},
					}},
					"wsc": &bintree{nil, map[string]*bintree{
						"LICENSE.md": &bintree{staticGeneratorCkeditorPluginsWscLicenseMd, map[string]*bintree{}},
						"README.js": &bintree{staticGeneratorCkeditorPluginsWscReadmeJs, map[string]*bintree{}},
						"README.md": &bintree{staticGeneratorCkeditorPluginsWscReadmeMd, map[string]*bintree{}},
						"dialogs": &bintree{nil, map[string]*bintree{
							"ciframe.html": &bintree{staticGeneratorCkeditorPluginsWscDialogsCiframeHtml, map[string]*bintree{}},
							"tmp.html": &bintree{staticGeneratorCkeditorPluginsWscDialogsTmpHtml, map[string]*bintree{}},
							"tmpFrameset.html": &bintree{staticGeneratorCkeditorPluginsWscDialogsTmpframesetHtml, map[string]*bintree{}},
							"wsc.css": &bintree{staticGeneratorCkeditorPluginsWscDialogsWscCss, map[string]*bintree{}},
							"wsc.js": &bintree{staticGeneratorCkeditorPluginsWscDialogsWscJs, map[string]*bintree{}},
							"wsc_ie.js": &bintree{staticGeneratorCkeditorPluginsWscDialogsWsc_ieJs, map[string]*bintree{}},
						}},
						"icons": &bintree{nil, map[string]*bintree{
							"hidpi": &bintree{nil, map[string]*bintree{
								"spellchecker.png": &bintree{staticGeneratorCkeditorPluginsWscIconsHidpiSpellcheckerPng, map[string]*bintree{}},
							}},
							"spellchecker.png": &bintree{staticGeneratorCkeditorPluginsWscIconsSpellcheckerPng, map[string]*bintree{}},
						}},
						"lang": &bintree{nil, map[string]*bintree{
							"af.js": &bintree{staticGeneratorCkeditorPluginsWscLangAfJs, map[string]*bintree{}},
							"ar.js": &bintree{staticGeneratorCkeditorPluginsWscLangArJs, map[string]*bintree{}},
							"bg.js": &bintree{staticGeneratorCkeditorPluginsWscLangBgJs, map[string]*bintree{}},
							"bn.js": &bintree{staticGeneratorCkeditorPluginsWscLangBnJs, map[string]*bintree{}},
							"bs.js": &bintree{staticGeneratorCkeditorPluginsWscLangBsJs, map[string]*bintree{}},
							"ca.js": &bintree{staticGeneratorCkeditorPluginsWscLangCaJs, map[string]*bintree{}},
							"cs.js": &bintree{staticGeneratorCkeditorPluginsWscLangCsJs, map[string]*bintree{}},
							"cy.js": &bintree{staticGeneratorCkeditorPluginsWscLangCyJs, map[string]*bintree{}},
							"da.js": &bintree{staticGeneratorCkeditorPluginsWscLangDaJs, map[string]*bintree{}},
							"de.js": &bintree{staticGeneratorCkeditorPluginsWscLangDeJs, map[string]*bintree{}},
							"el.js": &bintree{staticGeneratorCkeditorPluginsWscLangElJs, map[string]*bintree{}},
							"en-au.js": &bintree{staticGeneratorCkeditorPluginsWscLangEnAuJs, map[string]*bintree{}},
							"en-ca.js": &bintree{staticGeneratorCkeditorPluginsWscLangEnCaJs, map[string]*bintree{}},
							"en-gb.js": &bintree{staticGeneratorCkeditorPluginsWscLangEnGbJs, map[string]*bintree{}},
							"en.js": &bintree{staticGeneratorCkeditorPluginsWscLangEnJs, map[string]*bintree{}},
							"eo.js": &bintree{staticGeneratorCkeditorPluginsWscLangEoJs, map[string]*bintree{}},
							"es.js": &bintree{staticGeneratorCkeditorPluginsWscLangEsJs, map[string]*bintree{}},
							"et.js": &bintree{staticGeneratorCkeditorPluginsWscLangEtJs, map[string]*bintree{}},
							"eu.js": &bintree{staticGeneratorCkeditorPluginsWscLangEuJs, map[string]*bintree{}},
							"fa.js": &bintree{staticGeneratorCkeditorPluginsWscLangFaJs, map[string]*bintree{}},
							"fi.js": &bintree{staticGeneratorCkeditorPluginsWscLangFiJs, map[string]*bintree{}},
							"fo.js": &bintree{staticGeneratorCkeditorPluginsWscLangFoJs, map[string]*bintree{}},
							"fr-ca.js": &bintree{staticGeneratorCkeditorPluginsWscLangFrCaJs, map[string]*bintree{}},
							"fr.js": &bintree{staticGeneratorCkeditorPluginsWscLangFrJs, map[string]*bintree{}},
							"gl.js": &bintree{staticGeneratorCkeditorPluginsWscLangGlJs, map[string]*bintree{}},
							"gu.js": &bintree{staticGeneratorCkeditorPluginsWscLangGuJs, map[string]*bintree{}},
							"he.js": &bintree{staticGeneratorCkeditorPluginsWscLangHeJs, map[string]*bintree{}},
							"hi.js": &bintree{staticGeneratorCkeditorPluginsWscLangHiJs, map[string]*bintree{}},
							"hr.js": &bintree{staticGeneratorCkeditorPluginsWscLangHrJs, map[string]*bintree{}},
							"hu.js": &bintree{staticGeneratorCkeditorPluginsWscLangHuJs, map[string]*bintree{}},
							"is.js": &bintree{staticGeneratorCkeditorPluginsWscLangIsJs, map[string]*bintree{}},
							"it.js": &bintree{staticGeneratorCkeditorPluginsWscLangItJs, map[string]*bintree{}},
							"ja.js": &bintree{staticGeneratorCkeditorPluginsWscLangJaJs, map[string]*bintree{}},
							"ka.js": &bintree{staticGeneratorCkeditorPluginsWscLangKaJs, map[string]*bintree{}},
							"km.js": &bintree{staticGeneratorCkeditorPluginsWscLangKmJs, map[string]*bintree{}},
							"ko.js": &bintree{staticGeneratorCkeditorPluginsWscLangKoJs, map[string]*bintree{}},
							"ku.js": &bintree{staticGeneratorCkeditorPluginsWscLangKuJs, map[string]*bintree{}},
							"lt.js": &bintree{staticGeneratorCkeditorPluginsWscLangLtJs, map[string]*bintree{}},
							"lv.js": &bintree{staticGeneratorCkeditorPluginsWscLangLvJs, map[string]*bintree{}},
							"mk.js": &bintree{staticGeneratorCkeditorPluginsWscLangMkJs, map[string]*bintree{}},
							"mn.js": &bintree{staticGeneratorCkeditorPluginsWscLangMnJs, map[string]*bintree{}},
							"ms.js": &bintree{staticGeneratorCkeditorPluginsWscLangMsJs, map[string]*bintree{}},
							"nb.js": &bintree{staticGeneratorCkeditorPluginsWscLangNbJs, map[string]*bintree{}},
							"nl.js": &bintree{staticGeneratorCkeditorPluginsWscLangNlJs, map[string]*bintree{}},
							"no.js": &bintree{staticGeneratorCkeditorPluginsWscLangNoJs, map[string]*bintree{}},
							"pl.js": &bintree{staticGeneratorCkeditorPluginsWscLangPlJs, map[string]*bintree{}},
							"pt-br.js": &bintree{staticGeneratorCkeditorPluginsWscLangPtBrJs, map[string]*bintree{}},
							"pt.js": &bintree{staticGeneratorCkeditorPluginsWscLangPtJs, map[string]*bintree{}},
							"ro.js": &bintree{staticGeneratorCkeditorPluginsWscLangRoJs, map[string]*bintree{}},
							"ru.js": &bintree{staticGeneratorCkeditorPluginsWscLangRuJs, map[string]*bintree{}},
							"sk.js": &bintree{staticGeneratorCkeditorPluginsWscLangSkJs, map[string]*bintree{}},
							"sl.js": &bintree{staticGeneratorCkeditorPluginsWscLangSlJs, map[string]*bintree{}},
							"sr-latn.js": &bintree{staticGeneratorCkeditorPluginsWscLangSrLatnJs, map[string]*bintree{}},
							"sr.js": &bintree{staticGeneratorCkeditorPluginsWscLangSrJs, map[string]*bintree{}},
							"sv.js": &bintree{staticGeneratorCkeditorPluginsWscLangSvJs, map[string]*bintree{}},
							"th.js": &bintree{staticGeneratorCkeditorPluginsWscLangThJs, map[string]*bintree{}},
							"tr.js": &bintree{staticGeneratorCkeditorPluginsWscLangTrJs, map[string]*bintree{}},
							"ug.js": &bintree{staticGeneratorCkeditorPluginsWscLangUgJs, map[string]*bintree{}},
							"uk.js": &bintree{staticGeneratorCkeditorPluginsWscLangUkJs, map[string]*bintree{}},
							"vi.js": &bintree{staticGeneratorCkeditorPluginsWscLangViJs, map[string]*bintree{}},
							"zh-cn.js": &bintree{staticGeneratorCkeditorPluginsWscLangZhCnJs, map[string]*bintree{}},
							"zh.js": &bintree{staticGeneratorCkeditorPluginsWscLangZhJs, map[string]*bintree{}},
						}},
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsWscPluginJs, map[string]*bintree{}},
						"skins": &bintree{nil, map[string]*bintree{
							"moono-lisa": &bintree{nil, map[string]*bintree{
								"wsc.css": &bintree{staticGeneratorCkeditorPluginsWscSkinsMoonoLisaWscCss, map[string]*bintree{}},
							}},
						}},
					}},
					"wysiwygarea": &bintree{nil, map[string]*bintree{
						"plugin.js": &bintree{staticGeneratorCkeditorPluginsWysiwygareaPluginJs, map[string]*bintree{}},
						"samples": &bintree{nil, map[string]*bintree{
							"fullpage.html": &bintree{staticGeneratorCkeditorPluginsWysiwygareaSamplesFullpageHtml, map[string]*bintree{}},
						}},
					}},
				}},
				"samples": &bintree{nil, map[string]*bintree{
					"ajax.html": &bintree{staticGeneratorCkeditorSamplesAjaxHtml, map[string]*bintree{}},
					"api.html": &bintree{staticGeneratorCkeditorSamplesApiHtml, map[string]*bintree{}},
					"appendto.html": &bintree{staticGeneratorCkeditorSamplesAppendtoHtml, map[string]*bintree{}},
					"assets": &bintree{nil, map[string]*bintree{
						"inlineall": &bintree{nil, map[string]*bintree{
							"logo.png": &bintree{staticGeneratorCkeditorSamplesAssetsInlineallLogoPng, map[string]*bintree{}},
						}},
						"outputxhtml": &bintree{nil, map[string]*bintree{
							"outputxhtml.css": &bintree{staticGeneratorCkeditorSamplesAssetsOutputxhtmlOutputxhtmlCss, map[string]*bintree{}},
						}},
						"posteddata.php": &bintree{staticGeneratorCkeditorSamplesAssetsPosteddataPhp, map[string]*bintree{}},
						"sample.css": &bintree{staticGeneratorCkeditorSamplesAssetsSampleCss, map[string]*bintree{}},
						"sample.jpg": &bintree{staticGeneratorCkeditorSamplesAssetsSampleJpg, map[string]*bintree{}},
						"uilanguages": &bintree{nil, map[string]*bintree{
							"languages.js": &bintree{staticGeneratorCkeditorSamplesAssetsUilanguagesLanguagesJs, map[string]*bintree{}},
						}},
					}},
					"css": &bintree{nil, map[string]*bintree{
						"samples.css": &bintree{staticGeneratorCkeditorSamplesCssSamplesCss, map[string]*bintree{}},
					}},
					"datafiltering.html": &bintree{staticGeneratorCkeditorSamplesDatafilteringHtml, map[string]*bintree{}},
					"debug.log": &bintree{staticGeneratorCkeditorSamplesDebugLog, map[string]*bintree{}},
					"divreplace.html": &bintree{staticGeneratorCkeditorSamplesDivreplaceHtml, map[string]*bintree{}},
					"img": &bintree{nil, map[string]*bintree{
						"github-top.png": &bintree{staticGeneratorCkeditorSamplesImgGithubTopPng, map[string]*bintree{}},
						"header-bg.png": &bintree{staticGeneratorCkeditorSamplesImgHeaderBgPng, map[string]*bintree{}},
						"header-separator.png": &bintree{staticGeneratorCkeditorSamplesImgHeaderSeparatorPng, map[string]*bintree{}},
						"logo.png": &bintree{staticGeneratorCkeditorSamplesImgLogoPng, map[string]*bintree{}},
						"navigation-tip.png": &bintree{staticGeneratorCkeditorSamplesImgNavigationTipPng, map[string]*bintree{}},
					}},
					"index.html": &bintree{staticGeneratorCkeditorSamplesIndexHtml, map[string]*bintree{}},
					"inlineall.html": &bintree{staticGeneratorCkeditorSamplesInlineallHtml, map[string]*bintree{}},
					"inlinebycode.html": &bintree{staticGeneratorCkeditorSamplesInlinebycodeHtml, map[string]*bintree{}},
					"inlinetextarea.html": &bintree{staticGeneratorCkeditorSamplesInlinetextareaHtml, map[string]*bintree{}},
					"jquery.html": &bintree{staticGeneratorCkeditorSamplesJqueryHtml, map[string]*bintree{}},
					"js": &bintree{nil, map[string]*bintree{
						"sample.js": &bintree{staticGeneratorCkeditorSamplesJsSampleJs, map[string]*bintree{}},
						"sf.js": &bintree{staticGeneratorCkeditorSamplesJsSfJs, map[string]*bintree{}},
					}},
					"old": &bintree{nil, map[string]*bintree{
						"ajax.html": &bintree{staticGeneratorCkeditorSamplesOldAjaxHtml, map[string]*bintree{}},
						"api.html": &bintree{staticGeneratorCkeditorSamplesOldApiHtml, map[string]*bintree{}},
						"appendto.html": &bintree{staticGeneratorCkeditorSamplesOldAppendtoHtml, map[string]*bintree{}},
						"assets": &bintree{nil, map[string]*bintree{
							"inlineall": &bintree{nil, map[string]*bintree{
								"logo.png": &bintree{staticGeneratorCkeditorSamplesOldAssetsInlineallLogoPng, map[string]*bintree{}},
							}},
							"outputxhtml": &bintree{nil, map[string]*bintree{
								"outputxhtml.css": &bintree{staticGeneratorCkeditorSamplesOldAssetsOutputxhtmlOutputxhtmlCss, map[string]*bintree{}},
							}},
							"posteddata.php": &bintree{staticGeneratorCkeditorSamplesOldAssetsPosteddataPhp, map[string]*bintree{}},
							"sample.jpg": &bintree{staticGeneratorCkeditorSamplesOldAssetsSampleJpg, map[string]*bintree{}},
							"uilanguages": &bintree{nil, map[string]*bintree{
								"languages.js": &bintree{staticGeneratorCkeditorSamplesOldAssetsUilanguagesLanguagesJs, map[string]*bintree{}},
							}},
						}},
						"datafiltering.html": &bintree{staticGeneratorCkeditorSamplesOldDatafilteringHtml, map[string]*bintree{}},
						"dialog": &bintree{nil, map[string]*bintree{
							"assets": &bintree{nil, map[string]*bintree{
								"my_dialog.js": &bintree{staticGeneratorCkeditorSamplesOldDialogAssetsMy_dialogJs, map[string]*bintree{}},
							}},
							"dialog.html": &bintree{staticGeneratorCkeditorSamplesOldDialogDialogHtml, map[string]*bintree{}},
						}},
						"divreplace.html": &bintree{staticGeneratorCkeditorSamplesOldDivreplaceHtml, map[string]*bintree{}},
						"enterkey": &bintree{nil, map[string]*bintree{
							"enterkey.html": &bintree{staticGeneratorCkeditorSamplesOldEnterkeyEnterkeyHtml, map[string]*bintree{}},
						}},
						"htmlwriter": &bintree{nil, map[string]*bintree{
							"assets": &bintree{nil, map[string]*bintree{
								"outputforflash": &bintree{nil, map[string]*bintree{
									"outputforflash.fla": &bintree{staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashFla, map[string]*bintree{}},
									"outputforflash.swf": &bintree{staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashOutputforflashSwf, map[string]*bintree{}},
									"swfobject.js": &bintree{staticGeneratorCkeditorSamplesOldHtmlwriterAssetsOutputforflashSwfobjectJs, map[string]*bintree{}},
								}},
							}},
							"outputforflash.html": &bintree{staticGeneratorCkeditorSamplesOldHtmlwriterOutputforflashHtml, map[string]*bintree{}},
							"outputhtml.html": &bintree{staticGeneratorCkeditorSamplesOldHtmlwriterOutputhtmlHtml, map[string]*bintree{}},
						}},
						"index.html": &bintree{staticGeneratorCkeditorSamplesOldIndexHtml, map[string]*bintree{}},
						"inlineall.html": &bintree{staticGeneratorCkeditorSamplesOldInlineallHtml, map[string]*bintree{}},
						"inlinebycode.html": &bintree{staticGeneratorCkeditorSamplesOldInlinebycodeHtml, map[string]*bintree{}},
						"inlinetextarea.html": &bintree{staticGeneratorCkeditorSamplesOldInlinetextareaHtml, map[string]*bintree{}},
						"jquery.html": &bintree{staticGeneratorCkeditorSamplesOldJqueryHtml, map[string]*bintree{}},
						"magicline": &bintree{nil, map[string]*bintree{
							"magicline.html": &bintree{staticGeneratorCkeditorSamplesOldMagiclineMagiclineHtml, map[string]*bintree{}},
						}},
						"readonly.html": &bintree{staticGeneratorCkeditorSamplesOldReadonlyHtml, map[string]*bintree{}},
						"replacebyclass.html": &bintree{staticGeneratorCkeditorSamplesOldReplacebyclassHtml, map[string]*bintree{}},
						"replacebycode.html": &bintree{staticGeneratorCkeditorSamplesOldReplacebycodeHtml, map[string]*bintree{}},
						"sample.css": &bintree{staticGeneratorCkeditorSamplesOldSampleCss, map[string]*bintree{}},
						"sample.js": &bintree{staticGeneratorCkeditorSamplesOldSampleJs, map[string]*bintree{}},
						"sample_posteddata.php": &bintree{staticGeneratorCkeditorSamplesOldSample_posteddataPhp, map[string]*bintree{}},
						"tabindex.html": &bintree{staticGeneratorCkeditorSamplesOldTabindexHtml, map[string]*bintree{}},
						"toolbar": &bintree{nil, map[string]*bintree{
							"toolbar.html": &bintree{staticGeneratorCkeditorSamplesOldToolbarToolbarHtml, map[string]*bintree{}},
						}},
						"uicolor.html": &bintree{staticGeneratorCkeditorSamplesOldUicolorHtml, map[string]*bintree{}},
						"uilanguages.html": &bintree{staticGeneratorCkeditorSamplesOldUilanguagesHtml, map[string]*bintree{}},
						"wysiwygarea": &bintree{nil, map[string]*bintree{
							"fullpage.html": &bintree{staticGeneratorCkeditorSamplesOldWysiwygareaFullpageHtml, map[string]*bintree{}},
						}},
						"xhtmlstyle.html": &bintree{staticGeneratorCkeditorSamplesOldXhtmlstyleHtml, map[string]*bintree{}},
					}},
					"plugins": &bintree{nil, map[string]*bintree{
						"dialog": &bintree{nil, map[string]*bintree{
							"assets": &bintree{nil, map[string]*bintree{
								"my_dialog.js": &bintree{staticGeneratorCkeditorSamplesPluginsDialogAssetsMy_dialogJs, map[string]*bintree{}},
							}},
							"dialog.html": &bintree{staticGeneratorCkeditorSamplesPluginsDialogDialogHtml, map[string]*bintree{}},
						}},
						"enterkey": &bintree{nil, map[string]*bintree{
							"enterkey.html": &bintree{staticGeneratorCkeditorSamplesPluginsEnterkeyEnterkeyHtml, map[string]*bintree{}},
						}},
						"htmlwriter": &bintree{nil, map[string]*bintree{
							"assets": &bintree{nil, map[string]*bintree{
								"outputforflash": &bintree{nil, map[string]*bintree{
									"outputforflash.fla": &bintree{staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashFla, map[string]*bintree{}},
									"outputforflash.swf": &bintree{staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashOutputforflashSwf, map[string]*bintree{}},
									"swfobject.js": &bintree{staticGeneratorCkeditorSamplesPluginsHtmlwriterAssetsOutputforflashSwfobjectJs, map[string]*bintree{}},
								}},
							}},
							"outputforflash.html": &bintree{staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputforflashHtml, map[string]*bintree{}},
							"outputhtml.html": &bintree{staticGeneratorCkeditorSamplesPluginsHtmlwriterOutputhtmlHtml, map[string]*bintree{}},
						}},
						"magicline": &bintree{nil, map[string]*bintree{
							"magicline.html": &bintree{staticGeneratorCkeditorSamplesPluginsMagiclineMagiclineHtml, map[string]*bintree{}},
						}},
						"toolbar": &bintree{nil, map[string]*bintree{
							"toolbar.html": &bintree{staticGeneratorCkeditorSamplesPluginsToolbarToolbarHtml, map[string]*bintree{}},
						}},
						"wysiwygarea": &bintree{nil, map[string]*bintree{
							"fullpage.html": &bintree{staticGeneratorCkeditorSamplesPluginsWysiwygareaFullpageHtml, map[string]*bintree{}},
						}},
					}},
					"readonly.html": &bintree{staticGeneratorCkeditorSamplesReadonlyHtml, map[string]*bintree{}},
					"replacebyclass.html": &bintree{staticGeneratorCkeditorSamplesReplacebyclassHtml, map[string]*bintree{}},
					"replacebycode.html": &bintree{staticGeneratorCkeditorSamplesReplacebycodeHtml, map[string]*bintree{}},
					"sample.css": &bintree{staticGeneratorCkeditorSamplesSampleCss, map[string]*bintree{}},
					"sample.js": &bintree{staticGeneratorCkeditorSamplesSampleJs, map[string]*bintree{}},
					"sample_posteddata.php": &bintree{staticGeneratorCkeditorSamplesSample_posteddataPhp, map[string]*bintree{}},
					"tabindex.html": &bintree{staticGeneratorCkeditorSamplesTabindexHtml, map[string]*bintree{}},
					"toolbarconfigurator": &bintree{nil, map[string]*bintree{
						"bender.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorBenderJs, map[string]*bintree{}},
						"css": &bintree{nil, map[string]*bintree{
							"fontello.css": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorCssFontelloCss, map[string]*bintree{}},
						}},
						"font": &bintree{nil, map[string]*bintree{
							"LICENSE.txt": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorFontLicenseTxt, map[string]*bintree{}},
							"config.json": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorFontConfigJson, map[string]*bintree{}},
							"fontello.eot": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloEot, map[string]*bintree{}},
							"fontello.svg": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloSvg, map[string]*bintree{}},
							"fontello.ttf": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloTtf, map[string]*bintree{}},
							"fontello.woff": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorFontFontelloWoff, map[string]*bintree{}},
						}},
						"index.html": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorIndexHtml, map[string]*bintree{}},
						"js": &bintree{nil, map[string]*bintree{
							"abstracttoolbarmodifier.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorJsAbstracttoolbarmodifierJs, map[string]*bintree{}},
							"fulltoolbareditor.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorJsFulltoolbareditorJs, map[string]*bintree{}},
							"toolbarmodifier.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbarmodifierJs, map[string]*bintree{}},
							"toolbartextmodifier.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorJsToolbartextmodifierJs, map[string]*bintree{}},
						}},
						"less": &bintree{nil, map[string]*bintree{
							"base.less": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLessBaseLess, map[string]*bintree{}},
							"toolbarmodifier.less": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLessToolbarmodifierLess, map[string]*bintree{}},
						}},
						"lib": &bintree{nil, map[string]*bintree{
							"codemirror": &bintree{nil, map[string]*bintree{
								"LICENSE": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorLicense, map[string]*bintree{}},
								"README.md": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorReadmeMd, map[string]*bintree{}},
								"codemirror.css": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorCss, map[string]*bintree{}},
								"codemirror.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorCodemirrorJs, map[string]*bintree{}},
								"javascript.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorJavascriptJs, map[string]*bintree{}},
								"neo.css": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorNeoCss, map[string]*bintree{}},
								"show-hint.css": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintCss, map[string]*bintree{}},
								"show-hint.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorLibCodemirrorShowHintJs, map[string]*bintree{}},
							}},
						}},
						"package.json": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorPackageJson, map[string]*bintree{}},
						"tests": &bintree{nil, map[string]*bintree{
							"one.js": &bintree{staticGeneratorCkeditorSamplesToolbarconfiguratorTestsOneJs, map[string]*bintree{}},
						}},
					}},
					"uicolor.html": &bintree{staticGeneratorCkeditorSamplesUicolorHtml, map[string]*bintree{}},
					"uilanguages.html": &bintree{staticGeneratorCkeditorSamplesUilanguagesHtml, map[string]*bintree{}},
					"xhtmlstyle.html": &bintree{staticGeneratorCkeditorSamplesXhtmlstyleHtml, map[string]*bintree{}},
				}},
				"skins": &bintree{nil, map[string]*bintree{
					"bootstrapck": &bintree{nil, map[string]*bintree{
						".temp": &bintree{nil, map[string]*bintree{
							"css": &bintree{nil, map[string]*bintree{
								"dialog.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssDialogCss, map[string]*bintree{}},
								"dialog_ie.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ieCss, map[string]*bintree{}},
								"dialog_ie7.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie7Css, map[string]*bintree{}},
								"dialog_ie8.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_ie8Css, map[string]*bintree{}},
								"dialog_iequirks.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_iequirksCss, map[string]*bintree{}},
								"dialog_opera.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssDialog_operaCss, map[string]*bintree{}},
								"editor.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssEditorCss, map[string]*bintree{}},
								"editor_gecko.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_geckoCss, map[string]*bintree{}},
								"editor_ie.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ieCss, map[string]*bintree{}},
								"editor_ie7.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie7Css, map[string]*bintree{}},
								"editor_ie8.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_ie8Css, map[string]*bintree{}},
								"editor_iequirks.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckTempCssEditor_iequirksCss, map[string]*bintree{}},
							}},
						}},
						"dev": &bintree{nil, map[string]*bintree{
							"icons16.svg": &bintree{staticGeneratorCkeditorSkinsBootstrapckDevIcons16Svg, map[string]*bintree{}},
							"icons32.svg": &bintree{staticGeneratorCkeditorSkinsBootstrapckDevIcons32Svg, map[string]*bintree{}},
							"locations.json": &bintree{staticGeneratorCkeditorSkinsBootstrapckDevLocationsJson, map[string]*bintree{}},
						}},
						"dialog.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckDialogCss, map[string]*bintree{}},
						"dialog_ie.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckDialog_ieCss, map[string]*bintree{}},
						"dialog_ie7.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckDialog_ie7Css, map[string]*bintree{}},
						"dialog_ie8.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckDialog_ie8Css, map[string]*bintree{}},
						"dialog_iequirks.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckDialog_iequirksCss, map[string]*bintree{}},
						"dialog_opera.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckDialog_operaCss, map[string]*bintree{}},
						"editor.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckEditorCss, map[string]*bintree{}},
						"editor_gecko.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckEditor_geckoCss, map[string]*bintree{}},
						"editor_ie.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckEditor_ieCss, map[string]*bintree{}},
						"editor_ie7.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckEditor_ie7Css, map[string]*bintree{}},
						"editor_ie8.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckEditor_ie8Css, map[string]*bintree{}},
						"editor_iequirks.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckEditor_iequirksCss, map[string]*bintree{}},
						"icons.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckIconsPng, map[string]*bintree{}},
						"icons_hidpi.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckIcons_hidpiPng, map[string]*bintree{}},
						"images": &bintree{nil, map[string]*bintree{
							"arrow.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesArrowPng, map[string]*bintree{}},
							"close.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesClosePng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"close.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesHidpiClosePng, map[string]*bintree{}},
								"lock-open.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockOpenPng, map[string]*bintree{}},
								"lock.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesHidpiLockPng, map[string]*bintree{}},
								"refresh.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesHidpiRefreshPng, map[string]*bintree{}},
							}},
							"lock-open.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesLockOpenPng, map[string]*bintree{}},
							"lock.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesLockPng, map[string]*bintree{}},
							"refresh.png": &bintree{staticGeneratorCkeditorSkinsBootstrapckImagesRefreshPng, map[string]*bintree{}},
						}},
						"readme.md": &bintree{staticGeneratorCkeditorSkinsBootstrapckReadmeMd, map[string]*bintree{}},
						"sample": &bintree{nil, map[string]*bintree{
							"bootstrapck-sample.html": &bintree{staticGeneratorCkeditorSkinsBootstrapckSampleBootstrapckSampleHtml, map[string]*bintree{}},
							"css": &bintree{nil, map[string]*bintree{
								"bootstrapck-sample.css": &bintree{staticGeneratorCkeditorSkinsBootstrapckSampleCssBootstrapckSampleCss, map[string]*bintree{}},
							}},
							"js": &bintree{nil, map[string]*bintree{
								"analytics.js": &bintree{staticGeneratorCkeditorSkinsBootstrapckSampleJsAnalyticsJs, map[string]*bintree{}},
								"jquery-1.11.0.min.js": &bintree{staticGeneratorCkeditorSkinsBootstrapckSampleJsJquery1110MinJs, map[string]*bintree{}},
							}},
						}},
						"scss": &bintree{nil, map[string]*bintree{
							"browser-specific": &bintree{nil, map[string]*bintree{
								"gecko": &bintree{nil, map[string]*bintree{
									"editor_gecko.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificGeckoEditor_geckoScss, map[string]*bintree{}},
								}},
								"ie": &bintree{nil, map[string]*bintree{
									"dialog_ie.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeDialog_ieScss, map[string]*bintree{}},
									"editor_ie.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIeEditor_ieScss, map[string]*bintree{}},
								}},
								"ie7": &bintree{nil, map[string]*bintree{
									"dialog_ie7.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Dialog_ie7Scss, map[string]*bintree{}},
									"editor_ie7.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe7Editor_ie7Scss, map[string]*bintree{}},
								}},
								"ie8": &bintree{nil, map[string]*bintree{
									"dialog_ie8.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Dialog_ie8Scss, map[string]*bintree{}},
									"editor_ie8.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIe8Editor_ie8Scss, map[string]*bintree{}},
								}},
								"iequirks": &bintree{nil, map[string]*bintree{
									"dialog_iequirks.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksDialog_iequirksScss, map[string]*bintree{}},
									"editor_iequirks.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificIequirksEditor_iequirksScss, map[string]*bintree{}},
								}},
								"opera": &bintree{nil, map[string]*bintree{
									"dialog_opera.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssBrowserSpecificOperaDialog_operaScss, map[string]*bintree{}},
								}},
							}},
							"components": &bintree{nil, map[string]*bintree{
								"_colorpanel.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_colorpanelScss, map[string]*bintree{}},
								"_elementspath.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_elementspathScss, map[string]*bintree{}},
								"_mainui.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_mainuiScss, map[string]*bintree{}},
								"_menu.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_menuScss, map[string]*bintree{}},
								"_panel.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_panelScss, map[string]*bintree{}},
								"_presets.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_presetsScss, map[string]*bintree{}},
								"_reset.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_resetScss, map[string]*bintree{}},
								"_richcombo.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_richcomboScss, map[string]*bintree{}},
								"_toolbar.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponents_toolbarScss, map[string]*bintree{}},
								"editor.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssComponentsEditorScss, map[string]*bintree{}},
							}},
							"config": &bintree{nil, map[string]*bintree{
								"_colors.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssConfig_colorsScss, map[string]*bintree{}},
								"_config.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssConfig_configScss, map[string]*bintree{}},
								"_defaults.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssConfig_defaultsScss, map[string]*bintree{}},
							}},
							"dialog": &bintree{nil, map[string]*bintree{
								"dialog.scss": &bintree{staticGeneratorCkeditorSkinsBootstrapckScssDialogDialogScss, map[string]*bintree{}},
							}},
						}},
						"skin.js": &bintree{staticGeneratorCkeditorSkinsBootstrapckSkinJs, map[string]*bintree{}},
					}},
					"moono": &bintree{nil, map[string]*bintree{
						"dialog.css": &bintree{staticGeneratorCkeditorSkinsMoonoDialogCss, map[string]*bintree{}},
						"dialog_ie.css": &bintree{staticGeneratorCkeditorSkinsMoonoDialog_ieCss, map[string]*bintree{}},
						"dialog_ie7.css": &bintree{staticGeneratorCkeditorSkinsMoonoDialog_ie7Css, map[string]*bintree{}},
						"dialog_ie8.css": &bintree{staticGeneratorCkeditorSkinsMoonoDialog_ie8Css, map[string]*bintree{}},
						"dialog_iequirks.css": &bintree{staticGeneratorCkeditorSkinsMoonoDialog_iequirksCss, map[string]*bintree{}},
						"dialog_opera.css": &bintree{staticGeneratorCkeditorSkinsMoonoDialog_operaCss, map[string]*bintree{}},
						"editor.css": &bintree{staticGeneratorCkeditorSkinsMoonoEditorCss, map[string]*bintree{}},
						"editor_gecko.css": &bintree{staticGeneratorCkeditorSkinsMoonoEditor_geckoCss, map[string]*bintree{}},
						"editor_ie.css": &bintree{staticGeneratorCkeditorSkinsMoonoEditor_ieCss, map[string]*bintree{}},
						"editor_ie7.css": &bintree{staticGeneratorCkeditorSkinsMoonoEditor_ie7Css, map[string]*bintree{}},
						"editor_ie8.css": &bintree{staticGeneratorCkeditorSkinsMoonoEditor_ie8Css, map[string]*bintree{}},
						"editor_iequirks.css": &bintree{staticGeneratorCkeditorSkinsMoonoEditor_iequirksCss, map[string]*bintree{}},
						"icons.png": &bintree{staticGeneratorCkeditorSkinsMoonoIconsPng, map[string]*bintree{}},
						"icons_hidpi.png": &bintree{staticGeneratorCkeditorSkinsMoonoIcons_hidpiPng, map[string]*bintree{}},
						"images": &bintree{nil, map[string]*bintree{
							"arrow.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesArrowPng, map[string]*bintree{}},
							"close.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesClosePng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"close.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesHidpiClosePng, map[string]*bintree{}},
								"lock-open.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesHidpiLockOpenPng, map[string]*bintree{}},
								"lock.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesHidpiLockPng, map[string]*bintree{}},
								"refresh.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesHidpiRefreshPng, map[string]*bintree{}},
							}},
							"lock-open.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesLockOpenPng, map[string]*bintree{}},
							"lock.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesLockPng, map[string]*bintree{}},
							"refresh.png": &bintree{staticGeneratorCkeditorSkinsMoonoImagesRefreshPng, map[string]*bintree{}},
						}},
						"readme.md": &bintree{staticGeneratorCkeditorSkinsMoonoReadmeMd, map[string]*bintree{}},
					}},
					"moono-lisa": &bintree{nil, map[string]*bintree{
						"dialog.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaDialogCss, map[string]*bintree{}},
						"dialog_ie.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaDialog_ieCss, map[string]*bintree{}},
						"dialog_ie8.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaDialog_ie8Css, map[string]*bintree{}},
						"dialog_iequirks.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaDialog_iequirksCss, map[string]*bintree{}},
						"editor.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaEditorCss, map[string]*bintree{}},
						"editor_gecko.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaEditor_geckoCss, map[string]*bintree{}},
						"editor_ie.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaEditor_ieCss, map[string]*bintree{}},
						"editor_ie8.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaEditor_ie8Css, map[string]*bintree{}},
						"editor_iequirks.css": &bintree{staticGeneratorCkeditorSkinsMoonoLisaEditor_iequirksCss, map[string]*bintree{}},
						"icons.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaIconsPng, map[string]*bintree{}},
						"icons_hidpi.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaIcons_hidpiPng, map[string]*bintree{}},
						"images": &bintree{nil, map[string]*bintree{
							"arrow.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesArrowPng, map[string]*bintree{}},
							"close.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesClosePng, map[string]*bintree{}},
							"hidpi": &bintree{nil, map[string]*bintree{
								"close.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiClosePng, map[string]*bintree{}},
								"lock-open.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockOpenPng, map[string]*bintree{}},
								"lock.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiLockPng, map[string]*bintree{}},
								"refresh.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesHidpiRefreshPng, map[string]*bintree{}},
							}},
							"lock-open.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesLockOpenPng, map[string]*bintree{}},
							"lock.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesLockPng, map[string]*bintree{}},
							"refresh.png": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesRefreshPng, map[string]*bintree{}},
							"spinner.gif": &bintree{staticGeneratorCkeditorSkinsMoonoLisaImagesSpinnerGif, map[string]*bintree{}},
						}},
						"readme.md": &bintree{staticGeneratorCkeditorSkinsMoonoLisaReadmeMd, map[string]*bintree{}},
					}},
				}},
				"styles.js": &bintree{staticGeneratorCkeditorStylesJs, map[string]*bintree{}},
			}},
			"js": &bintree{nil, map[string]*bintree{
				"code-generator.js": &bintree{staticGeneratorJsCodeGeneratorJs, map[string]*bintree{}},
				"grammar.txt": &bintree{staticGeneratorJsGrammarTxt, map[string]*bintree{}},
				"jquery-ui.js": &bintree{staticGeneratorJsJqueryUiJs, map[string]*bintree{}},
				"jquery-ui_orig.js": &bintree{staticGeneratorJsJqueryUi_origJs, map[string]*bintree{}},
				"jquery.ui.touch-punch.min.js": &bintree{staticGeneratorJsJqueryUiTouchPunchMinJs, map[string]*bintree{}},
				"libs": &bintree{nil, map[string]*bintree{
					"jquery-3.2.1.min.js": &bintree{staticGeneratorJsLibsJquery321MinJs, map[string]*bintree{}},
					"js-class.js": &bintree{staticGeneratorJsLibsJsClassJs, map[string]*bintree{}},
					"peg-0.10.0.js": &bintree{staticGeneratorJsLibsPeg0100Js, map[string]*bintree{}},
				}},
				"main.js": &bintree{staticGeneratorJsMainJs, map[string]*bintree{}},
				"parser.html": &bintree{staticGeneratorJsParserHtml, map[string]*bintree{}},
				"parser.js": &bintree{staticGeneratorJsParserJs, map[string]*bintree{}},
				"scripts.js": &bintree{staticGeneratorJsScriptsJs, map[string]*bintree{}},
				"scripts_orig.js": &bintree{staticGeneratorJsScripts_origJs, map[string]*bintree{}},
			}},
			"style.css": &bintree{staticGeneratorStyleCss, map[string]*bintree{}},
		}},
		"generator.html": &bintree{staticGeneratorHtml, map[string]*bintree{}},
		"generator_orig.html": &bintree{staticGenerator_origHtml, map[string]*bintree{}},
		"gov_birth_statement.html": &bintree{staticGov_birth_statementHtml, map[string]*bintree{}},
		"gov_citizens.html": &bintree{staticGov_citizensHtml, map[string]*bintree{}},
		"gov_create_budget.html": &bintree{staticGov_create_budgetHtml, map[string]*bintree{}},
		"gov_currency_exchange.html": &bintree{staticGov_currency_exchangeHtml, map[string]*bintree{}},
		"gov_date_death.html": &bintree{staticGov_date_deathHtml, map[string]*bintree{}},
		"gov_register_citizen.html": &bintree{staticGov_register_citizenHtml, map[string]*bintree{}},
		"gov_register_property.html": &bintree{staticGov_register_propertyHtml, map[string]*bintree{}},
		"gov_settings.html": &bintree{staticGov_settingsHtml, map[string]*bintree{}},
		"gov_shares_exchange.html": &bintree{staticGov_shares_exchangeHtml, map[string]*bintree{}},
		"gov_taxes.html": &bintree{staticGov_taxesHtml, map[string]*bintree{}},
		"health_buy_medicament.html": &bintree{staticHealth_buy_medicamentHtml, map[string]*bintree{}},
		"health_entries_clinic.html": &bintree{staticHealth_entries_clinicHtml, map[string]*bintree{}},
		"health_facility.html": &bintree{staticHealth_facilityHtml, map[string]*bintree{}},
		"health_immunization_records.html": &bintree{staticHealth_immunization_recordsHtml, map[string]*bintree{}},
		"health_medical_record.html": &bintree{staticHealth_medical_recordHtml, map[string]*bintree{}},
		"health_medication_records.html": &bintree{staticHealth_medication_recordsHtml, map[string]*bintree{}},
		"health_patient.html": &bintree{staticHealth_patientHtml, map[string]*bintree{}},
		"health_procedure.html": &bintree{staticHealth_procedureHtml, map[string]*bintree{}},
		"health_symptom.html": &bintree{staticHealth_symptomHtml, map[string]*bintree{}},
		"health_vital_signs.html": &bintree{staticHealth_vital_signsHtml, map[string]*bintree{}},
		"history.html": &bintree{staticHistoryHtml, map[string]*bintree{}},
		"html_elements.html": &bintree{staticHtml_elementsHtml, map[string]*bintree{}},
		"img": &bintree{nil, map[string]*bintree{
			"US.svg": &bintree{staticImgUsSvg, map[string]*bintree{}},
			"apps": &bintree{nil, map[string]*bintree{
				"ava.png": &bintree{staticImgAppsAvaPng, map[string]*bintree{}},
				"business.png": &bintree{staticImgAppsBusinessPng, map[string]*bintree{}},
				"elections.jpg": &bintree{staticImgAppsElectionsJpg, map[string]*bintree{}},
				"euro.jpg": &bintree{staticImgAppsEuroJpg, map[string]*bintree{}},
				"forex.jpg": &bintree{staticImgAppsForexJpg, map[string]*bintree{}},
				"forex.png": &bintree{staticImgAppsForexPng, map[string]*bintree{}},
				"messenger.png": &bintree{staticImgAppsMessengerPng, map[string]*bintree{}},
				"money.jpg": &bintree{staticImgAppsMoneyJpg, map[string]*bintree{}},
				"money.png": &bintree{staticImgAppsMoneyPng, map[string]*bintree{}},
				"property.jpg": &bintree{staticImgAppsPropertyJpg, map[string]*bintree{}},
			}},
			"avatar.svg": &bintree{staticImgAvatarSvg, map[string]*bintree{}},
			"back.svg": &bintree{staticImgBackSvg, map[string]*bintree{}},
			"bg.jpg": &bintree{staticImgBgJpg, map[string]*bintree{}},
			"bg.png": &bintree{staticImgBgPng, map[string]*bintree{}},
			"bg1.jpg": &bintree{staticImgBg1Jpg, map[string]*bintree{}},
			"bg10.jpg": &bintree{staticImgBg10Jpg, map[string]*bintree{}},
			"bg2.jpg": &bintree{staticImgBg2Jpg, map[string]*bintree{}},
			"bg3.jpg": &bintree{staticImgBg3Jpg, map[string]*bintree{}},
			"bg4.jpg": &bintree{staticImgBg4Jpg, map[string]*bintree{}},
			"bg5.jpg": &bintree{staticImgBg5Jpg, map[string]*bintree{}},
			"bg6.jpg": &bintree{staticImgBg6Jpg, map[string]*bintree{}},
			"bg7.jpg": &bintree{staticImgBg7Jpg, map[string]*bintree{}},
			"bg8.jpg": &bintree{staticImgBg8Jpg, map[string]*bintree{}},
			"bg9.jpg": &bintree{staticImgBg9Jpg, map[string]*bintree{}},
			"clear.png": &bintree{staticImgClearPng, map[string]*bintree{}},
			"dummy.png": &bintree{staticImgDummyPng, map[string]*bintree{}},
			"favicon.ico": &bintree{staticImgFaviconIco, map[string]*bintree{}},
			"installed.png": &bintree{staticImgInstalledPng, map[string]*bintree{}},
			"loading.gif": &bintree{staticImgLoadingGif, map[string]*bintree{}},
			"lock-bg.jpg": &bintree{staticImgLockBgJpg, map[string]*bintree{}},
			"logo.png": &bintree{staticImgLogoPng, map[string]*bintree{}},
			"logo.svg": &bintree{staticImgLogoSvg, map[string]*bintree{}},
			"logo_null.svg": &bintree{staticImgLogo_nullSvg, map[string]*bintree{}},
			"logo_ok.svg": &bintree{staticImgLogo_okSvg, map[string]*bintree{}},
			"main_loader.gif": &bintree{staticImgMain_loaderGif, map[string]*bintree{}},
			"marker_red.png": &bintree{staticImgMarker_redPng, map[string]*bintree{}},
			"mb-sample.jpg": &bintree{staticImgMbSampleJpg, map[string]*bintree{}},
			"mockup.png": &bintree{staticImgMockupPng, map[string]*bintree{}},
			"no_map.png": &bintree{staticImgNo_mapPng, map[string]*bintree{}},
			"noflag.svg": &bintree{staticImgNoflagSvg, map[string]*bintree{}},
			"profile-bg.jpg": &bintree{staticImgProfileBgJpg, map[string]*bintree{}},
			"radio_icon.png": &bintree{staticImgRadio_iconPng, map[string]*bintree{}},
			"sort_asc.png": &bintree{staticImgSort_ascPng, map[string]*bintree{}},
			"sort_asc_disabled.png": &bintree{staticImgSort_asc_disabledPng, map[string]*bintree{}},
			"sort_both.png": &bintree{staticImgSort_bothPng, map[string]*bintree{}},
			"sort_desc.png": &bintree{staticImgSort_descPng, map[string]*bintree{}},
			"sort_desc_disabled.png": &bintree{staticImgSort_desc_disabledPng, map[string]*bintree{}},
			"spacer.gif": &bintree{staticImgSpacerGif, map[string]*bintree{}},
			"squares.gif": &bintree{staticImgSquaresGif, map[string]*bintree{}},
			"user": &bintree{nil, map[string]*bintree{
				"01.jpg": &bintree{staticImgUser01Jpg, map[string]*bintree{}},
				"02.jpg": &bintree{staticImgUser02Jpg, map[string]*bintree{}},
				"03.jpg": &bintree{staticImgUser03Jpg, map[string]*bintree{}},
				"04.jpg": &bintree{staticImgUser04Jpg, map[string]*bintree{}},
				"05.jpg": &bintree{staticImgUser05Jpg, map[string]*bintree{}},
				"06.jpg": &bintree{staticImgUser06Jpg, map[string]*bintree{}},
				"07.jpg": &bintree{staticImgUser07Jpg, map[string]*bintree{}},
				"08.jpg": &bintree{staticImgUser08Jpg, map[string]*bintree{}},
				"09.jpg": &bintree{staticImgUser09Jpg, map[string]*bintree{}},
				"10.jpg": &bintree{staticImgUser10Jpg, map[string]*bintree{}},
				"11.jpg": &bintree{staticImgUser11Jpg, map[string]*bintree{}},
				"12.jpg": &bintree{staticImgUser12Jpg, map[string]*bintree{}},
				"13.jpg": &bintree{staticImgUser13Jpg, map[string]*bintree{}},
			}},
		}},
		"index.html": &bintree{staticIndexHtml, map[string]*bintree{}},
		"install_step_0.html": &bintree{staticInstall_step_0Html, map[string]*bintree{}},
		"install_step_1.html": &bintree{staticInstall_step_1Html, map[string]*bintree{}},
		"interface.html": &bintree{staticInterfaceHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"app.js": &bintree{staticJsAppJs, map[string]*bintree{}},
			"elliptic.min.js": &bintree{staticJsEllipticMinJs, map[string]*bintree{}},
			"index.js": &bintree{staticJsIndexJs, map[string]*bintree{}},
			"keys.js": &bintree{staticJsKeysJs, map[string]*bintree{}},
			"map.js": &bintree{staticJsMapJs, map[string]*bintree{}},
			"photoEditor": &bintree{nil, map[string]*bintree{
				"editor.js": &bintree{staticJsPhotoeditorEditorJs, map[string]*bintree{}},
			}},
			"triangles.js": &bintree{staticJsTrianglesJs, map[string]*bintree{}},
		}},
		"lang": &bintree{nil, map[string]*bintree{
			"flags": &bintree{nil, map[string]*bintree{
				"flags.png": &bintree{staticLangFlagsFlagsPng, map[string]*bintree{}},
			}},
			"gb.js": &bintree{staticLangGbJs, map[string]*bintree{}},
			"nl.js": &bintree{staticLangNlJs, map[string]*bintree{}},
		}},
		"languages.html": &bintree{staticLanguagesHtml, map[string]*bintree{}},
		"list_of_tables.html": &bintree{staticList_of_tablesHtml, map[string]*bintree{}},
		"login.html": &bintree{staticLoginHtml, map[string]*bintree{}},
		"menu.html": &bintree{staticMenuHtml, map[string]*bintree{}},
		"modal_anonym.html": &bintree{staticModal_anonymHtml, map[string]*bintree{}},
		"modal_avatar.html": &bintree{staticModal_avatarHtml, map[string]*bintree{}},
		"modal_block_detail.html": &bintree{staticModal_block_detailHtml, map[string]*bintree{}},
		"modal_map.html": &bintree{staticModal_mapHtml, map[string]*bintree{}},
		"modal_signature.html": &bintree{staticModal_signatureHtml, map[string]*bintree{}},
		"new_state.html": &bintree{staticNew_stateHtml, map[string]*bintree{}},
		"new_table.html": &bintree{staticNew_tableHtml, map[string]*bintree{}},
		"page_template.html": &bintree{staticPage_templateHtml, map[string]*bintree{}},
		"pass.html": &bintree{staticPassHtml, map[string]*bintree{}},
		"psw.html": &bintree{staticPswHtml, map[string]*bintree{}},
		"restore_access.html": &bintree{staticRestore_accessHtml, map[string]*bintree{}},
		"restore_access_active.html": &bintree{staticRestore_access_activeHtml, map[string]*bintree{}},
		"row_history.html": &bintree{staticRow_historyHtml, map[string]*bintree{}},
		"schema.sql": &bintree{staticSchemaSql, map[string]*bintree{}},
		"show_table.html": &bintree{staticShow_tableHtml, map[string]*bintree{}},
		"signatures.html": &bintree{staticSignaturesHtml, map[string]*bintree{}},
		"signatures_list.html": &bintree{staticSignatures_listHtml, map[string]*bintree{}},
		"signatures_new.html": &bintree{staticSignatures_newHtml, map[string]*bintree{}},
		"smart_request_citizen.html": &bintree{staticSmart_request_citizenHtml, map[string]*bintree{}},
		"state_laws.html": &bintree{staticState_lawsHtml, map[string]*bintree{}},
		"state_parameters.html": &bintree{staticState_parametersHtml, map[string]*bintree{}},
		"system_info.html": &bintree{staticSystem_infoHtml, map[string]*bintree{}},
		"test.html": &bintree{staticTestHtml, map[string]*bintree{}},
		"testnet.html": &bintree{staticTestnetHtml, map[string]*bintree{}},
		"testnet_register.html": &bintree{staticTestnet_registerHtml, map[string]*bintree{}},
		"tx_btncont.html": &bintree{staticTx_btncontHtml, map[string]*bintree{}},
		"tx_button.html": &bintree{staticTx_buttonHtml, map[string]*bintree{}},
		"tx_form.html": &bintree{staticTx_formHtml, map[string]*bintree{}},
		"updating_blockchain.html": &bintree{staticUpdating_blockchainHtml, map[string]*bintree{}},
		"upgrade.html": &bintree{staticUpgradeHtml, map[string]*bintree{}},
		"wallet_history.html": &bintree{staticWallet_historyHtml, map[string]*bintree{}},
		"widgets.html": &bintree{staticWidgetsHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

